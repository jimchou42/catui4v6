{"version":3,"sources":["iplat.ui.min.js"],"names":["nodeSwap","treeview","path","$","each","i","item","itemById","dataSource","get","id","parent","findByUid","uid","length","traversal","nodes","items","childs","j","node","append","text","select","_getPath","removeNode","dataItem","appendNodes","parentNode","remove","_getPathByUid","push","pop","children","_data","map2FlatX","data","itemsName","map","ITEMS_NAME","list","_map2Array","arrayList","array","nodeMove","tree1","tree2","nodeId","nodeEname","split","dsFlat","_","nodePath","formatNative","obj","str","JSON","stringify","isAvailable","undefined","isBatchAvailable","getContextPath","IPLATUI","CONTEXT_PATH","extend","IPLAT","window","mainVersion","releaseVersion","releaseTime","isNull","isUndefined","isBoolean","isNumber","isString","isDate","kendo","culture","Model","fn","__ClassName__","isEiColumn","eiColumn","isEiBlockMeta","eiBlockMeta","isEiBlock","eiBlock","isEiInfo","eiInfo","isKendoModel","kendoModel","isEmptyString","isBlankString","replace","childWindows","__iplat__closeWindows","keepSelf","childWindow","isFunction","close","getParentWindow","currentWindow","IPLAT_INDEX_WINDOW","opener","top","ex","getParameterByName","parameterName","url","location","href","regex","RegExp","results","exec","decodeURIComponent","VERSION","htmlEncode","htmlDecode","value","AJAX","ContentType","FORM","NOOP","FORMAT","DATE_17","DATE_14","DATE_8","DATE_17_PR","DATE_17_SE","DATE_14_PR","DATE_14_SE","DATE_8_PR","DATE_8_SE","KEY_CODE","Tab","Enter","CONSTANTS","EXPORT_FLAG","EXPORT_FILE_TYPE","EXPORT_BLOCK_ID","EXPORT_EIINFO","EXPORT_FILE_NAME","EXPORT_SERVICE_NAME","EXPORT_METHOD_NAME","EXPORT_QUERY_EIINFO","QUERY_BLOCK_ID","RESULT_BLOCK_ID","BACKFILL_BUTTON_NAME","CONFIRM_BUTTON_NAME","CANCEL_BUTTON_NAME","Browser","Util","unbindHandlers","target","eventType","Observable","handlers","_events","unbind","bindHandlers","handler","bind","block2Model","inBlock","indexMap","row","getRows","model","key","buildAjaxOption","ajaxOption","defaults","type","dataType","contentType","read","create","update","destroy","buildCRUDFunction","transport","transporter","action","ajaxOptions","isPlainObject","ajax","operation","params","_buildFilter","_buildModels","_buildRequest","success","result","error","getComboText","values","columnTemplate","valueField","find","element","template","filterAdapter","filters","postEiInfo","whereSQL","OPERATORS","eq","neq","isnull","isnotnull","isempty","isnotempty","startWith","contains","doesnotcontain","endwith","lt","gt","lte","gte","logic","_simpleFilter","filter","set","_complexFilter","SQL","format","join","sortAdapter","sort","orderBy","isArray","index","parseBtnClass","btnCss","btnClass","resources","trim","match","inIframe","self","e","handleFrameTitle","frameWindow","formCname","formEname","frameElement","$head","keepHeader","boolConfigHelper","arguments","formatErrorMessage","errorMessage","msgObj","msgKey","msg","detailMsg","errors","messages","test","pickDOMAttributes","options","DOM_ATTRIBUTES","VALIDATE","HTML","keys","concat","pick","indexOf","simpleDate","date","delimiter","year","getFullYear","month","getMonth","day","getDate","ColorBox","GRID_BOTTOM_BORDER","GRID_BOTTOM_BORDER_HOVER","INVALID_COLOR","progress","toggle","ui","EFPopupInput","enable","state","$wrapper","$element","attr","addClass","prop","removeClass","readonly","EFGrid","CREATE_ACTION","READ_ACTION","UPDATE_ACTION","DELETE_ACTION","_readonlyAddEdit","blockId","context","selectedColumn","that","editField","editable","fields","field","isNew","sender","columns","column","container","closeCell","_hasToolbarButtons","toolbarConfig","buttons","_hasToolbarSettings","_hasToolbarPager","pageable","pagerPosition","_hasToolBar","kendoToolBarItems","hasToolbarButtons","this","hasToolbarSettings","hasToolbarPager","hasToolBar","hidden","slice","EFTreeList","EFComboColumn","EFOptions","List","noDataTemplate","AutoComplete","browser","tem","ua","navigator","userAgent","M","tempInfo","appName","appVersion","splice","name","version","isIE","isIE8","intervalId","devtools","open","orientation","threshold","emitEvent","dispatchEvent","CustomEvent","detail","setInterval","widthThreshold","outerWidth","innerWidth","heightThreshold","outerHeight","innerHeight","Firebug","chrome","isInitialized","module","exports","__debug__","addEventListener","console","log","clearInterval","jQuery","AbstractEi","extAttr","EiColumn","call","EiBlockMeta","metas","desc","colCount","EiBlock","meta","Error","rows","EiInfo","descName","status","blocks","Config","__version__","traceId","_selectById","document","getElementById","nodeList","getElementsByName","EiInfo2Json","Json2EiInfo","prototype","getAttr","setAttr","constructor","pos","formatter","editor","minLength","maxLength","Math","pow","primaryKey","nullable","visible","displayType","errorPrompt","dateFormat","defaultValue","validateType","width","height","align","blockName","sourceName","labelProperty","valueProperty","toJSON","compress","hasOwnProperty","parseColumn","columnJson","columnValue","setDesc","getDesc","addMeta","getMeta","removeMeta","getBlockId","getMetas","blockMeta","EiInfoJsonConstants","BLOCK_META_DESC","ATTRIBUTES","columnName","BLOCK_META_COLUMNLIST","parseBlockMeta","blockMetaJson","getBlockMeta","setBlockMeta","addRow","setRows","getColumn","colName","getColumnPos","setCell","rowNo","getCell","getCellByPos","colPos","getMappedArray","rowJson","getMappedObject","getMappedRows","rowsJson","clone","parseBlock","build","block","rowData","BLOCK_META","BLOCK_DATA","blockJson","getName","setName","strArray","getBlock","parseInt","setMsg","getMsg","setMsgKey","getMsgKey","setDetailMsg","sMsg","getDetailMsg","setStatus","getStatus","setDescName","getDescName","addBlock","getBlocks","apply","setById","inputId","setByNameValue","oldValue","Object","toString","idArray","setByNode","divId","setByNodeObject","divNode","force","checkboxes","getElementsByTagName","checked","multiple","val","option","selected","selectedIndex","info","parseJSONObject","eiJSON","parser","EiInfoParserFactory","getEiInfoParser","parseJSON","parseJSONString","jsonString","parse","toJSONString","EiInfoParser","V2","V1","EIINFO_NAME","EIINFO_DESC_NAME","EIINFO_MESSAGE","EIINFO_MESSAGE_KEY","EIINFO_DETAIL_MESSAGE","EIINFO_STATUS","EIINFO_BLOCKS","sysJSON","SYS","EIINFO_TRACE_ID","BLOCKS","json","EiConstant","EF_FORM_ENAME","EF_FORM_CNAME","EF_FORM_POPUP","EF_CUR_FORM_ENAME","EF_FORM_LOAD_PATH","EF_FORM_STYLE","EF_FORM_INFO_TAG","EF_FORM_BUTTON_DESC","EF_CUR_BUTTON_ENAME","SERVICE_NAME","METHOD_NAME","STATUS","SQL_NAME","EI","EIINFO","SHOW_MSG","SHOW_DETAIL_MSG","LIMIT","OFFSET","COUNT","SHOW_COUNT","ORDER_BY","COLUMN_TOTAL_SUM","BLOCK_META_COLUMNPOS","CONTEXT","EiInfo2JsonString","appendComma","a","b","iKey","EiBlock2JsonString","EiBlockMeta2JsonString","c","jKey","EiColumn2JsonString","parseJsonObject","eiJson","sId","ajaxEi","EiCommunicator","callService","serviceId","callback","send","serviceName","methodName","jsonEi","r","topWindow","onSuccess","xmlR","responseText","onFail","sendFuncCall","funcId","inInfo","$send","sUrl","sContent","sCallback","trimString","Array","getCurrentStrWidth","font","currentObj","hide","appendTo","body","html","css","copyToClipboard","clipboardData","setData","$tempInput","execCommand","createGrid","ei","DEFAULT_BLOCK","DEFAULT_COLUMN_WIDTH","columnWidth","DEFAULT_ROW_HEIGHT","rowHeight","eiColumns","columnJSON","valueType","editType","columnAttr","locked","validation","title","attributes","required","data-rules","initOptions","kendoGrid","openForm","paramList","isMax","loadTime","Date","loadLabel","getTime","toUpperCase","openPara","screen","availWidth","availHeight","reg","alert","openedWindow","support","leadingWhitespace","openNewForm","postForm","contextPath","response","flat2Map","idField","parentId","rootLevel","pid","map2Flat","fillNode","cellValue","tagName","$textField","blur","childNodes","exception","clearNode","submitNode","callBack","gridList","submitGrid","submitBlock","getCheckedBlockData","EFTab","EFSelect","EFTree","EFInput","EFAutoComplete","EFUpload","NS","messageType","INFO","SUCCESS","WARNING","ERROR","messageTypeMap","warning","levelMap","DEBUG","eiInfoMessageHandler","msgObject","showMsg","msgType","Notification","messageHandler","OFF","LEVEL","NotificationUtil","timer","notificationWidget","hasInitialized","defaultAutoHideAfter","AUTO_HIDE_AFTER","getNotificationInstance","isCopy","COPY","isAPM","APM","isLock","LOCK","TEMPLATE","on","$this","content","detailContent","TooltipUtil","fixed","typeSpan","getNotifications","typeClass","typeMatch","clearTimeout","setTimeout","APM_URL","kendoNotification","position","left","removeData","allowHideAfter","autoHideAfter","button","stacking","templates","hideOnClick","msgTemplate","show","trigger","WindowUtil","windowInstance","getWindowInstance","$window","kendoWindow","modal","actions","animation","duration","args","srcElement","className","setOptions","center","settings","okFn","alertSetting","Modal","ALERT_TITLE","minWidth","ALERT_MIN_WIDTH","alertHTML","message","ok","resizable","kendoWindowAlert","confirm","cancelFn","confirmSetting","CONFIRM_TITLE","CONFIRM_MIN_WIDTH","confirmHTML","cancel","kendoWindowConfirm","prompt","promptSetting","PROMPT_TITLE","PROMPT_MIN_WIDTH","promptHTML","kendoWindowPrompt","tooltipInstance","kendoTooltip","showAfter","removeAttr","toolTip","toolTipContainer","closest","_iconOffset","offset","popup","offsetWidth","FIRST","LAST","GO_INPUT","TOTAL_INFO","COUNT_ACTIVE","COUNT_BTN","_initPager","gridConfig","showCount","_handleGridPagerPosition","gridInstance","$grid","$pager","pager","hasButtons","$toolbar","insertAfter","prependTo","resize","throttle","_handlePagerCount","$countBtn","hasClass","query","_refreshPagerCount","ICON","Layout","ICON_AND_TEXT","_mixedHandler","models","unlocked","column_locked","_buildPersonal","personalGrid","gridPersonalInfo","personalWindow","personalBlockId","rowIndex","dbColumns","personalInfo","aid","dbColumn","column_ename","column_order","tedfa60_id","project_ename","form_ename","grid_id","user_id","column_cname","column_hidden","column_width","soft_delete","PROJECT_ENAME","FORM_ENAME","USER_ID","xGrid","gridId","needAuth","tagId","guid","queryMethod","skip","pageSize","responseEiInfo","queryInfo","beforeEdit","preventDefault","col","onCheckRow","onRowClick","dataBinding","saveOptions","autoBind","add","delete","save","style","icon","layout","click","getCheckedRows","lockedCount","getDataItems","newIndex","max","upRow","reverse","min","total","downRow","saveChanges","cancelChanges","reload","TEXT","gridDefaultButtons","ON_DELETE","_initToolbar","default_layout","btnDescInfo","__eiInfo","filteredBlockIds","customButtons","gridButtonRegex","registerButtonConfig","gridBlock","buttonId","buttonName","toLowerCase","mapObject","personalWindowId","defaultToolbar","event","deleteHTML","_action","_deleteRows","getCheckedRowsIndex","removeRows","sync","_configButton","findIndex","toolbarButtons","registerBtn","defaultBtn","buttonOptions","btnLayout","btnSpan","btnText","class","_buildGridSettings","defaultActions","personal","tempExportGrid","exportGrid","exportOptions","exportEiInfo","exportFileName","exportFileType","exportBlockId","exportServiceName","exportMethodName","doExport","beforeExport","wrapEiBlock","queryEiInfo","getQueryInfo","settingActions","overflow","display","_createToolBar","toolbarId","kendoToolBar","_checkedRows","_extendColumns","preColumns","baseColumns","baseColumn","preColumn","frontColumns","_buildColumns","autoDraw","kendoColumns","modelId","modelFields","tagColumns","chain","readonlyColumns","headerAlign","columnOptions","gridDefaults","sortBy","oldTagColumns","tagColumn","tagPos","equal","gridConfigColumns","filterable","kendoDropDownList","dataTextField","textField","dataValueField","columnCallback","_buildSortColumns","_buildColumnTemplate","_buildColumnEditor","_buildColumnHeader","schema","_buildPersonalColumns","personalColumns","personalColumn","setSortable","isSort","sortObj","sortable","iplatSort","mode","allowUnsort","initialDirection","page","sumType","flag","finalSumType","aggregate","sumTemplate","footerAttributes","footerTemplate","_buildColumnCopyTemplate","parseFormats","parseDate","showEditHelper","dynamic","editHelper","editClass","editDiv","func","footer","sum","rowNoColumn","headerAttributes","headerTemplate","rowNoText","rowNoAlign","iplatWidth","checkMode","checkColumn","enableCopy","copy","copyType","popupType","link","_initGridAndLockedGridHeight","$tr","table","span","grid","input","mousedown","Popup","popupTextArea","pele","setCellValue","dateOptions","dateId","role","itemTemplate","dropDownOption","valuePrimitive","valueTemplate","selectId","tr","kendoMultiSelect","autoClose","change","_initBatchCopy","$data","$th","_column","findColumnByField","ColumnCopy","backFill","_this","_dateOptions","multiSelect","popupOptions","textElement","init","backFillGrid","popupGrid","_initDataSource","resultBlock","batch","serverFiltering","serverPaging","serverSorting","count","limit","isNumeric","isOver","_total","_pageSize","setCheckedRows","xhr","ON_FAIL","errorMsg","requestEnd","ON_SUCCESS","unCheckAllRows","serverAggregates","aggregates","pageSum","totalSum","parseFloat","toFixed","_buildDataSource","dataSourceDefaults","dataSourceSettings","strict","TransportFactory","getTransport","_beforeInit","configId","toolbar","_afterInit","autoFit","_checkToEdit","stopPropagation","$target","$td","is","cellIndex","columnField","ON_CELLCLICK","td","$TRs","ON_ROWCLICK","Timer","dblclick","ON_ROWDBLCLICK","ON_CHECK_ALLROWS","fake","checkedIndex","dataUid","$checkOne","$contentRow","shiftKey","startUid","$start","startIndex","endIndex","minIndex","maxIndex","checkArray","ON_CHECKROW","checkAll","refreshCheckRows","autoFitFlag","autoFitColumn","gridWrapper","wrapper","gridDataTable","gridDataArea","toggleClass","offsetHeight","_handleGridHeaderBorder","keydown","checkedRows","lockedRows","cells","rowLength","editingCell","keyCode","kendoInputValidate","valid","validator","kendoValidator","validateInput","editCell","Class","BEFORE_ADD","ON_ADD","AFTER_ADD","TD_VALIDATOR_CLASS","TD_ERROR_MSG","ON_SAVE","SAVECHANGES","ON_CANCEL","BEFORE_EDIT","AFTER_EDIT","CSRF_HEADER","MAX_COUNT","QUERY_ALL","BOTTOM_BORDER","BOTTOM_BORDER_HOVER","DEFAULT_TOOLTIP_WIDTH","DEFAULT_ERROR_TOOLTIP_WIDTH","FilterMenu","operators","string","AbstractTransport","CREATE","READ","UPDATE","DESTROY","efSecurityToken","beforeSend","setRequestHeader","_options","postEiBlock","kendoGid","Grid","_exist","submitChecked","_mapModels","buildTransport","_buildURL","parameterMap","EiServiceTransport","transportDefaults","service","method","eiinfo","RestfulTransport","readURL","createURL","updateURL","destroyURL","useFunction","transportTypes","REST","TransportBuilder","builder","registerTransport","kendoGridOptions","rowsLength","setEiInfo","_handleGridBottomBorder","isValid","loadComplete","_uid","_tooltip","errorMessageText","fontSize","$otherTooltips","fontWidth","toolTipOptions","tooltip","kendoToolTip","inValid","Tooltip","$toolTip","longTextTooltip","_amazingHandler","$sum","Transport","getColumnMap","setRow","sourceModel","at","modelJSONObj","destModel","dirty","insert","addEiInfo","bottom","addRows","rows2Add","BizModel","define","unchecked","copyNewRows","one","unshift","_defaultId","binding","deleteIndex","_skip","_take","_process","getEiInfo","postString","setEiBlock","getEiBlock","getLockedColumns","exclude","lockedColumns","shift","mockInput","$input","inputValue","validModel","columnNames","modelJSON","validatorList","_setCellErrorMsg","$cell","isCellLocked","getColumnIndex","validateAll","$rows","tbody","refresh","copyToAdd","editFirstRow","lockedContent","lockedTable","cell","_firstEditableColumnIndex","firstColumnIndex","firstColumn","addHTML","beforeEditHandlers","editHandlers","$lockedRow","_modelForContainer","checkbox","union","isCancel","_editContainer","getByUid","_relatedRow","getSelectedRows","dataItems","first","$checkbox","setUnCheckedRows","checkAllRows","toggleCheckRows","$lockedTR","checkedIndexArray","view","indexArray","rowNumbers","rowNumber","isNaN","rowNum","_displayCell","model2EiBlock","getBlockData","outInfo","dataBlock","currentBlock","mixin","dateColumns","dateColumn","resizeStart","th","currentTarget","idx","isLocked","minColumnWidth","lockedHeader","thead","trLast","autoId","async","_init_dataSource","transport_defaults","autocomplete","dataSource_defaults","defaults_options","preOptions","autoOption","effects","autoWidth","enforceMinLength","highlightFirst","suggest","kendoAutoComplete","DATETIME","datetimeDefaults","dateDefaults","today","clear","dateInstance","$date","dp","dateView","unwrap","EFDate","EFDateTime","kendoDateTimePicker","kendoDatePicker","DateSpan","startChange","startDate","startDateInstance","endDate","endDateInstance","setDate","endChange","handleExtChar","extChar","bindWidth","bindRatio","bindLabelWidth","bindRatioArray","extLabel","$validateWrapper","$startDate","$bindWrapper","$endDate","prev","startOptions","startId","endOptions","endId","now","startTimeFormat","startVal","endTimeFormat","endVal","start","end","columnEnames","columnCnames","titles","getContainer","$container","buildKendoWindow","inputElement","windowScrollTop","scrollTop","draggable","resizableOptions","isMaximized","autoFocus","STATIC_WINDOW","windowWrapper","elementPosition","getElementScreenPosition","TOP_FIX","LEFT_FIX","clientWidth","windowManager","inject","innerClick","forbidKendoGridScroll","preventWindowShake","restartKendoGridScroll","restoreWindow","BACK_FILL","WindowManager","Window","_activate","AbstractPopupGridTransport","resultId","DynamicGridTransport","ServiceGridTransport","AbstractPopupGrid","valueElement","backFillColumnIds","backFillFieldIds","_prepareEiInfo","_buildTransport","_buildGridOptions","filterPopupGrid","EFPopup","gridOptions","extra","buildPopupGrid","eiPromise","DynamicGrid","ServiceGrid","PopupGridFactory","DYNAMICGRID","SERVICEGRID","getPopupGrid","registerPopupGrid","AbstractPopupWindow","_prepare","gridType","targetType","typeInfo","_buildContainer","elementId","containerId","_buildGrid","_buildSaveButton","$saveBtnDiv","popGrid","_backFillFields","codeGrid","checkRows","closeWindow","_buildKendoWindow","_preCreate","empty","then","_afterGridBuild","closeList","off","buildPopupWindow","PopupInputWindow","backFillFunction","initFunction","PopupColumnWindow","ename","efGrid","efModel","prepend","gridBlockId","cname","proxy","PopupWindowFactory","POPUP_INPUT","POPUP_COLUMN","getPopupWindow","popupWindow","registerPopupWindow","isDisabled","$textElement","disabled","popupContainer","$textarea","textareaId","textarea","textareaResizeThrottle","textareaResize","_height","_width","popupTree","$tree","TreeView","_init","loaded","copyId","$copy","$select","clearInput","forIds","forIdList","targetPopupInput","DataSource","operations","cascadeFrom","selectDefaults","DropDownList","Select","_buildSelect","selectConfig","selectInstance","MultiSelect","CascadeSelect","Codeset","$ele","kendoTreeView","trees","TreeViews","$ele1","leftId","$ele2","rightId","leftDataSource","rightDataSource","accessAll","Trees","initTab","tab","tabId","tabContent","tabPosition","scrollable","distance","contentUrl","holder","kendoTabStrip","dataContentUrlField","sload","tabDiv","tabReload","tabstrip","onShow","inArray","tabGroup","deleteTab","tabsElements","tabAddDeleteButton","removeHolder","ID","tabStrip","tabLi","DEFAULT_INTERVAL_HEIGHT","active","showClose","lazyTab","tabSelector","contentElement","src","$iframe","HierarchicalDataSource","showVirtualRoot","PID","__ROOT__","VIRTUAL_ROOT","LOAD_COMPLETE","transformTreeData","hasChildren","TreeCommunicator","widget","rootId","allNodes","Widget","virtualRoot","proxyVirtualRoot","treeOptions","treeId","isEmpty","isObject","loadOnDemand","originalDataSource","once","_loadOnDemand","_loadStatic","kendoTreeInstance","treeNodes","treeNode","nodeName","load","_init_datasource","datasource_defaults","fix","expandable","command","tree_defaults","TreeListDataSource","selectable","TreeList","treeInstance","kendoTreeList","onUpload","Upload","initUrl","saveUrl","removeUrl","docTag","asyncDefaults","uploader","__keep__","initFileList","uploaderPromise","Deferred","resolve","_bindEvents","param","docId","files","changeSettings","resetOptions","initDocTag","Uploader","detach","efUpload","docs","doc","extension","docName","size","docSize","kendoUpload","disable","validateFunctionWrapper","validateFunction","groupName","gridCell","_validateGroup","_trimMessage","inputGroups","groups","intersection","_initValidator","rules","email","validatePlatRules","mobile_phone","postcode","phone_with_area_code","phone_without_area_code","integer","positive_integer","non_negative_integer","negative_integer","http_url","number","non_negative_number","positive_number","decimal","label","chinese_string","not_chinese_string","ip_address","mac","validateRegExp","validateHTML5Rules","platRule","pattern","rule","dataAttributes","regExps","substring","eval","showValidateMsg","_input","getBorderInput","_checkValidity","fieldName","inValidColor","inGrid","_errors","messageText","_extractMessage","decode","hoverInHandler","timestamp","_inputOffset","hoverOutHandler","wrap","Validator","iplat_validator","validate","_isValidated","INVALIDINPUT","VALIDINPUT","VALIDATE_INPUT","wasValid","_platFitHeight","fitHeightSelector","EFPage","fitHeightClass","$regionContent","$form","formPaddingBottom","paddingBottom","offsetH","$content","borderH","fitContentH","autoFitHeight","windowH","contentOffset","fixedReadOnly","_val","postData","exportForm","forms","exportIframe","removeChild","createElement","setAttribute","appendChild","parentWindow","contents","inputField","submit","visualizeEiInfo","nameToDescription","eiInfoData","auto_increment","DEFAULT_ID","createModel","description","eiObjectToRow","object","expanded","getBodyScrollTop","pageYOffset","compatMode","documentElement","getGridFullScreenHeight","minHeight","toolbarHeight","gridHeight","pagerHeight","_default","selector","isScrollX","isPagerPositionTop","adjustHeight","screenHeight","$region","regionHeight","cancelBubble","returnValue","scrollLeft","maxHeight","_resetContainer","debounce","scrollHeight","$document","pageHeight","bodyHeight","$lockedContent"],"mappings":"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","file":"iplat.ui.min.js","sourcesContent":["/**\n * IPLATUI初始化文件，和iplat.ui.config.js不同。\n *\n * init不对外暴露，定义基础工具方法，依赖jQuery和underscore库，但不依赖IPLATUI其他模块；\n * 同时在此针对KendoUI的组件进行微调，包括国际化配置等；\n * 在KendoUI js加载结束后，首先执行，优先于eiinfo.js和core.js。\n */\n(function ($, _) {\n    var extend = $.extend,\n        each = $.each;\n\n    // 定义IPLAT模块，统一管理平台提供的方法\n    var IPLAT = window.IPLAT || {},\n        mainVersion = \"6.0\";\n\n    // KendoUI原生属性配置管理，业务JS内可自定义配置\n    var IPLATUI = window.IPLATUI || {};\n\n    // 项目组升级上线 平台迭代构建时统一修改\n    // 部分页面没有使用EFPage，但是只要引用iplat.ui.min.js 就会显示当前的版本\n\n    // var releaseVersion = IPLATUI.releaseVersion || \"6.0.0915-SNAPSHOT\";\n    var releaseVersion = \"6.0.1130-SNAPSHOT\";\n    var releaseTime = \"2017-12-01 22:00:00\";\n\n    // 复用underscore常用的数据类型判断函数\n    IPLAT.isNull = _.isNull;\n    IPLAT.isUndefined = _.isUndefined;\n    IPLAT.isBoolean = _.isBoolean;\n    IPLAT.isNumber = _.isNumber;\n    IPLAT.isString = _.isString;\n    IPLAT.isDate = _.isDate;\n\n    kendo.culture(\"zh-CN\");\n    kendo.data.Model.fn.__ClassName__ = \"kendoModel\";\n\n    // 解决instanceof 在子窗口 iframe中的不安全性，确定数据类型\n    IPLAT.isEiColumn = function (eiColumn) {\n        return isAvailable(eiColumn) && eiColumn.__ClassName__ === \"EiColumn\";\n    };\n\n    IPLAT.isEiBlockMeta = function (eiBlockMeta) {\n        return isAvailable(eiBlockMeta) && eiBlockMeta.__ClassName__ === \"EiBlockMeta\";\n    };\n\n    IPLAT.isEiBlock = function (eiBlock) {\n        return isAvailable(eiBlock) && eiBlock.__ClassName__ === \"EiBlock\";\n    };\n\n    IPLAT.isEiInfo = function (eiInfo) {\n        return isAvailable(eiInfo) && eiInfo.__ClassName__ === \"EiInfo\";\n    };\n\n    IPLAT.isKendoModel = function (kendoModel) {\n        return isAvailable(kendoModel) && kendoModel.__ClassName__ === \"kendoModel\";\n    };\n\n    /**\n     * 判断字符串是否为空\n     *\n     * @param {String} str 源字符串\n     * @return {boolean}\n     */\n    IPLAT.isEmptyString = function (str) {\n        return str === '';\n    };\n\n    /**\n     * 判断trim后的字符串是否为空\n     *\n     * @param {String} str 源字符串\n     * @return {*|boolean}\n     */\n    IPLAT.isBlankString = function (str) {\n        return IPLAT.isString(str) && str.replace(/^\\s+|\\s+$/g, '').length === 0;\n    };\n\n    /**\n     * 格式化JSON对象中的特殊字符，ajax的data属性已经处理\n     * @deprecated\n     * @param {Object} obj\n     */\n    function formatNative(obj) {\n        var str = JSON.stringify(obj);\n        // 这段代码主要是为了解决ajax的data以字符串的方式提交时+和%引起的过滤问题\n        // 后来ajax的data以对象方式提交同时也避免了这个问题 所以需要把这段代码注释掉\n        // if(undefined != str)\n        // return str.replace(/\\%/g,'%25').replace(/\\+/g, '%2B');\n        // else\n        return str;\n    }\n\n    /**\n     * 判断某一对象是否为空。\n     * @param {Object} obj   所要判断的对象\n     * @return {boolean}    若obj为空对象(null或undefined)或是空字符串(\"\")， 返回false，否则返回true。\n     * @exception 无异常抛出\n     */\n    function isAvailable(obj) {\n        if (obj === undefined) {\n            return false;\n        }\n\n        if (obj === null) {\n            return false;\n        }\n\n        return obj !== \"\";\n    }\n\n    /**\n     * 判断某一对象数组是否每个元素可用。\n     * @param {Array} array 所要判断的对象数组 []\n     * @return {boolean}    若obj为每一个元素都为非空对象(null或undefined)或是空字符串(\"\") 返回true，否则返回false。\n     * @exception 无异常抛出\n     */\n    function isBatchAvailable(array) {\n        for (var i = 0; i < array.length; i++) {\n            if (!isAvailable(array[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * 获取应用上下文信息，应对相对路径，nginx下端口分发等场景\n     *\n     * @return {String}\n     */\n    function getContextPath() {\n        return IPLATUI.CONTEXT_PATH || \"\";\n    }\n\n\n    window.childWindows = []; // 维护当前window的子window\n\n    // IE8下 typeof window.open 结果是 \"object\"；\n\n    // window.open = (function(open) {\n    //     return function() {\n    //         var childWindow = open.apply(window, arguments);\n    //         window.childWindows.push(childWindow);\n    //     };\n    // })(window.open);\n\n    /**\n     * 使用平台的close方法，关闭子窗口\n     * @private\n     */\n    window.__iplat__closeWindows = function (keepSelf) {\n        each(childWindows, function (i, childWindow) {\n            if ($.isFunction(childWindow.__iplat__closeWindows)) {\n                childWindow.__iplat__closeWindows();\n            } else {\n                childWindow.close();\n            }\n        });\n\n        if (!keepSelf) { // 默认关闭自身窗口\n            window.close();\n        }\n    };\n\n    /**\n     * 获取当前窗口的opener, 如果是iframe获取其top窗口（即浏览器的窗口）\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/top\n     * @return {Window}\n     */\n    IPLAT.getParentWindow = function () {\n        var currentWindow = window;\n\n        try {\n            if (isAvailable(currentWindow.IPLAT_INDEX_WINDOW)) {\n                // 平台的index页面\n                return currentWindow;\n            }\n\n            if (isAvailable(currentWindow.opener) && currentWindow !== currentWindow.opener) {\n                currentWindow = currentWindow.opener;\n            }\n\n            while (isAvailable(currentWindow.top) && currentWindow !== currentWindow.top) {\n                currentWindow = currentWindow.top;\n            }\n        } catch (ex) {\n            currentWindow = null;\n            return currentWindow;\n        }\n\n        return currentWindow;\n    };\n\n    /**\n     * 根据参数名，获取URL中queryString的参数值\n     * @param parameterName     参数名\n     * @param url               URL地址，默认为当前window的地址\n     * @return {*} 参数值\n     */\n    IPLAT.getParameterByName = function (parameterName, url) {\n        if (!url) {\n            url = window.location.href;\n        }\n        parameterName = parameterName.replace(/[\\[\\]]/g, \"\\\\$&\");\n        var regex = new RegExp(\"[?&]\" + parameterName + \"(=([^&#]*)|&|#|$)\"),\n            results = regex.exec(url);\n        if (!results) return null;\n        if (!results[2]) return '';\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n    };\n\n\n    extend(IPLAT, {\n        VERSION: mainVersion,\n        releaseVersion: releaseVersion,\n        releaseTime: releaseTime,\n\n        // 基础的工具类\n        formatNative: formatNative,\n        isAvailable: isAvailable,\n        isBatchAvailable: isBatchAvailable,\n\n        getContextPath: getContextPath,\n\n        htmlEncode: kendo.htmlEncode,\n\n        htmlDecode: function (value) {\n            return ('' + value).replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&#39;/g, \"'\");\n        },\n\n        AJAX: {\n            ContentType: {\n                JSON: \"application/json;charset=utf-8\",\n                FORM: \"application/x-www-form-urlencoded;charset=utf-8\"\n            },\n            NOOP: \"__GRID_CRUD_NOOP__\"\n        },\n\n        FORMAT: {\n            DATE_17: \"yyyyMMddHHmmssfff\", // 17位时间 年月日时分秒毫秒\n            DATE_14: \"yyyyMMddHHmmss\", // 14位时间 年月日时分秒\n            DATE_8: \"yyyyMMdd\", // 8位时间 年月日\n\n            DATE_17_PR: \"yyyy-MM-dd HH:mm:ss.fff\", // DATE_17首选格式\n            DATE_17_SE: \"yyyy/MM/dd HH:mm:ss.fff\",\n\n            DATE_14_PR: \"yyyy-MM-dd HH:mm:ss\", // DATE_14首选格式\n            DATE_14_SE: \"yyyy/MM/dd HH:mm:ss\",\n\n            DATE_8_PR: \"yyyy-MM-dd\", // DATE_8首选格式\n            DATE_8_SE: \"yyyy/MM/dd\"\n        },\n\n        KEY_CODE: { // 键盘的按键的ASCII码\n            Tab: 9,\n            Enter: 13\n        },\n\n        CONSTANTS: {\n            // 对应 com.baosight.iplat4j.core.web.export.InfoExporter中的常量\n            EXPORT_FLAG: \"_eiExportFlag\",               // 是否导出的标志位，必需参数\n            EXPORT_FILE_TYPE: \"_eiExportFiletype\",      // 导出的文件类型，必需参数\n            EXPORT_BLOCK_ID: \"_eiExportBlockname\",      // 导出的数据块Id，必需参数\n            EXPORT_EIINFO: \"_eiExportData\",             // 导出EiInfo的JSON字符串，可选参数\n            EXPORT_FILE_NAME: \"_eiExportFileName\",      // 导出的文件名，可选参数\n\n            EXPORT_SERVICE_NAME: \"_eiExportServiceName\",   // 后台产生导出EiInfo的服务名，可选参数\n            EXPORT_METHOD_NAME: \"_eiExportMethodName\",     // 后台产生导出EiInfo的方法名，可选参数\n            EXPORT_QUERY_EIINFO: \"_eiExportQueryEiInfo\",   // 后台产生导出EiInfo的查询条件\n\n            QUERY_BLOCK_ID: \"inqu_status\",              // 查询条件EiBlock的blockId\n            RESULT_BLOCK_ID: \"result\",                  // 结果集EiBlock的blockId\n\n            BACKFILL_BUTTON_NAME: \"确定\",                // 回填按钮名\n\n            CONFIRM_BUTTON_NAME: \"确定\",\n            CANCEL_BUTTON_NAME: '取消'\n        },\n\n        Browser: {},\n\n        Util: {\n            // IPLATUI 使用的私有工具方法\n            unbindHandlers: function (target, eventType) {\n                if (target instanceof kendo.Observable) {\n                    var handlers = target._events[eventType];\n                    target.unbind(eventType);\n                    return handlers;\n                }\n                return [];\n            },\n\n            bindHandlers: function (target, eventType, handlers) {\n                if (target instanceof kendo.Observable) {\n                    each(handlers, function (i, handler) {\n                        target.bind(eventType, handler);\n                    });\n                }\n            },\n\n            /**\n             * 把block的row数组数据转换为model\n             * @param i         源EiBlock的行号\n             * @param inBlock   源EiBlock\n             * @param indexMap  源EiBlock和Grid EiBlock的映射关系\n             * @return {*}\n             */\n            block2Model: function (i, inBlock, indexMap) {\n                var row = inBlock.getRows()[i];\n\n                var model = {};\n\n                for (var key in indexMap) {\n                    model[key] = row[indexMap[key]] || \"\";\n                }\n\n                return new kendo.data.Model(model);\n            },\n\n            buildAjaxOption: function (ajaxOption) {\n                var defaults = {\n                    type: 'POST',\n                    dataType: \"json\",\n                    contentType: IPLAT.AJAX.ContentType.FORM\n                };\n\n                extend(defaults, ajaxOption);\n\n                return extend(true, {}, {\n                    read: defaults, // 避免复制同一个对象\n                    create: defaults,\n                    update: defaults,\n                    destroy: defaults\n                });\n            },\n\n            /**\n             * 统一通过函数的方式，自定义DataSource数据请求的实现；注意CRUD的方式必须统一。\n             * @link http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-transport.read\n             * @param {Object} transport 默认的ajax options请求\n             * @param {AbstractTransport} transporter 平台封装transport示例\n             * @return {Object} 函数方式的CRUD\n             */\n            buildCRUDFunction: function (transport, transporter) {\n                for (var action in transport) {\n                    var ajaxOptions = transport[action];\n                    if ($.isPlainObject(transport[action])) {\n                        transport[action] = (function (ajax, operation) {\n                            return function (params) { // 注意这里的prams和dataSource transport的params不同\n                                transporter._buildFilter(params.data);\n                                transporter._buildModels(params.data, operation);\n\n                                $.ajax(extend({}, ajax, {\n                                    data: transporter._buildRequest(),\n                                    success: function (result) {\n                                        // notify the data source that the request succeeded\n                                        params.success(result);\n                                    },\n                                    error: function (result) {\n                                        // notify the data source that the request failed\n                                        params.error(result);\n                                    }\n                                }));\n                            }; // end inner function\n                        })(ajaxOptions, action); // closure\n                    } // end if\n                } // end for\n\n                return transport;\n            },\n\n            getComboText: function (values, columnTemplate, valueField, value) {\n                var item = _.find(values, function (element) {\n                    // 考虑到从EFComboColumn.tag的dataItem中取到的value值默认为字符串类型, 若下拉框中值为数字类型,\n                    // 就会导致值匹配不上:不能根据columnTemplate指定的模板正确显示,而只显示value的值\n                    // 故将\"===\"改为\"==\"\n                    return element[valueField] == value;\n                });\n\n                if (item) {\n                    return kendo.template(columnTemplate)(item);\n                }\n                return value || '';\n            },\n\n            filterAdapter: function (filters, postEiInfo) {\n                // filters ={filters: [\n                //     {field: 'x' ,op: 'eq', value:w},\n                //     {filters: [ {field: 'x' ,op: 'eq', value:w},\n                //         {field: 'x' ,op: 'eq', value:w}, {filters:[]}], logic: \"or\"}\n                // ], logic:\"and\"}\n\n                var queryBlock,\n                    whereSQL,\n                    OPERATORS = {\n                        eq: \"='{0}'\",\n                        neq: \"!='{0}'\", // <> , NOT\n                        isnull: \"=null\",\n                        isnotnull: \"!=null\",\n                        isempty: \"=''\",\n                        isnotempty: \"!=''\",\n                        startWith: \" like '{0}%'\",\n                        contains: \" like '%{0}%'\",\n                        doesnotcontain: \" not like '%{0}%'\",\n                        endwith: \" like '%{0}'\",\n                        lt: \"<{0}\",\n                        gt: \">{0}\",\n                        lte: \"<={0}\",\n                        gte: \">={0}\"\n                    };\n\n                if (!$.isPlainObject(filters)) { // undefined\n                    filters = {filters: [], logic: \"and\"};\n                }\n\n                var _simpleFilter = function (filters) {\n                    each(filters[\"filters\"], function (i, filter) {\n                        if (filter[\"filters\"]) {\n                            _simpleFilter(filter); // 递归处理\n                        } else {\n                            // 丢失了operator信息， 同一个字段的多filter信息丢失， logic信息\n                            postEiInfo.set(\"inqu_status-0-\" + filter[\"field\"], filter[\"value\"]);\n                        }\n                    });\n                };\n\n                // build where SQL\n                var _complexFilter = function (filters) {\n                    var logic = \" \" + filters[\"logic\"] + \" \", SQL = [];\n\n                    each(filters[\"filters\"], function (i, filter) {\n                        if (filter[\"filters\"]) {\n                            SQL.push(_complexFilter(filter)); // 递归处理\n                        } else {\n                            // TODO: 判断value的类型\n                            // SQL.push(filter[\"field\"] + kendo.format(OPERATORS[filter[\"operator\"]], filter[\"value\"]))\n                            SQL.push(filter[\"field\"] + kendo.format(OPERATORS[filter[\"operator\"]],\n                                filter[\"value\"]))\n                        }\n                    });\n\n                    return \"(\" + SQL.join(logic) + \")\";\n                };\n\n                _simpleFilter(filters);\n\n                whereSQL = _complexFilter(filters);\n                if (whereSQL !== \"()\") {\n                    postEiInfo.set(\"inqu_status-0-sql\", whereSQL);\n                }\n                return postEiInfo;\n            },\n\n            sortAdapter: function (sort) {\n                // sort =  [\n                //     {field: 'x', dir: 'desc'},\n                //     {field: 'x', dir: 'asc'}\n                // ]\n                var orderBy = [];\n                if ($.isArray(sort)) {\n                    $.each(sort, function (index, item) {\n                        // TODO: join的列 tableName处理\n                        orderBy.push(item[\"field\"] + \" \" + item[\"dir\"]);\n                    })\n                }\n                return orderBy.join(\",\");\n            },\n\n            parseBtnClass: function (btnCss) {\n\n                // 处理EDFA01中注册的按钮的样式\n                btnCss = btnCss || \"\";\n                var resources = btnCss.trim().split(\":\"); // 目前只支持 css:\n                var btnClass;\n\n                if (resources.length > 1) {\n                    btnClass = resources[1];\n                } else {\n                    btnClass = resources[0];\n                }\n\n                // css:\n                // fa fa-lock\n                // k-icon k-lock\n                // i-icon i-lock\n\n                if (btnClass.match(/fa-/)) {\n                    btnClass = \"i-btn-gap \" + btnClass;\n                    if (!btnClass.match(/^fa /)) { // 补全font awesome的class\n                        btnClass = \"fa \" + btnClass;\n                    }\n                } else if (btnClass.match(/k-/)) {\n                    if (!btnClass.match(/^k-icon /)) { // 补全kendo icon 的class\n                        btnClass = \"k-icon \" + btnClass;\n                    }\n                } else if (btnClass.match(/i-/)) {\n                    if (!btnClass.match(/^i-icon /)) { // 补全iplat icon 的class\n                        btnClass = \"i-icon \" + btnClass;\n                    }\n                }\n\n                return btnClass;\n            },\n\n            /**\n             * 判断窗口是不是在iframe中\n             * @return {boolean}\n             */\n            inIframe: function () {\n                try {\n                    return window.self !== window.top;\n                } catch (e) {\n                    return true;\n                }\n            },\n\n            /**\n             * 处理iframe中平台页面的header\n             * 1. JSP页面直接使用iframe不做任何处理（不推荐） <div> <iframe /> </div>\n             * 2. 使用EFWindow标签，iframe中的页面中英文名，将作为EFWindow的标题\n             * 3. EFTab中直接隐藏Header，可以在Tab的标签页上指明Tab的标题\n             *\n             * @param {Window} frameWindow iframe中的window对象\n             * @param {String} formCname iframe中的页面中文名\n             * @param {String} formEname iframe中的页面英文名\n             */\n            handleFrameTitle: function (frameWindow, formCname, formEname) {\n                var frameElement = frameWindow.frameElement;\n\n                var $head = $(\"#ef_form_head\");\n\n                // 默认清除iframe的, iframe存在data-keep配置为true时，不删除header\n                var keepHeader = $(frameElement).data(\"keep\");\n\n                if (keepHeader !== true) {\n                    $head.remove();\n                }\n\n                // var $parent = $(frameElement).parent(); // iframe父window中的div元素\n\n                // // iframe在EFWindow或者EFTab中 隐藏标题\n                // if ($parent.data(\"role\") === \"window\") {\n                //     $head.remove();\n                //\n                //     // 此时父窗口的kendoWindow对象还没有实例化完成\n                //     $parent.prev().find(\"span.k-window-title\").html(formCname + \"-\" + formEname);\n                //     // $parent.data(\"kendoWindow\").title(formCname + \"-\" + formEname);\n                //\n                // } else if ($parent.attr(\"role\") === \"tabpanel\") {\n                //     $head.remove();\n                // }\n\n                // JSP页面直接使用iframe不做任何处理\n            },\n\n            /**\n             * 处理bool类型的个性化配置项，全局的优先级最低（参数越靠后，优先级越低）\n             * @return {boolean}\n             */\n            boolConfigHelper: function () {\n                var length = arguments.length,\n                    result = false; // 开关默认都是关闭的\n\n                for (var i = 0; i < length; i++) {\n                    if (_.isBoolean(arguments[i])) {\n                        result = arguments[i];\n                        break;\n                    }\n                }\n\n                return result;\n            },\n\n            /**\n             * 格式化平台服务端传来的异常信息，放在NotificationUtil展示\n             * @param errorMessage 异常信息字符串\n             * @return {{msgKey: string, msg: string, detailMsg: string}}\n             */\n            formatErrorMessage: function (errorMessage) {\n                var msgObj = {\n                    msgKey: \"\",\n                    msg: \"\",\n                    detailMsg: \"\"\n                };\n\n                var errors = errorMessage.split(\"$$$\");\n\n                if (errors.length > 1) { // 存在EiInfo的detailMsg\n                    msgObj.detailMsg = errors[1];\n                }\n\n                // 判断格式是不是 key:msg\n                var messages = errors[0].split(\":\");\n\n                msgObj.msg = messages[0]; // 没有msgKey的场景\n\n                if (messages.length > 1 && /^[a-z][a-z0-9_\\\\.-]+[a-z0-9]$/i.test(messages[0])) {\n                    // msgKey是英文数字_-.的组合\n                    msgObj.msgKey = messages[0];\n                    msgObj.msg = messages[1];\n                }\n\n                return msgObj;\n            },\n\n            /**\n             * EF Tag中需要作用到HTML元素上的动态属性处理\n             * @param options Tag JS 配置混合出的options\n             */\n            pickDOMAttributes: function (options) {\n                // 作用于 html 元素上的动态属性建议以 data- 开始，校验，样式等常用的固定场景除外\n                // 作用于 js options的动态属性符合kendo的命名即可\n\n                var DOM_ATTRIBUTES = {\n                    VALIDATE: [\"required\", \"minLength\", \"maxLength\", \"validateGroupName\", \"data-*\"],\n                    HTML: [\"class\", \"style\", \"placeholder\"]\n                };\n\n                var keys = DOM_ATTRIBUTES.VALIDATE.concat(DOM_ATTRIBUTES.HTML);\n\n                // http://underscorejs.org/#pick\n                return _.pick(options, function (value, key) {\n                    return key.match(/^data-.+/) || _.indexOf(keys, key) >= 0;\n                });\n            },\n\n            /**\n             * kendo.toString(date， “yyyy-MM-dd”) 简单的日期格式化\n             * @param date\n             * @param delimiter\n             * @return {*}\n             */\n            simpleDate: function (date, delimiter) {\n                var year = date.getFullYear();\n                var month = date.getMonth() + 1;\n                var day = date.getDate();\n\n                delimiter = delimiter || \"-\";\n\n                if (month < 10) {\n                    month = '0' + month;\n                } else {\n                    month = '' + month;\n                }\n\n                if (day < 10) {\n                    day = '0' + day;\n                } else {\n                    day = '' + day;\n                }\n\n                return year + delimiter + month + delimiter + day;\n            }\n        },\n\n        ColorBox: {\n            GRID_BOTTOM_BORDER: \"#99D2FF\",\n            GRID_BOTTOM_BORDER_HOVER: \"#FFE06A\",\n            INVALID_COLOR: \"#FF6160\"\n        },\n\n        // toggle的含义\n        // showOverlay: true, hideOverlay: false\n        progress: function (element, toggle) {\n            kendo.ui.progress(element, toggle)\n        },\n\n        // 平台自定义组件的enable readonly方法（应该将组件封装成Widget）\n        EFPopupInput: {\n            /**\n             * 控制EFPopupInput的可用状态，禁用时，点击图标不会弹窗\n             *\n             * @param {String | jQuery} element   EFPopupInput的id，DOM节点jQuery对象\n             * @param {Boolean} state             EFPopupInput的可用状态\n             */\n            enable: function (element, state) {\n                var $element = $(element),\n                    $wrapper;\n\n                if ($element.data(\"hidden\")) {\n                    // 真实值输入框隐藏\n                    $element = $(\"#\" + $element.attr(\"id\") + \"_textField\");\n                }\n\n                $wrapper = $element.parent();\n\n                if (state === false) {\n                    $wrapper.addClass(\"i-state-disabled\");\n                    $element.prop(\"disabled\", true);\n                    // 关闭点击图标的事件\n\n                } else {\n                    $wrapper.removeClass(\"i-state-disabled\");\n                    $element.prop(\"disabled\", false);\n                    // 开启点击图标的事件\n                }\n            },\n\n            /**\n             * 控制EFPopupInput的只读状态\n             *\n             * @param {String | jQuery} element   EFPopupInput的id，DOM节点jQuery对象\n             * @param {Boolean} state             EFPopupInput的只读状态\n             */\n            readonly: function (element, state) {\n                var $element = $(element),\n                    $wrapper;\n\n                if ($element.data(\"hidden\")) {\n                    // 真实值输入框隐藏\n                    $element = $(\"#\" + $element.attr(\"id\") + \"_textField\");\n                }\n\n                $wrapper = $element.parent();\n\n                if (state === false) {\n                    $wrapper.removeClass(\"i-state-readonly\");\n                    $element.removeClass(\"i-state-readonly i-input-readonly\");\n                } else {\n                    $wrapper.addClass(\"i-state-readonly\");\n                    $element.addClass(\"i-state-readonly i-input-readonly\");\n                }\n            }\n        },\n\n        // 用于存储Tag标签中配置的子标签信息，IPLATUI下存储JS的配置信息，注意区分\n        EFGrid: {\n            CREATE_ACTION: \"create\",\n            READ_ACTION: \"read\",\n            UPDATE_ACTION: \"update\",\n            DELETE_ACTION: \"destroy\", // 点击删除按钮时，记录删除操作\n\n            _readonlyAddEdit: function (blockId, e, context) {\n                var that = context;\n                // 通过editable属性获取field\n                var editField = that.editable.options.fields;\n                var field = editField.field;\n                var selectedColumn;\n\n                // 判断column中readonly属性\n                if (e && e.model && !e.model.isNew()) { // readonly 仅新增时可编辑\n                    selectedColumn = _.find(e.sender.columns, function (column) {\n                        return column.field === field;\n                    });\n                }\n\n                if (selectedColumn && selectedColumn.readonly === true) {\n                    $(e.container).find('input[name=' + field + ']').attr(\"readonly\", true);\n                    that.closeCell();\n                }\n            },\n\n            // EFGrid上有按钮\n            _hasToolbarButtons: function (toolbarConfig) {\n                return toolbarConfig.buttons.length > 0;\n            },\n\n            // EFGrid上有Setting下拉菜单\n            _hasToolbarSettings: function (toolbarConfig) {\n                return toolbarConfig[\"setting\"].length > 0;\n            },\n\n            // EFGrid上有翻页条\n            _hasToolbarPager: function (options) {\n                return options.pageable && options.pagerPosition === \"top\";\n            },\n\n            /**\n             * 判断Grid是否需要渲染toolbar\n             * @param options\n             * @private\n             */\n            _hasToolBar: function (options) {\n                var toolbarConfig = options.toolbarConfig,\n                    kendoToolBarItems = toolbarConfig.kendoToolBarItems;\n\n                var hasToolbarButtons = this._hasToolbarButtons(toolbarConfig),\n                    hasToolbarSettings = this._hasToolbarSettings(toolbarConfig),\n                    hasToolbarPager = this._hasToolbarPager(options);\n\n                var hasToolBar = hasToolbarButtons || hasToolbarSettings || hasToolbarPager;\n\n                if (toolbarConfig.hidden === true) {\n                    hasToolBar = false;\n\n                    // 隐藏所有的buttons 但是保留settings中的内容 （导出数据），这种情况推荐把翻页条放在grid的上方\n                    if (hasToolbarSettings || hasToolbarPager) {\n                        hasToolBar = true;\n\n                        if (hasToolbarSettings) {\n                            var length = kendoToolBarItems.length;\n\n                            toolbarConfig.kendoToolBarItems = kendoToolBarItems.slice(length - 1);\n                        } else {\n                            toolbarConfig.kendoToolBarItems = [];\n                        }\n                    }\n\n                } else if (toolbarConfig.hidden === \"all\") {\n                    hasToolBar = false;\n                }\n\n                return hasToolBar;\n            }\n\n        },\n\n        EFTreeList: {},\n\n\n        // Tag中使用的属性，理论上对开发者不可见\n        EFComboColumn: [],\n\n        EFOptions: [] // 存储EFOption, EFOptions, EFCodeOption, EFTableOption的所有选项\n\n    });\n\n    // export 到全局作用域 window对象\n    $.extend(window, {\n        IPLAT: IPLAT,\n\n        // 基础的工具类\n        formatNative: formatNative,\n        isAvailable: isAvailable,\n        isBatchAvailable: isBatchAvailable\n    });\n\n\n    // KendoUI组件的配置\n    kendo.ui.List.fn.options.noDataTemplate = \"没有数据\";\n    kendo.ui.AutoComplete.fn.options.noDataTemplate = \"没有数据\";\n\n\n    if (typeof JSON === 'undefined') {\n        window.JSON = {\n            stringify: kendo.stringify\n        };\n    }\n\n    // 浏览器版本检测，并在console中的显示欢迎信息\n    var browser = (function () {\n        var ua = navigator.userAgent, tem,\n            M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n\n        if (/trident/i.test(M[1])) { // IE 11\n            tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n\n            return [\"IE\", (tem[1] || '')];\n            // return 'IE ' + (tem[1] || '');\n        }\n\n        if (M[1] === 'Chrome') { // Opera MS Edge\n            tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n            if (tem != null) {\n                var tempInfo = tem.slice(1).join(' ').replace('OPR', 'Opera');\n                M = tempInfo.split(' ');\n            }\n        }\n\n        M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\n        if ((tem = ua.match(/version\\/(\\d+)/i)) != null) {\n            M.splice(1, 1, tem[1]);\n        }\n\n        return M;\n        // return M.join(' ');\n    })();\n\n    IPLAT.Browser.name = browser[0]; // 浏览器的名称 IE Chrome Safari, MS Edge不属于IE\n    IPLAT.Browser.version = browser[1];\n    IPLAT.Browser.isIE = (/^(MS)?( )?IE/).test(browser[0]);\n    IPLAT.Browser.isIE8 = IPLAT.Browser.isIE && (browser[1] * 1 === 8);\n\n    if (!IPLAT.Browser.isIE) {\n        var intervalId;\n        // 检测浏览的console是否打开\n        // https://github.com/sindresorhus/devtools-detect\n        (function () {\n            var devtools = {\n                open: false,\n                orientation: null\n            };\n            var threshold = 160;\n            var emitEvent = function (state, orientation) {\n                window.dispatchEvent(new CustomEvent('devtoolschange', {\n                    detail: {\n                        open: state,\n                        orientation: orientation\n                    }\n                }));\n            };\n\n            intervalId = setInterval(function () {\n                var widthThreshold = window.outerWidth - window.innerWidth > threshold;\n                var heightThreshold = window.outerHeight - window.innerHeight > threshold;\n                var orientation = widthThreshold ? 'vertical' : 'horizontal';\n\n                if (!(heightThreshold && widthThreshold) &&\n                    ((window.Firebug && window.Firebug.chrome && window.Firebug.chrome.isInitialized) || widthThreshold || heightThreshold)) {\n                    if (!devtools.open || devtools.orientation !== orientation) {\n                        emitEvent(true, orientation);\n                    }\n\n                    devtools.open = true;\n                    devtools.orientation = orientation;\n                } else {\n                    if (devtools.open) {\n                        emitEvent(false, null);\n                    }\n\n                    devtools.open = false;\n                    devtools.orientation = null;\n                }\n            }, 500);\n\n            if (typeof module !== 'undefined' && module.exports) {\n                module.exports = devtools;\n            } else {\n                window.devtools = devtools;\n            }\n        })();\n\n        IPLAT.__debug__ = false;\n        window.addEventListener(\"devtoolschange\", function (e) {\n            if (e.detail.open && !IPLAT.__debug__ && !IPLAT.Util.inIframe()) {\n                // console.clear();\n                IPLAT.__debug__ = true; // 只log一次欢迎信息\n                // ASCII LOGO 来自http://www.network-science.de/ascii/ 字体样式是starwars\n                console.log(\n                    \" __  .______    __           ___   .___________. __    __   __\\n\" +\n                    \"|  | |   _  \\\\  |  |         /   \\\\  |           ||  |  |  | |  |\\n\" +\n                    \"|  | |  |_)  | |  |        /  ^  \\\\ `---|  |----`|  |  |  | |  |\\n\" +\n                    \"|  | |   ___/  |  |       /  /_\\\\  \\\\    |  |     |  |  |  | |  |\\n\" +\n                    \"|  | |  |      |  `----. /  _____  \\\\   |  |     |  `--'  | |  |\\n\" +\n                    \"|__| | _|      |_______|/__/     \\\\__\\\\  |__|      \\\\______/  |__|\\n\" +\n                    \"欢迎使用iPlat4J V6! 当前版本为: %c\" + IPLAT.releaseVersion,\n                    \"color:red\", \" 发布时间为: \" + IPLAT.releaseTime);\n\n                clearInterval(intervalId); // 清除计时器\n            }\n        });\n    }\n\n\n    window.IPLAT = IPLAT;\n    window.IPLATUI = IPLATUI;\n\n})(window.jQuery, window._);\n/**\n * IPLAT的核心数据结构 EiInfo，数据请求工具 EiCommunicator\n *\n * 只依赖iplat.ui.init.js\n * (ui.init-->ui.eiinfo-->ui.core-->ui.component--> ui.util)\n */\n(function ($) {\n    var extend = $.extend,\n\n        IPLAT = window.IPLAT,\n        IPLATUI = window.IPLATUI,\n        getContextPath = IPLAT.getContextPath, // EiCommunicator 使用 contextPath/service\n        isAvailable = IPLAT.isAvailable,\n        isString = IPLAT.isString,\n        isBlankString = IPLAT.isBlankString;\n\n    /**\n     * @class AbstractEi\n     * @description AbstractEi是EiInfo的基类，EiInfo，EiBlock，EiColumn，EiBlockMeta都继承于此类\n     * @constructor\n     */\n    function AbstractEi() {\n        this.extAttr = {};\n    }\n\n    /**\n     * 根据属性名得到属性值\n     * @param {String} prop 属性名\n     * @return {Object} 属性名对应的值\n     */\n    AbstractEi.prototype.get = function (prop) {\n        return this.extAttr[prop];\n    };\n\n    /**\n     * 设置属性值\n     * @param {Object} prop 属性名\n     * @param {Object} value 属性名对应的值\n     */\n    AbstractEi.prototype.set = function (prop, value) {\n        this.extAttr[prop] = value;\n    };\n\n    /**\n     * 取得属性JSON对象\n     * @return {Object} 属性对象\n     */\n    AbstractEi.prototype.getAttr = function () {\n        return this.extAttr;\n    };\n\n    /**\n     * 设置属性JSON对象\n     * @param {Object} attr 要设置的属性对象\n     */\n\n    AbstractEi.prototype.setAttr = function (attr) {\n        this.extAttr = attr;\n    };\n\n\n    /**\n     * @class EiColumn\n     * @description EiColumn构造函数，用于描述列的元数据信息\n     * @extends AbstractEi\n     * @constructor\n     * @param {String} name EiColumn 名称\n     */\n    function EiColumn(name) {\n\n        for (var key in EiColumn.defaults) {\n            this[key] = EiColumn.defaults[key];\n        }\n\n        this.name = name;\n\n        AbstractEi.call(this); // 可以把父类的私有属性继承到子类\n    }\n\n    EiColumn.prototype = new AbstractEi;\n    EiColumn.prototype.constructor = EiColumn;\n    EiColumn.prototype.__ClassName__ = \"EiColumn\";\n\n    EiColumn.defaults = {\n        pos: -1,\n        name: \"\",\n        descName: \"\",\n        type: \"C\",\n        regex: null,\n        formatter: null,\n        editor: \"text\",\n        minLength: 0,\n        maxLength: Math.pow(2, 31) - 1,\n        primaryKey: false,\n        nullable: true,\n        visible: true,\n        readonly: false,\n        displayType: \"text\",\n        errorPrompt: null,\n        dateFormat: null,\n        defaultValue: \"\",\n        validateType: null,\n        width: 96,\n        height: 18,\n        align: \"left\",\n        blockName: null,\n        sourceName: null,\n        labelProperty: null,\n        valueProperty: null\n    };\n\n    /**\n     * EiColumn对象转成JSON对象\n     * @returns {Object} JSON对象\n     */\n    EiColumn.prototype.toJSON = function () {\n        var column = {};\n        var compress = arguments[0];\n\n        if (compress) { // 网络传输时，字段默认值没有变化的，不序列化到JSON中,减少传输的内容\n            for (var prop in this) {\n                if (this.hasOwnProperty(prop) && this[prop] !== EiColumn.defaults[prop]) {\n                    column[prop] = this[prop];\n                }\n            }\n        } else { // 完整的EiColumn属性信息\n            for (var key in this) {\n                if (this.hasOwnProperty(key) && isAvailable(this[key])) {\n                    column[key] = this[key];\n                }\n            }\n        }\n        delete column.extAttr;\n        return column;\n    };\n\n    /**\n     * 解析JSON对象中的EiColumn信息 JSON ==> EiColumn\n     * @param {Object} columnJson\n     */\n    EiColumn.parseColumn = function (columnJson) {\n        var column = new EiColumn(columnJson.name);\n\n        for (var prop in columnJson) {\n            var columnValue = columnJson[prop];\n            if (columnValue && columnValue.replace) {\n                // HTML字符转义 http://www.w3school.com.cn/html/html_entities.asp\n                columnValue = columnValue.replace(/'/g, \"&#39;\");\n            }\n            column[prop] = columnValue;\n        }\n\n        // 使用iplatWidth= true来标记自定义width的column\n        if (!!columnJson[\"width\"]) {\n            column['iplatWidth'] = true\n        }\n        return column;\n    };\n\n\n    /**\n     * @class EiBlockMeta\n     * @description EiBlockMeta构造函数，EiBlockMeta列头类；EiBlock的元数据定义（EiColumn）集合，可以理解为EiColumns\n     * @extends AbstractEi\n     * @constructor\n     * @param {string} blockId blockId\n     */\n    function EiBlockMeta(blockId) {\n        this.blockId = blockId;\n        this.metas = {}; // {eiColumn.name: eiColumn}\n        this.desc = \"\";\n        this.extAttr = {};\n        this.colCount = 0;\n    }\n\n    EiBlockMeta.prototype = new AbstractEi;\n    EiBlockMeta.prototype.constructor = EiBlockMeta;\n    EiBlockMeta.prototype.__ClassName__ = \"EiBlockMeta\";\n\n    /**\n     * 设置EiBlockMeta列头类的描述\n     * @param {String} desc 列头描述信息\n     */\n    EiBlockMeta.prototype.setDesc = function (desc) {\n        this.desc = desc;\n    };\n\n    /**\n     * 取得列头描述信息\n     * @return {String} 列头描述\n     */\n    EiBlockMeta.prototype.getDesc = function () {\n        return this.desc;\n    };\n\n    /**\n     * 添加列头信息 Meta信息就是EiColumn\n     * @param {EiColumn} eiColumn 列信息\n     * @throws Error异常\n     */\n    EiBlockMeta.prototype.addMeta = function (eiColumn) {\n        if (IPLAT.isEiColumn(eiColumn)) {\n            this.metas[eiColumn.name] = eiColumn;\n            if (eiColumn.pos < 0)\n                eiColumn.pos = this.colCount;\n            this.colCount++;\n        } else {\n            throw new Error(\"请检查参数，必须添加EiColumn对象\");\n        }\n    };\n\n    /**\n     * 根据列名，获取列信息EiColumn\n     * @param {String} name 列名称\n     * @return {EiColumn} 列信息\n     * @exception 无异常抛出\n     */\n    EiBlockMeta.prototype.getMeta = function (name) {\n        return this.metas[name];\n    };\n\n    /**\n     * 根据列名，删除列信息\n     * @param {String} name 列名称\n     */\n    EiBlockMeta.prototype.removeMeta = function (name) {\n        delete this.metas[name];\n    };\n\n    /**\n     * 获取所在的blockId\n     * @return {String} 所在的blockId\n     */\n    EiBlockMeta.prototype.getBlockId = function () {\n        return this.blockId;\n    };\n\n    /**\n     * 取得列头所有的列信息\n     * @return {Object} 列头所有的列信息\n     */\n    EiBlockMeta.prototype.getMetas = function () {\n        return this.metas;\n    };\n\n    /**\n     * EiBlockMeta对象转换成JSON对象\n     * @returns {Object} JSON对象\n     */\n    EiBlockMeta.prototype.toJSON = function () {\n        var blockMeta = {},\n            compress = arguments[0];\n\n        blockMeta[EiInfoJsonConstants.BLOCK_META_DESC] = this.getDesc();\n        blockMeta[EiInfoJsonConstants.ATTRIBUTES] = this.getAttr();\n\n        var columns = [];\n        for (var columnName in this.metas) {\n            columns.push(this.metas[columnName].toJSON(compress)); // EiColumn.prototype.toJSON\n        }\n        blockMeta[EiInfoJsonConstants.BLOCK_META_COLUMNLIST] = columns;\n\n        return blockMeta;\n    };\n\n    /**\n     * 解析JSON对象中的EiBlockMeta信息 JSON ==> EiBlockMeta\n     * @param {String} blockId blockId\n     * @param {Object} blockMetaJson EiBlockMeta的JSON对象\n     */\n    EiBlockMeta.parseBlockMeta = function (blockId, blockMetaJson) {\n        var blockMeta = new EiBlockMeta(blockId);\n\n        var value = blockMetaJson[EiInfoJsonConstants.BLOCK_META_DESC];\n        if (isAvailable(value)) {\n            blockMeta.setDesc(value);\n        }\n\n        value = blockMetaJson[EiInfoJsonConstants.ATTRIBUTES];\n        if (isAvailable(value)) {\n            blockMeta.setAttr(value);\n        }\n\n        value = blockMetaJson[EiInfoJsonConstants.BLOCK_META_COLUMNLIST];\n        if (isAvailable(value)) { // value should be Array\n            for (var i = 0; i < value.length; i++) {\n                var eiColumn = EiColumn.parseColumn(value[i]);\n                blockMeta.addMeta(eiColumn);\n            }\n        }\n        return blockMeta;\n    };\n\n    /**\n     * @class EiBlock\n     * @description EiBlock 数据信息的主要载体\n     * @constructor\n     * @extends AbstractEi\n     * @param {String|EiBlockMeta} blockId blockId字符串或者EiBlockMeta对象\n     */\n    function EiBlock(blockId) {\n        if (typeof blockId === \"string\") {\n            this.meta = new EiBlockMeta(blockId);\n        } else if (IPLAT.isEiBlockMeta(blockId)) {\n            this.meta = blockId;\n        } else {\n            throw new Error(\"请检查参数类型，无法创建EiBlock\");\n        }\n\n        this.rows = []; // rows是二维数组 [[],[],[]]\n        this.colCount = 0;\n        this.extAttr = {};\n    }\n\n    EiBlock.prototype = new AbstractEi;\n    EiBlock.prototype.constructor = EiBlock;\n    EiBlock.prototype.__ClassName__ = \"EiBlock\";\n\n    /**\n     * 获取block的列头信息 EiBlockMeta\n     * @return {EiBlockMeta} 返回block的列头信息\n     */\n    EiBlock.prototype.getBlockMeta = function () {\n        return this.meta;\n    };\n\n    /**\n     * 设置block的列头信息 EiBlockMeta\n     * @param {EiBlockMeta} blockMeta block所在列的列头信息\n     */\n    EiBlock.prototype.setBlockMeta = function (blockMeta) {\n        this.meta = blockMeta;\n    };\n\n    /**\n     * 获取EiBlock的blockId\n     * @return {String} EiBlock的blockId\n     */\n    EiBlock.prototype.getBlockId = function () {\n        return this.getBlockMeta().getBlockId();\n    };\n\n    /**\n     * 给block所在列添加行数据\n     * @param {Array} row 行数据\n     */\n    EiBlock.prototype.addRow = function (row) {\n        if (row == null) {\n            this.rows.push([]);\n        } else {\n            this.rows.push(row);\n        }\n    };\n\n    /**\n     * 取得block所有行数据\n     * @return {Array} 返回block的行数据\n     */\n    EiBlock.prototype.getRows = function () {\n        return this.rows;\n    };\n\n    /**\n     * 设置block所有行数据\n     * @param {Array} rows 重置block的行数据的数组\n     */\n    EiBlock.prototype.setRows = function (rows) {\n        this.rows = rows;\n    };\n\n    /**\n     * 根据列名在EiBlock中获取列信息 EiColumn\n     * @param {String} colName 列名\n     * @returns {EiColumn|null}\n     */\n    EiBlock.prototype.getColumn = function (colName) {\n        return this.getBlockMeta().getMeta(colName) || null;\n    };\n\n    /**\n     * 根据列名，获取EiColumn的位置pos信息\n     * @param colName 列名\n     * @returns {Number} 没有对应的列，返回-1\n     */\n    EiBlock.prototype.getColumnPos = function (colName) {\n        var column = this.getColumn(colName);\n        return column != null ? column.pos : -1;\n    };\n\n    /**\n     * 根据指定行号及列名,设定其数据值.\n     * @param {Number} rowNo 行号\n     * @param {String} colName 列名\n     * @param {String} value 数据值\n     */\n    EiBlock.prototype.setCell = function (rowNo, colName, value) {\n        var pos = this.getColumnPos(colName);\n        if (pos >= 0) {\n            while (typeof (this.rows[rowNo]) === \"undefined\") {\n                // rows的行数小于rowNo，添加空行处理\n                this.addRow(null);\n            }\n            this.rows[rowNo][pos] = value;\n        }\n    };\n\n    /**\n     * 根据指定行号、列名，取得数据值\n     * @param {Number} rowNo 行号\n     * @param {String} colName 列名\n     * @return {String} value 数据值\n     */\n    EiBlock.prototype.getCell = function (rowNo, colName) {\n        var pos = this.getColumnPos(colName);\n\n        if (pos >= 0) {\n            return isAvailable(this.rows[rowNo][pos]) ? this.rows[rowNo][pos] : \"\";\n        } else {\n            return \"\";\n        }\n    };\n\n    /**\n     * 根据行号、列号，取得数据值\n     * @param {Number} rowNo 行号\n     * @param {Number} colPos 列号\n     * @return {String} value 数据值\n     */\n    EiBlock.prototype.getCellByPos = function (rowNo, colPos) {\n        return this.rows[rowNo][colPos];\n    };\n\n    /**\n     * JSON格式的一行数据，拉平成一行数组数据 {key: value} ==> [value]\n     * @param {Object} rowJson  key，value形式的一行json数据\n     * @param {Boolean} transport 传送到后台数据库的数据的默认值处理\n     * @return {Array} JSON对象拉平后的数组数据\n     */\n    EiBlock.prototype.getMappedArray = function (rowJson, transport) {\n        var metas = this.getBlockMeta().getMetas(); // {eiColumn.name: eiColumn}\n        var row = [];\n        for (var colName in metas) {\n            if (metas.hasOwnProperty(colName)) {\n                var pos = this.getColumnPos(colName);\n                if (pos >= 0) {\n                    if (transport) {\n                        if (metas[colName].type === \"N\") {\n                            // 2017-09-17 JSON Lib 丢失精度的问题, N类型的数据到后台还是String JavaBean 处理\n                            row[pos] = (rowJson[colName] || 0) + \"\";\n                        } else {\n                            row[pos] = rowJson[colName] || \"\";\n                        }\n                    } else {\n                        row[pos] = rowJson[colName];\n                    }\n                }\n            }\n        }\n        return row;\n    };\n\n    /**\n     * 一行数组数据转换成为一行key，value的json格式的数据 [value] ==> {key: value}\n     * @param {Array} row\n     * @return {Object} 由数组数据还原后的JSON对象\n     */\n    EiBlock.prototype.getMappedObject = function (row) {\n        var metas = this.getBlockMeta().getMetas();\n        var rowJson = {};\n        for (var colName in metas) {\n            if (metas.hasOwnProperty(colName)) {\n                var eiColumn = metas[colName];\n\n                if (eiColumn.type === \"N\") {\n                    rowJson[eiColumn.name] = row[eiColumn.pos] * 1; // 后台会把N类型的数据设为字符串\n                } else {\n                    rowJson[eiColumn.name] = row[eiColumn.pos];\n                }\n            }\n        }\n        return rowJson;\n    };\n\n    /**\n     * 将block中所有的rows二维数组转换为json数组(Spring MVC)\n     * [[],[],[]] ==> [{},{},{}]\n     * @return {Array} 由EiBlock所有的行数据转换成的JSON对象数组\n     */\n    EiBlock.prototype.getMappedRows = function () {\n        var rowsJson = [];\n        for (var i = 0; i < this.rows.length; i++) {\n            var row = this.rows[i];\n            var rowJson = this.getMappedObject(row);\n            rowsJson.push(rowJson);\n        }\n        return rowsJson;\n    };\n\n    /**\n     * 复制当前的EiBlock对象\n     */\n    EiBlock.prototype.clone = function () {\n        return EiBlock.parseBlock(this.getBlockId(), this.toJSON());\n    };\n\n    /**\n     * 通过列名数组，或者[{},{},{}]形式的数组创建EiBlock\n     * @param blockId 数据块的id\n     * @param data 列名数组或者JSON形式的数据行\n     * @return {EiBlock}\n     */\n    EiBlock.build = function (blockId, data) {\n        var block = new EiBlock(blockId),\n            rowData = false,\n            columns = [];\n\n        if ($.isArray(data)) {\n            var blockMeta = new EiBlockMeta(blockId);\n            if ($.isPlainObject(data[0])) {\n                // 数据行\n                for (var columnName in data[0]) {\n                    columns.push(columnName);\n                }\n                rowData = true;\n            } else {\n                // 列名数组\n                columns = data;\n            }\n\n            $.each(columns, function (i, columnName) {\n                blockMeta.addMeta(new EiColumn(columnName));\n            });\n\n            block.setBlockMeta(blockMeta);\n\n            if (rowData) { // JSON Data Array 数据行\n                for (var i = 0; i < data.length; i++) {\n                    block.addRow(block.getMappedArray(data[i]));\n                }\n            }\n\n            return block;\n        }\n\n        return block;\n    };\n\n    /**\n     * EiBlock对象转换为JSON Object\n     */\n    EiBlock.prototype.toJSON = function () {\n        var block = {},\n            compress = arguments[0];\n        block[EiInfoJsonConstants.ATTRIBUTES] = this.getAttr();\n        block[EiInfoJsonConstants.BLOCK_META] = this.getBlockMeta().toJSON(compress);\n        block[EiInfoJsonConstants.BLOCK_DATA] = this.getRows(); // rows: [[], []]\n        return block;\n    };\n\n    /**\n     * 解析JSON对象中的EiBlock信息 JSON ==> EiBlock\n     * @param {String} blockId\n     * @param {Object} blockJson\n     */\n    EiBlock.parseBlock = function (blockId, blockJson) {\n        var block;\n        var value = blockJson[EiInfoJsonConstants.BLOCK_META];\n\n        if (isAvailable(value)) {\n            var blockMeta = EiBlockMeta.parseBlockMeta(blockId, value);\n            block = new EiBlock(blockMeta);\n        } else {\n            block = new EiBlock(blockId);\n        }\n\n        value = blockJson[EiInfoJsonConstants.ATTRIBUTES];\n        if (isAvailable(value)) {\n            block.setAttr(value);\n        }\n\n        value = blockJson[EiInfoJsonConstants.BLOCK_DATA];\n        if (isAvailable(value)) {\n            block.rows = value;\n        }\n        return block;\n    };\n\n    /**\n     * @class EiInfo\n     * @description EiInfo 对象构造函数\n     * @constructor\n     * @extends AbstractEi\n     */\n    function EiInfo() {\n        var name = arguments[0];\n\n        this.name = \"\";\n        this.descName = \"\";\n        this.msg = \"\";\n        this.msgKey = \"\";\n        this.detailMsg = \"\";\n        this.status = 0;\n        this.blocks = {};\n        this.extAttr = {};\n\n        if (typeof name === \"string\") {\n            this.name = name;\n        }\n\n        if (IPLATUI.Config.EiInfo.version) {\n            // EiInfo版本信息的全局配置, 2.0 版本EiInfo 引入的新结构\n            this.__version__ = IPLATUI.Config.EiInfo.version;\n            this.traceId = \"\";\n\n            // this.__context__ = { // TODO context提取成为类 提供API\n            //     userId: \"\",\n            //     uuid: \"\",\n            //     spanId: \"\",\n            //     traceId: \"\"\n            // };\n        }\n    }\n\n    EiInfo.prototype = new AbstractEi;\n    EiInfo.prototype.constructor = EiInfo;\n    EiInfo.prototype.__ClassName__ = \"EiInfo\";\n\n    /**\n     * 取得EiInfo的名称\n     * @return {String} EiInfo名称\n     */\n    EiInfo.prototype.getName = function () {\n        return this.name;\n    };\n\n    /**\n     * 设置EiInfo的名称\n     * @param {String} name EiInfo名称\n     */\n    EiInfo.prototype.setName = function (name) {\n        this.name = name;\n    };\n\n    /**\n     * 以三段式的方式从EiInfo中获取某字段的值，无法获取值是返回null\n     * @param {String} str 三段式blockName-RowNum-ColName 如\"result-0-siteArticleButton\"\n     */\n    EiInfo.prototype.get = function (str) {\n        if (!isString(str) || isBlankString(str)) {\n            // 参数不是字符串，或者是空串时，直接返回null\n            return null;\n        }\n\n        var strArray = str.split(\"-\");\n        var block;\n        if (3 === strArray.length) { // 三段式，获取block的Cell值\n            block = this.getBlock(strArray[0]); // blockName\n            if (isAvailable(block)) {\n                // rowNum colName，EiBlock.getCell没有对应值时， 返回 \"\"\n                return block.getCell(parseInt(strArray[1]), strArray[2]);\n            } else {\n                return null;\n            }\n        } else if (2 === strArray.length) { // 两段式，获取block的属性区attr中的属性值\n            block = this.getBlock(strArray[0]); // blockName\n            if (isAvailable(block)) {\n                // attrName 没有对应值时，返回undefined\n                return block.get(strArray[1]);\n            } else {\n                return null;\n            }\n        }\n\n        // 一段式，获取EiInfo的属性区的属性值 attrName，没有对应值时，返回undefined\n        return this.extAttr[strArray[0]];\n    };\n\n\n    /**\n     * 设置EiInfo消息信息\n     * @param {String} msg 消息信息\n     */\n    EiInfo.prototype.setMsg = function (msg) {\n        this.msg = msg;\n    };\n\n    /**\n     * 取得EiInfo消息信息\n     * @return {String}  消息信息\n     */\n    EiInfo.prototype.getMsg = function () {\n        return this.msg;\n    };\n\n    /**\n     * 设置EiInfo消息信息键\n     * @param {String} msgKey\n     */\n    EiInfo.prototype.setMsgKey = function (msgKey) {\n        this.msgKey = msgKey;\n    };\n\n    /**\n     * 取得EiInfo消息信息键\n     * @return {String}  消息信息键\n     */\n    EiInfo.prototype.getMsgKey = function () {\n        return this.msgKey;\n    };\n\n    /**\n     * 设置EiInfo的详细信息\n     * @param {String} sMsg  详细信息\n     */\n    EiInfo.prototype.setDetailMsg = function (sMsg) {\n        this.detailMsg = sMsg;\n    };\n\n    /**\n     * 取得EiInfo的详细信息\n     * @return {String}  详细信息\n     */\n    EiInfo.prototype.getDetailMsg = function () {\n        return this.detailMsg;\n    };\n\n    /**\n     * 设置EiInfo的状态\n     * @param {Number} status 状态\n     */\n    EiInfo.prototype.setStatus = function (status) {\n        this.status = status;\n    };\n\n    /**\n     * 取得EiInfo状态\n     * @return {Number}  状态\n     */\n    EiInfo.prototype.getStatus = function () {\n        return this.status;\n    };\n\n    /**\n     * 设置EiInfo描述信息\n     * @param {String} desc 描述信息\n     */\n    EiInfo.prototype.setDescName = function (desc) {\n        this.descName = desc;\n    };\n\n    /**\n     * 取得EiInfo描述信息\n     * @return {String} 描述信息\n     */\n    EiInfo.prototype.getDescName = function () {\n        return this.descName;\n    };\n\n    /**\n     * 给EiInfo添加EiBlock块\n     *\n     * @param {EiBlock | String} eiBlock EiBlock对象\n     * @see EiBlock\n     */\n    EiInfo.prototype.addBlock = function (eiBlock) {\n        this.blocks[eiBlock.getBlockId()] = eiBlock;\n    };\n\n    /**\n     * 根据blockId从EiInfo取得EiBlock块\n     * @param {String} blockId\n     * @return {EiBlock}  EiBlock块\n     * @see EiBlock\n     */\n    EiInfo.prototype.getBlock = function (blockId) {\n        return this.blocks[blockId];\n    };\n\n    /**\n     * 取得EiInfo所有的EiBlock块\n     * @return {Object} EiBlock块 {blockId: eiBlock}\n     */\n    EiInfo.prototype.getBlocks = function () {\n        return this.blocks;\n    };\n\n    /**\n     * 根据key名,按照块名、行号、列名规则，以'-'分隔，设置其值.\n     */\n    EiInfo.prototype.set = function () {\n        var blockId;\n\n        if (arguments.length > 2) {\n            blockId = arguments[0];\n            if (typeof(this.blocks[blockId]) == \"undefined\") {\n                this.blocks[blockId] = new EiBlock(blockId);\n            }\n        }\n\n        // 按照块名、行号、列名三段式参数解析\n        switch (arguments.length) {\n            case 2: // 设置EiInfo的属性值\n                if (typeof arguments[0] == \"string\") {\n                    var strArray = arguments[0].split(\"-\");\n                    if (strArray.length == 1) { // 设置属性区\n                        AbstractEi.prototype.set.apply(this, arguments);\n                    } else if (strArray.length == 2) { // 设置EiBlock的属性区\n                        this.set(strArray[0], strArray[1], arguments[1]);\n                    } else if (strArray.length == 3) { // 设置EiBlock的数据区\n                        this.set(strArray[0], strArray[1], strArray[2], arguments[1]);\n                    }\n                }\n                break;\n\n            case 3: // 设置EiBlock块的属性值\n                this.blocks[blockId].set(arguments[1], arguments[2]);\n                break;\n\n            case 4: // 设置EiBlock块cell值\n                if (typeof(this.blocks[blockId].getBlockMeta().getMeta(arguments[2])) == \"undefined\") {\n                    var column = new EiColumn(arguments[2]);\n\n                    column.pos = this.blocks[blockId].colCount++;\n\n                    this.blocks[blockId].getBlockMeta().addMeta(column);\n                }\n                this.blocks[blockId].setCell(arguments[1], arguments[2], arguments[3]);\n                break;\n        }\n    };\n\n    // form表单由于历史原因，input只写了name属性，没有提供id属性\n    // 平台的规范是需要id和name同时设置, _selectById == ef.get\n    function _selectById(id) {\n        var node = document.getElementById(id);\n        if (!node) {\n            var nodeList = document.getElementsByName(id);\n            if (nodeList.length > 0)\n                node = nodeList[0];\n        }\n        return node;\n    }\n\n    /**\n     * 根据DOM元素（输入字段）的id，把其值设置到EiInfo对应的EiBlock块中\n     * id按照块名、行号、列名规则，以'-'分隔 <input id=\"result-0-ename\" name=\"result-0-ename\">\n     * @param {String} inputId DOM的id\n     */\n    EiInfo.prototype.setById = function (inputId) {\n        this.setByNameValue(inputId, _selectById(inputId).value);\n    };\n\n    /**\n     * 根据id名,按照块名、行号、列名规则，以'-'分隔，设置到EiInfo中\n     * @param {String} inputId  key名\n     * @param {Object} oldValue  欲设置的值\n     */\n    EiInfo.prototype.setByNameValue = function (inputId, oldValue) {\n        var value = $.trim(oldValue);\n        // 防止inputId为空\n        if (Object.prototype.toString.call(inputId) === \"[object String]\" && !!inputId) {\n            var idArray = inputId.split(\"-\");\n            if (idArray.length === 3) return this.set(idArray[0], idArray[1], idArray[2], value);\n            if (idArray.length === 2) return this.set(idArray[0], idArray[1], value);\n            if (idArray.length === 1) return this.set(idArray[0], value);\n        }\n    };\n\n    /**\n     * 序列化组织form表单或者div中所有的输入字段，根据id三段式的定义，设置EiInfo的信息\n     * DOM节点以及其包含的子节点 根据其id，设置到EiInfo中去 id按照块名、行号、列名规则，以'-'分隔\n     * @param {Object} divId    DOM节点对应的ID\n     */\n    EiInfo.prototype.setByNode = function (divId) {\n        this.setByNodeObject(_selectById(divId), arguments[1]);\n    };\n\n    /**\n     * 遍历div中所有的input，select，textarea元素，然后将其值设置到EiInfo中\n     * @param {Object} divNode div dom节点\n     * @param {Boolean} force 强制序列化div中所有的输入元素，忽略输入元素上的exclude属性\n     */\n    EiInfo.prototype.setByNodeObject = function (divNode, force) {\n        var i, node, nodes, checkboxes = {};\n\n        nodes = divNode.getElementsByTagName(\"input\");\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (force || !$(node).data(\"exclude\")) { // node.exclude表示字段不要被序列化至EiInfo\n                if (node.type === \"radio\" && !node.checked)\n                    continue;\n\n                if (node.type === \"checkbox\") {\n                    if (node.checked) {\n                        if (checkboxes[node.name] === undefined) {\n                            // 第一个checkbox\n                            checkboxes[node.name] = node.value;\n                        } else {\n                            // 已有checkbox选中，追加选中的value，用','分隔\n                            checkboxes[node.name] = checkboxes[node.name] + ',' + node.value;\n                        }\n                    }\n                    continue;\n                }\n\n                if ($(node).data(\"role\") === \"multiselect\") {\n                    // 处理多选场景 EiInfo的序列化\n                    var value = $(node).data(\"kendoMultiSelect\").value().join(\",\");\n                    this.setByNameValue(node.name, value);\n                } else {\n                    // checked的radio input和text input，在此统一赋值\n                    this.setByNameValue(node.name, node.value);\n                }\n            }\n        }\n\n        for (var name in checkboxes) { // checkbox的赋值\n            this.setByNameValue(name, checkboxes[name]);\n        }\n\n        nodes = divNode.getElementsByTagName(\"select\");\n\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (force || !$(node).data(\"exclude\")) {\n                if (!node.multiple) { // 单选select\n                    if (node.options.length > 0)\n                        if (node.selectedIndex >= 0) {\n                            this.setByNameValue(node.name, node.options[node.selectedIndex].value);\n                        }\n                        else {\n                            this.setByNameValue(node.name, \"\");\n                        }\n                }\n                else {\n                    var val = [];\n                    for (var j = 0; j < node.options.length; j++) {\n                        var option = node[j];\n                        if (option.selected === true) {\n                            val.push(option.value);\n                        }\n                    }\n                    this.setByNameValue(node.name, val.join(','));\n                }\n            }\n        }\n\n        nodes = divNode.getElementsByTagName(\"textarea\");\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (force || !$(node).data(\"exclude\")) {\n                this.setByNameValue(node.name, node.value);\n            }\n        }\n    };\n\n    /**\n     *\n     * 遍历节点内所有的input，select，textarea元素，快速构建出EiInfo\n     * @param {Mixed} node jQuery selector字符串，jQuery对象，DOM对象\n     */\n    EiInfo.build = function (node) {\n        var info = new EiInfo(\"\");\n        if ($(node)[0]) { // 需要序列化的DOM节点必须存在\n            info.setByNodeObject($(node)[0]);\n        }\n        return info;\n    };\n\n    /**\n     * 解析JSON对象中的EiInfo信息 JSON ==> EiInfo\n     * @param {Object} eiJSON 包含EiInfo信息的JSON对象\n     * @return {EiInfo} JSON对象解析成的EiInfo\n     */\n    EiInfo.parseJSONObject = function (eiJSON) {\n        var parser = EiInfoParserFactory.getEiInfoParser(eiJSON);\n        return parser.parseJSON.call(this, eiJSON);\n\n    };\n\n    EiInfo.parseJSONString = function (jsonString) {\n        return EiInfo.parseJSONObject(JSON.parse(jsonString));\n    };\n\n    EiInfo.prototype.toJSON = function () {\n        var parser = EiInfoParserFactory.getEiInfoParser(this);\n        return parser.toJSON.apply(this, arguments);\n    };\n\n    EiInfo.prototype.toJSONString = function () {\n        return JSON.stringify(this.toJSON(arguments));\n    };\n\n    EiInfo.prototype.clone = function () {\n        return EiInfo.parseJSONObject(this.toJSON());\n    };\n\n    /**\n     * 获取EiInfo解析器的工厂方法\n     */\n    var EiInfoParserFactory = {\n        getEiInfoParser: function (eiInfo) {\n            if (eiInfo[EiInfoJsonConstants.VERSION] === \"2.0\") {\n                return EiInfoParser.V2;\n            }\n\n            return EiInfoParser.V1;\n        }\n    };\n\n    /**\n     * 不同版本的EiInfo解析器\n     */\n    var EiInfoParser = {\n        V1: {\n            toJSON: function () {\n                var eiInfo = {},\n                    that = this;\n\n                eiInfo[EiInfoJsonConstants.EIINFO_NAME] = that.getName();\n                eiInfo[EiInfoJsonConstants.EIINFO_DESC_NAME] = that.getDescName();\n                eiInfo[EiInfoJsonConstants.EIINFO_MESSAGE] = that.getMsg();\n                eiInfo[EiInfoJsonConstants.EIINFO_MESSAGE_KEY] = that.getMsgKey();\n                eiInfo[EiInfoJsonConstants.EIINFO_DETAIL_MESSAGE] = that.getDetailMsg();\n                eiInfo[EiInfoJsonConstants.EIINFO_STATUS] = that.getStatus();\n\n                eiInfo[EiInfoJsonConstants.ATTRIBUTES] = that.getAttr();\n\n                // 处理blocks\n                var blocks = {};\n\n                for (var blockId in this.getBlocks()) {\n                    blocks[blockId] = this.getBlock(blockId).toJSON(arguments); // EiBlock ==> JSON\n                }\n\n                eiInfo[EiInfoJsonConstants.EIINFO_BLOCKS] = blocks; // {blocks: {result: {}, inqu_status: {}}}\n\n                return eiInfo;\n            },\n            parseJSON: function (eiJSON) {\n                var eiInfo = new EiInfo(\"\");\n\n                var value = eiJSON[EiInfoJsonConstants.EIINFO_NAME];\n                if (isAvailable(value)) {\n                    eiInfo.setName(value);\n                }\n\n                value = eiJSON[EiInfoJsonConstants.EIINFO_DESC_NAME];\n                if (isAvailable(value)) {\n                    eiInfo.setDescName(value);\n                }\n\n                value = eiJSON[EiInfoJsonConstants.EIINFO_MESSAGE];\n                if (isAvailable(value)) {\n                    eiInfo.setMsg(value);\n                }\n\n                value = eiJSON[EiInfoJsonConstants.EIINFO_MESSAGE_KEY];\n                if (isAvailable(value)) {\n                    eiInfo.setMsgKey(value);\n                }\n\n                value = eiJSON[EiInfoJsonConstants.EIINFO_DETAIL_MESSAGE];\n                if (isAvailable(value)) {\n                    eiInfo.setDetailMsg(value);\n                }\n\n                value = eiJSON[EiInfoJsonConstants.EIINFO_STATUS];\n                if (isAvailable(value)) {\n                    eiInfo.setStatus(value);\n                }\n\n                value = eiJSON[EiInfoJsonConstants.ATTRIBUTES];\n                if (isAvailable(value)) {\n                    eiInfo.setAttr(value);\n                }\n\n                value = eiJSON[EiInfoJsonConstants.EIINFO_BLOCKS];\n                if (isAvailable(value)) {\n                    for (var blockId in value) {\n                        var block = EiBlock.parseBlock(blockId, value[blockId]);\n                        eiInfo.addBlock(block);\n                    }\n                }\n                return eiInfo;\n            }\n        },\n        V2: {\n            toJSON: function () {\n                var that = this,\n                    // 防止污染 attr\n                    eiInfo = $.extend(true, {}, that.getAttr()); // EiInfo的扩展属性区作为新格式的主要内容\n\n                eiInfo[EiInfoJsonConstants.VERSION] = \"2.0\"; // 版本号\n\n                var sysJSON = eiInfo[EiInfoJsonConstants.SYS] = {}; // EiInfo的标准属性区\n\n                sysJSON[EiInfoJsonConstants.EIINFO_NAME] = that.getName();\n                sysJSON[EiInfoJsonConstants.EIINFO_DESC_NAME] = that.getDescName();\n                sysJSON[EiInfoJsonConstants.EIINFO_MESSAGE] = that.getMsg();\n                sysJSON[EiInfoJsonConstants.EIINFO_MESSAGE_KEY] = that.getMsgKey();\n                sysJSON[EiInfoJsonConstants.EIINFO_DETAIL_MESSAGE] = that.getDetailMsg();\n                sysJSON[EiInfoJsonConstants.EIINFO_STATUS] = that.getStatus();\n                sysJSON[EiInfoJsonConstants.EIINFO_TRACE_ID] = that.traceId || \"\";\n\n                // 处理blocks\n                var blocks = {};\n                for (var blockId in that.getBlocks()) {\n                    blocks[blockId] = that.getBlock(blockId).toJSON(arguments); // EiBlock ==> JSON\n                }\n                eiInfo[EiInfoJsonConstants.BLOCKS] = blocks; // {blocks: {result: {}, inqu_status: {}}}\n\n                // 调用链路相关的context\n                // eiInfo[EiInfoJsonConstants.CONTEXT] = $.extend({}, that.__context__);\n\n                return eiInfo;\n\n            },\n            parseJSON: function (eiJSON) {\n                var eiInfo = new EiInfo(\"\"),\n                    sysJSON = eiJSON[EiInfoJsonConstants.SYS], // EiInfo的标准属性区\n                    value;\n\n                eiInfo[EiInfoJsonConstants.VERSION] = \"2.0\"; // 版本\n\n                value = sysJSON[EiInfoJsonConstants.EIINFO_NAME];\n                if (isAvailable(value)) {\n                    eiInfo.setName(value);\n                }\n\n                value = sysJSON[EiInfoJsonConstants.EIINFO_DESC_NAME];\n                if (isAvailable(value)) {\n                    eiInfo.setDescName(value);\n                }\n\n                value = sysJSON[EiInfoJsonConstants.EIINFO_MESSAGE];\n                if (isAvailable(value)) {\n                    eiInfo.setMsg(value);\n                }\n\n                value = sysJSON[EiInfoJsonConstants.EIINFO_MESSAGE_KEY];\n                if (isAvailable(value)) {\n                    eiInfo.setMsgKey(value);\n                }\n\n                value = sysJSON[EiInfoJsonConstants.EIINFO_DETAIL_MESSAGE];\n                if (isAvailable(value)) {\n                    eiInfo.setDetailMsg(value);\n                }\n\n                value = sysJSON[EiInfoJsonConstants.EIINFO_STATUS];\n                if (isAvailable(value)) {\n                    eiInfo.setStatus(value);\n                }\n\n                // traceId 的加入\n                value = sysJSON[EiInfoJsonConstants.EIINFO_TRACE_ID];\n                if (value) {\n                    eiInfo.traceId = value;\n                }\n\n                // context的处理\n                // value = eiJSON[EiInfoJsonConstants.CONTEXT];\n                // if (isAvailable(value)) {\n                //     eiInfo[EiInfoJsonConstants.CONTEXT] = value;\n                // }\n\n\n                // blocks区域处理\n                value = eiJSON[EiInfoJsonConstants.BLOCKS];\n                if (isAvailable(value)) {\n                    for (var blockId in value) {\n                        var block = EiBlock.parseBlock(blockId, value[blockId]);\n                        eiInfo.addBlock(block);\n                    }\n                }\n\n                var json = $.extend({}, eiJSON);\n                delete json[EiInfoJsonConstants.SYS];\n                delete json[EiInfoJsonConstants.VERSION];\n                // delete json[EiInfoJsonConstants.CONTEXT];\n                delete json[EiInfoJsonConstants.BLOCKS];\n\n                // 顶层的JSON挪动到扩展属性区\n                value = json;\n                if (isAvailable(value)) {\n                    eiInfo.setAttr(value);\n                }\n\n                return eiInfo;\n            }\n        }\n    };\n\n    var EiConstant = {\n        EF_FORM_ENAME: \"efFormEname\",\n        EF_FORM_CNAME: \"efFormCname\",\n        EF_FORM_POPUP: \"efFormPopup\",\n        EF_CUR_FORM_ENAME: \"efCurFormEname\", // 发起请求的当前页面号，可能与efFormEname相同，特殊情况，可能不同\n        EF_FORM_LOAD_PATH: \"efFormLoadPath\",\n        EF_FORM_STYLE: \"efFormStyle\",\n        EF_FORM_INFO_TAG: \"efFormInfoTag\",\n        EF_FORM_BUTTON_DESC: \"efFormButtonDesc\",\n        EF_CUR_BUTTON_ENAME: \"efCurButtonEname\", // 用户当前点击的按钮名称\n\n        SERVICE_NAME: \"serviceName\",\n        METHOD_NAME: \"methodName\",\n        STATUS: \"status\",\n        SQL_NAME: \"sqlName\",\n\n        EI: \"ei\",\n        EIINFO: \"eiinfo\",\n\n        SHOW_MSG: \"efShowMsg\", // 控制前端是否显示通知消息\n        SHOW_DETAIL_MSG: \"efShowDetailMsg\", // 控制前端是否显示详细的通知消息\n\n        LIMIT: \"limit\", // pageSize\n        OFFSET: \"offset\", // page, take, skip\n        COUNT: \"count\",\n        SHOW_COUNT: \"showCount\", // 后台是否进行count操作\n        ORDER_BY: \"orderBy\",\n        COLUMN_TOTAL_SUM: \"columnTotalSum\" // 后台总计信息返回\n    };\n\n    /* EiInfo转换时的常量定义 */\n    var EiInfoJsonConstants = {\n        ATTRIBUTES: \"attr\",\n\n        EIINFO_NAME: \"name\",\n        EIINFO_DESC_NAME: \"descName\",\n        EIINFO_MESSAGE: \"msg\",\n        EIINFO_MESSAGE_KEY: \"msgKey\",\n        EIINFO_DETAIL_MESSAGE: \"detailMsg\",\n        EIINFO_STATUS: \"status\",\n        EIINFO_TRACE_ID: \"traceId\", // 调用链路的traceId 在SYS区域\n\n        EIINFO_BLOCKS: \"blocks\",\n        BLOCK_META: \"meta\",\n        BLOCK_META_DESC: \"desc\",\n        BLOCK_META_COLUMNLIST: \"columns\",\n        BLOCK_META_COLUMNPOS: \"columnPos\",\n        BLOCK_DATA: \"rows\",\n\n        SYS: \"__sys__\",\n        BLOCKS: \"__blocks__\",\n        VERSION: \"__version__\",\n        CONTEXT: \"__context__\" // REST调用上下文\n    };\n\n    /**\n     * @deprecated 该方法已经废弃\n     * 把EiInfo对象转成JSON字符串 EiInfo ==> JSON String，EiCommunicator进行ajax提交时使用的字符串\n     * 应该把EiInfo转成一个JSONObject，然后再通过JSON.stringify方法转为JSON String\n     * 应该使用EiInfo.prototype.toJSONString方法\n     */\n    function EiInfo2Json() {\n    }\n\n    EiInfo2Json.prototype.EiInfo2JsonString = function (eiInfo) {\n        var a = ['{'];\n        var appendComma;\n\n        if (isAvailable(eiInfo.getName())) {\n            a.push('\"', EiInfoJsonConstants.EIINFO_NAME, '\":', formatNative(eiInfo.getName()));\n            appendComma = true;\n        }\n        if (isAvailable(eiInfo.getDescName())) {\n            if (appendComma) {\n                a.push(',');\n            }\n            a.push(EiInfoJsonConstants.EIINFO_DESC_NAME, ':', formatNative(eiInfo.getDescName()));\n            appendComma = true;\n        }\n\n        if (isAvailable(eiInfo.getAttr())) {\n            if (appendComma) {\n                a.push(',');\n            }\n            a.push(EiInfoJsonConstants.ATTRIBUTES, ':', formatNative(eiInfo.getAttr()));\n            appendComma = true;\n        }\n\n        if (appendComma) {\n            a.push(',');\n        }\n\n        a.push(EiInfoJsonConstants.EIINFO_BLOCKS, ':{');\n\n\n        var blocks = eiInfo.getBlocks();\n        var b;\n        for (var iKey in blocks) {\n            var block = blocks[iKey];\n            if (b) {\n                a.push(',');\n            }\n            a.push(iKey, ':', EiInfo2Json.prototype.EiBlock2JsonString(block));\n            b = true;\n        }\n        a.push('}}');\n        return a.join('');\n    };\n\n    /**\n     * 把EiBlock对象转换成为JSON字符串 EiBlock ==> JSON String\n     * @param {EiBlock} eiBlock\n     */\n    EiInfo2Json.prototype.EiBlock2JsonString = function (eiBlock) {\n        var a = ['{'];\n\n        a.push(EiInfoJsonConstants.ATTRIBUTES, ':', formatNative(eiBlock.getAttr()));\n        a.push(',', EiInfoJsonConstants.BLOCK_META, ':', EiInfo2Json.prototype.EiBlockMeta2JsonString(eiBlock.getBlockMeta()));\n\n        a.push(',', EiInfoJsonConstants.BLOCK_DATA, ':[');\n\n        var rows = eiBlock.getRows();\n        var b;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[i];\n            if (b) {\n                a.push(',');\n            }\n            a.push('[');\n            var columns = eiBlock.getBlockMeta().getMetas();\n            var c;\n            for (var jKey in columns) {\n                var column = columns[jKey];\n                if (c) {\n                    a.push(',');\n                }\n                a.push(formatNative(row[column.pos]));\n                c = true;\n            }\n            b = true;\n            c = false;\n            a.push(']');\n        }\n\n        a.push(']}');\n        return a.join('');\n    };\n\n    /**\n     * 把EiBlockMeta对象转换成为JSON字符串 EiBlockMeta ==> JSON String\n     * @param {EiBlock} blockMeta\n     */\n    EiInfo2Json.prototype.EiBlockMeta2JsonString = function (blockMeta) {\n        var a = ['{'];\n        var appendComma;\n        if (isAvailable(blockMeta.getDesc())) {\n            a.push(EiInfoJsonConstants.BLOCK_META_DESC, ':', formatNative(blockMeta.getDesc()));\n            appendComma = true;\n        }\n        if (isAvailable(blockMeta.getAttr())) {\n            if (appendComma) {\n                a.push(',');\n            }\n            a.push(EiInfoJsonConstants.ATTRIBUTES, ':', formatNative(blockMeta.getAttr()));\n            appendComma = true;\n        }\n        if (appendComma) {\n            a.push(',');\n        }\n        a.push(EiInfoJsonConstants.BLOCK_META_COLUMNLIST, ':[');\n\n        var columns = blockMeta.getMetas();\n        var b;\n        for (var iKey in columns) {\n            var column = columns[iKey];\n            if (b) {\n                a.push(',');\n            }\n            a.push(EiInfo2Json.prototype.EiColumn2JsonString(column));\n            b = true;\n        }\n\n        a.push(']}');\n        return a.join('');\n    };\n\n    /**\n     * 把EiColumn对象转换成为JSON字符串 EiColumn ==> JSON String\n     * FIXME这里只转了eiColumn的部分属性，后台做Excel导出，还需要精度（scale）、数据类型等信息\n     * @param {EiColumn} eiColumn\n     */\n    EiInfo2Json.prototype.EiColumn2JsonString = function (eiColumn) {\n        var a = ['{'];\n\n        a.push('name', ':', formatNative(eiColumn.name));\n        a.push(',');\n        a.push('descName', ':', formatNative(eiColumn.descName));\n        a.push(',');\n        a.push('type', ':', formatNative(eiColumn.type));\n\n        a.push('}');\n        return a.join('');\n    };\n\n    /**\n     * @deprecated 该方法已经废弃\n     * 将原始JSON对象转换成为EiInfo对象的工具类\n     */\n    function Json2EiInfo() {\n    }\n\n    /**\n     * 解析JSON对象中的EiInfo信息 JSON ==> EiInfo\n     * @param {Object} eiJson 包含EiInfo信息的JSON对象\n     */\n    Json2EiInfo.prototype.parseJsonObject = function (eiJson) {\n\n        var eiInfo = new EiInfo(\"\");\n\n        var value = eiJson[EiInfoJsonConstants.EIINFO_NAME];\n        if (isAvailable(value)) {\n            eiInfo.setName(value);\n        }\n\n        value = eiJson[EiInfoJsonConstants.EIINFO_DESC_NAME];\n        if (isAvailable(value)) {\n            eiInfo.setDescName(value);\n        }\n\n        value = eiJson[EiInfoJsonConstants.EIINFO_MESSAGE];\n        if (isAvailable(value)) {\n            eiInfo.setMsg(value);\n        }\n\n        value = eiJson[EiInfoJsonConstants.EIINFO_MESSAGE_KEY];\n        if (isAvailable(value)) {\n            eiInfo.setMsgKey(value);\n        }\n\n        value = eiJson[EiInfoJsonConstants.EIINFO_DETAIL_MESSAGE];\n        if (isAvailable(value)) {\n            eiInfo.setDetailMsg(value);\n        }\n\n        value = eiJson[EiInfoJsonConstants.EIINFO_STATUS];\n        if (isAvailable(value)) {\n            eiInfo.setStatus(value);\n        }\n\n        value = eiJson[EiInfoJsonConstants.ATTRIBUTES];\n        if (isAvailable(value)) {\n            eiInfo.setAttr(value);\n        }\n\n        value = eiJson[EiInfoJsonConstants.EIINFO_BLOCKS];\n        if (isAvailable(value)) {\n            for (var blockId in value) {\n                var block = Json2EiInfo.prototype.parseBlock(blockId, value[blockId]);\n                eiInfo.addBlock(block);\n            }\n        }\n        return eiInfo;\n    };\n\n    /**\n     * 解析JSON对象中的EiBlock信息 JSON ==> EiBlock\n     * @param {Object} blockId\n     * @param {Object} blockJson\n     */\n    Json2EiInfo.prototype.parseBlock = function (blockId, blockJson) {\n\n        var block;\n        var value = blockJson[EiInfoJsonConstants.BLOCK_META];\n\n        if (isAvailable(value)) {\n            var blockMeta = Json2EiInfo.prototype.parseBlockMeta(blockId, value);\n            block = new EiBlock(blockMeta);\n        } else {\n            block = new EiBlock(blockId);\n        }\n\n        value = blockJson[EiInfoJsonConstants.ATTRIBUTES];\n        if (isAvailable(value)) {\n            block.setAttr(value);\n        }\n\n        value = blockJson[EiInfoJsonConstants.BLOCK_DATA];\n        if (isAvailable(value)) {\n            block.rows = value;\n        }\n        return block;\n    };\n\n    /**\n     * 解析JSON对象中的EiBlockMeta信息 JSON ==> EiBlockMeta\n     * @param {String} sId blockId\n     * @param {Object} blockMetaJson EiBlockMeta的JSON对象\n     */\n    Json2EiInfo.prototype.parseBlockMeta = function (sId, blockMetaJson) {\n        var blockMeta = new EiBlockMeta(sId);\n\n        var value = blockMetaJson[EiInfoJsonConstants.BLOCK_META_DESC];\n        if (isAvailable(value)) {\n            blockMeta.setDesc(value);\n        }\n\n        value = blockMetaJson[EiInfoJsonConstants.ATTRIBUTES];\n        if (isAvailable(value)) {\n            blockMeta.setAttr(value);\n        }\n\n        value = blockMetaJson[EiInfoJsonConstants.BLOCK_META_COLUMNLIST];\n        if (isAvailable(value)) { // value should be Array\n            for (var i = 0; i < value.length; i++) {\n                var column = Json2EiInfo.prototype.parseColumn(value[i]);\n                blockMeta.addMeta(column);\n            }\n        }\n        return blockMeta;\n    };\n\n    /**\n     * 解析JSON对象中的EiColumn信息 JSON ==> EiColumn\n     * @param {Object} columnJson\n     */\n    Json2EiInfo.prototype.parseColumn = function (columnJson) {\n\n        var column = new EiColumn(columnJson.name);\n\n        for (var iKey in columnJson) {\n            var columnValue = columnJson[iKey];\n            if (columnValue && columnValue.replace)\n                columnValue = columnValue.replace(/'/g, \"&#39;\");\n            // eval(\"column.\" + iKey + \"='\" + columnValue + \"'\");\n            column[iKey] = columnValue;\n        }\n        return column;\n    };\n\n\n    /**\n     * 提交到后台的EiInfo对象\n     */\n    var ajaxEi = new EiInfo(\"$ajaxEi\");\n\n    var EiCommunicator = {\n        callService: function (serviceId, postEiInfo, callback, ajaxOptions) {\n            return this.send(serviceId, null, postEiInfo, callback, ajaxOptions);\n\n        },\n\n        /**\n         * 封装前端ajax提交到EiService调用\n         * @param {String} serviceName 服务名\n         * @param {String} methodName 方法名\n         * @param {EiInfo} postEiInfo 提交的EiInfo信息\n         * @param {Object} callback 回调处理函数的对象{onSuccess:function() {}, onFail: function(){}}\n         * @param {Object} ajaxOptions 自定义的ajax选项，覆盖默认的设置\n         */\n        send: function (serviceName, methodName, postEiInfo, callback, ajaxOptions) {\n\n            var CONTEXT_PATH = getContextPath();\n\n            var jsonEi = postEiInfo.toJSONString();\n\n            // TODO: 防止 CSRF\n            var efSecurityToken = $('#efSecurityToken').val();\n\n            var url = CONTEXT_PATH + \"/service/\" + serviceName + \"/\" + methodName;\n\n            if (methodName === null) { // 调用微服务\n                url = CONTEXT_PATH + \"/service/\" + serviceName;\n            }\n\n            ajaxOptions = $.extend(\n                {\n                    type: \"POST\",\n                    contentType: IPLAT.AJAX.ContentType.JSON, // 提交时的数据格式\n                    dataType: \"json\", // 服务器返回的数据格式\n                    url: url,\n                    // data: {service: serviceName, method: methodName, eiinfo: jsonEi, efSecurityToken: efSecurityToken},\n                    data: jsonEi,\n                    success: function (msg) {\n                        ajaxEi = EiInfo.parseJSONObject(msg);\n\n                        IPLAT.ajaxEi = ajaxEi;\n\n                        var r = ajaxEi.get(\"redirect\");\n                        if (isAvailable(r)) { // 重定向当前页面\n                            var topWindow = IPLAT.getParentWindow() || window;\n                            topWindow.location.href = r;\n                        } else {\n                            // TODO: ajax提交时刷新状态、消息等; ??需要考虑父子页面iframe传递和多条信息累积\n                            // 判断ajax是否有返回消息 如果没有改成显示系统消息\n                            // if (efutils.trimString(ajaxEi.msg) == \"\") {\n                            //     efform.setStatus(0, \"[\" + sService + \".\" + sMethod + \"]调用完成\");\n                            //     efform.setDetailMsg(\"\");\n                            // } else {\n                            //     efform.setStatus(ajaxEi.status, ajaxEi.msg, ajaxEi.msgKey);\n                            //     efform.setDetailMsg(ajaxEi.detailMsg);\n                            // }\n                            if ($.isPlainObject(callback)) {\n                                if ($.isFunction(callback.onSuccess)) {\n                                    callback.onSuccess(ajaxEi);\n                                }\n                            }\n                        }\n                    },\n                    error: function (xmlR, status, e) {\n                        ajaxEi = null;\n                        // 获取到详细信息，与后台协定$$$分隔\n                        var detailMsg = xmlR.responseText.split(\"$$$\")[1];\n                        // if (hasForm != false) {\n                        //     efform.setStatus(-1, \"[\" + serviceName + \".\" + methodName + \"]\" +\n                        // getI18nMessages(\"ef.CallFailed\", \"调用失败，原因\") + \"[\" + xmlR.responseText.split(\"$$$\")[0] + \"]\");\n                        //     efform.setDetailMsg(detailMsg);\n                        // } else {\n                        //     if ($.isPlainObject(callback)) {\n                        //         if ($.isFunction(callback.onFail)){\n                        //             callback.onFail(xmlR.responseText.split(\"$$$\")[0], status, e);\n                        //         }\n                        //     }\n                        // }\n\n                        if ($.isPlainObject(callback)) {\n                            if ($.isFunction(callback.onFail)) {\n                                callback.onFail(xmlR.responseText.split(\"$$$\")[0], status, e);\n                            }\n                        }\n                    }\n                }\n\n                , ajaxOptions);\n\n            return $.ajax(ajaxOptions);\n        },\n\n        sendFuncCall: function (funcId, inInfo, callback) {\n            // 特殊场景，调用后台的函数\n            inInfo.set(\"funcId\", funcId);\n            EiCommunicator.send(\"EPFunc\", \"call\", inInfo, callback, false);\n        },\n\n        $send: function (sUrl, sContent, sCallback) {\n            // jquery原生的ajax调用\n            $.ajax(\n                {\n                    type: \"POST\",\n                    // async: false, FIXME 不应该使用同步调用\n                    url: sUrl,\n                    data: sContent,\n                    dataType: \"json\",\n                    success: function (msg) {\n                        ajaxEi = EiInfo.parseJSONObject(msg);\n                        sCallback.onSuccess(ajaxEi);\n                    },\n                    error: function (xmlR, status, e) {\n                        sCallback.onFail(xmlR, status, e);\n                    }\n                });\n        }\n\n    };\n\n    extend(IPLAT, {\n        AbstractEi: AbstractEi,\n        EiColumn: EiColumn,\n        EiBlockMeta: EiBlockMeta,\n        EiBlock: EiBlock,\n        EiInfo: EiInfo,\n\n        EiConstant: EiConstant,\n        EiInfoJsonConstants: EiInfoJsonConstants,\n\n        // EiInfo对象和JSON互转的工具类\n        EiInfo2Json: EiInfo2Json, // 兼容旧的代码\n        Json2EiInfo: Json2EiInfo, // 兼容旧的代码\n        ajaxEi: ajaxEi,\n        EiCommunicator: EiCommunicator\n    });\n\n    // export 到全局作用域 window对象\n    extend(window, {\n        IPLAT: IPLAT,\n\n        AbstractEi: AbstractEi,\n        EiColumn: EiColumn,\n        EiBlockMeta: EiBlockMeta,\n        EiBlock: EiBlock,\n        EiInfo: EiInfo,\n\n        EiConstant: EiConstant,\n        EiInfoJsonConstants: EiInfoJsonConstants,\n\n        // EiInfo对象和JSON互转的工具类\n        EiInfo2Json: EiInfo2Json, // 兼容旧的代码\n        Json2EiInfo: Json2EiInfo, // 兼容旧的代码\n        ajaxEi: ajaxEi,\n        EiCommunicator: EiCommunicator\n    });\n})(jQuery);\n/**\n * IPLAT的核心API，需要依赖EiInfo，但不依赖封装的EF组件 (ui.kendo.component)\n *\n * (ui.init-->ui.eiinfo-->ui.core-->ui.kendo.component--> ui.util)\n */\n(function ($) {\n    var extend = $.extend,\n        each = $.each;\n\n    var IPLAT = window.IPLAT,\n        IPLATUI = window.IPLATUI,\n        CONTEXT_PATH = IPLATUI.CONTEXT_PATH || \"\",\n        EiInfo = IPLAT.EiInfo,\n        EiCommunicator = IPLAT.EiCommunicator,\n        isUndefined = IPLAT.isUndefined,\n        isAvailable = IPLAT.isAvailable;\n\n    /**\n     * 截取字符串首尾的空格.\n     * @param {String} str 目标字符串\n     * @return {String} 截取首尾空格后的字符串，参数为空返回空字符串\"\"\n     * @exception 无异常抛出\n     */\n    IPLAT.trimString = function (str) {\n        if (str instanceof Array || str instanceof Object) {\n            return JSON.stringify(str);\n        }\n\n        // str 有可能是 Number类型\n        return !isAvailable(str) ? \"\" : (str + '').trim();\n    };\n\n    /**\n     * 获取文本在dom中的长度\n     * @param {String} text 文本\n     * @param {String} font 字体大小\n     * @return {Number} 长度\n     * @exception 无异常抛出\n     */\n    IPLAT.getCurrentStrWidth = function (text, font) {\n        // IE8 会造成 Grid 抖动\n        if (IPLAT.Browser.isIE8) {\n            return 0;\n        } else {\n            var currentObj = $('<pre>').hide().appendTo(document.body), width;\n            $(currentObj).html(text).css('font-size', font);\n            width = currentObj.width();\n            currentObj.remove();\n            return width;\n        }\n    };\n\n    /**\n     * 把文本放入\"剪贴板\"\n     * @param {String} text 文本\n     */\n    IPLAT.copyToClipboard = function (text) {\n        if (window.clipboardData) {\n            // Internet Explorer\n            window.clipboardData.setData(\"Text\", text);\n        } else {\n            // 处理非IE浏览器，火狐由于有安全限制，不能使用。。。。待测试\n            var $tempInput = $(\"<textarea>\");\n            $(\"body\").append($tempInput);\n            $tempInput.val(text).select();\n            document.execCommand(\"copy\");\n            $tempInput.remove();\n        }\n    };\n\n    /**\n     * 使用EiInfo生成原生的Grid\n     * @param {String} id DOM中元素ID名称\n     * @param {EiInfo} ei 平台提供的EiInfo对象\n     * @param {Object} options 设置kendoGrid的参数集合，里面需要新增一项blockId(用于指定前面EiInfo中block)\n     * @return {kendo.ui.Grid} 返回一个kendoGrid对象\n     * @exception 无异常抛出\n     */\n    IPLAT.createGrid = function (id, ei, options) {\n        // 平台提供默认的数据block是\"result\"\n        var DEFAULT_BLOCK = \"result\",\n            DEFAULT_COLUMN_WIDTH = IPLATUI.Config.EFGrid.columnWidth,\n            DEFAULT_ROW_HEIGHT = IPLATUI.Config.EFGrid.rowHeight,\n            blockId = options['blockId'] || DEFAULT_BLOCK,\n            eiBlock = ei.getBlock(blockId),\n            extend = $.extend,\n            isPlainObject = $.isPlainObject,\n            eiColumns = eiBlock.getBlockMeta().getMetas();\n\n        // 获取column信息\n        var columns = _.map(eiColumns, function (eiColumn, index) {\n            var columnJSON = eiColumn.toJSON();\n            // 数据类型的处理 \"N\", \"C\"， 数字默认居右， 数据类型包括B，N，C，D，E\n            var align = columnJSON.type === \"N\" ? \"right\" : \"left\";\n\n            columnJSON.valueType = columnJSON.type; // schema.model里面的type信息\n\n            columnJSON.editType = columnJSON.editor; // 单元格编辑时的展示类型\n            delete columnJSON.editor; // 和kendo自定义的editor冲突\n\n            // EiColumn Meta的信息的优先级低\n            var columnAttr = columnJSON.attr, // EiColumn.java设置的自定义数据\n                locked = columnJSON.primaryKey, // 主键列是固定列\n                enable = true,\n                hidden = (columnJSON.visible === false),\n                validation = {};\n\n            if (isPlainObject(columnAttr)) { // EiColumn.java中设置的动态属性\n                locked = !!(columnAttr[\"locked\"]);\n                enable = columnAttr['enable'];\n            }\n\n            if (columnJSON.regex) {\n                validation[\"data-regex\"] = columnJSON.regex;\n            }\n\n            if (columnJSON.errorPrompt) {\n                validation[\"data-errorprompt\"] = columnJSON.errorPrompt;\n            }\n\n            return extend(columnJSON, {\n                field: columnJSON.name,\n                title: columnJSON.descName,\n                hidden: hidden,\n                locked: locked,\n                enable: enable,\n                width: columnJSON.width || DEFAULT_COLUMN_WIDTH,\n                height: columnJSON.height || DEFAULT_ROW_HEIGHT,\n\n                attributes: extend({\n                    align: align,\n                    required: !columnJSON.nullable,\n                    minLength: columnJSON.minLength,\n                    maxLength: columnJSON.maxLength,\n                    \"data-rules\": columnJSON.validateType\n                }, validation)\n            });\n\n        });\n        // 获取data数据\n        var rows = eiBlock.getMappedRows();\n\n        // 组装options\n        var initOptions = extend({}, {\n            columns: columns,\n            dataSource: rows\n        }, options);\n\n        // 生成Grid\n        return $(\"#\" + id).kendoGrid(initOptions).data(\"kendoGrid\");\n    };\n\n    /**\n     * 使用平台提供的API打开新窗口，并在当前窗口维护所有打开的子窗口\n     *\n     * @param {String}  formEname : 新页面的英文名;\n     * @param {String}  paramList : 输入参数;\n     * @param {String}  isMax : 是否最大化;\n     * @return {Window} 打开的新窗口，无法打开时返回null\n     */\n    IPLAT.openForm = function (formEname, paramList, isMax) {\n        var loadTime = new Date();\n        var loadLabel = formEname.trim() + loadTime.getTime();\n\n        paramList = IPLAT.trimString(paramList);\n        var url = CONTEXT_PATH + \"/web/\" + formEname.trim().toUpperCase();\n        if (isAvailable(paramList)) {\n            url += \"?\" + paramList;\n        }\n\n        var openPara = \"toolbar=no,location=yes,directories=no,status=yes,menubar=yes,\" +\n            \"resizable=yes,scrollbars=yes,\";\n        if (isMax === true) {\n            openPara += \"width=\" + (screen.availWidth - 10) + \",height=\"\n                + (screen.availHeight - 30) + \",top=0,\" + \"left=0\";\n        } else {\n            openPara += \"width=900,height=600,top=\"\n                + ((screen.availHeight - 600) / 2) + \",left=\"\n                + ((screen.availWidth - 900) / 2);\n        }\n\n        // IE下，open方法中name参数无法含有特殊字符，否则js报错\n        var reg = /^\\w+$/;\n        if (!reg.test(loadLabel.trim())) {\n            alert(\"输入的页面号中含有无效字符！\");\n            return null;\n        }\n\n        var openedWindow;\n\n        // 在新型浏览器中以tab选项卡方式打开,不需要再带打开参数\n        if (!$.support.leadingWhitespace) {\n            openedWindow = window.open(url, loadLabel, openPara);\n        } else {\n            openedWindow = window.open(url, loadLabel);\n        }\n\n        childWindows.push(openedWindow);\n\n        return openedWindow;\n    };\n\n    /**\n     * FIXME 弹出新页面, 继承自3.9 暂时还没发现和openForm的区别\n     *\n     * @private\n     * @param {String} formEname    新页面ID\n     * @param {String} paramList    输入参数\n     * @param {String} isMax        是否最大化\n     */\n    IPLAT.openNewForm = function (formEname, paramList, isMax) {\n        var currentWindow = window;\n\n        if (currentWindow !== null) {\n            return IPLAT.openForm(formEname, paramList, isMax);\n        }\n    };\n\n    /**\n     * 打开平台页面时，POST大批量的EiInfo数据，在Service的initLoad方法中，可以取到传递的EiInfo参数\n     * @param formEname     页面英文名\n     * @param postEiInfo    大批量的EiInfo参数\n     * @param params        页面URL的参数\n     */\n    IPLAT.postForm = function (formEname, postEiInfo, params) {\n        postEiInfo.set(\"__PARAMS__\", params);\n\n        var jsonEi = postEiInfo.toJSONString(true);\n        var contextPath = IPLAT.getContextPath();\n\n        $.ajax({\n            type: \"POST\",\n            contentType: IPLAT.AJAX.ContentType.JSON, // 提交时的数据格式\n            dataType: \"json\", // 服务器返回的数据格式\n            url: contextPath + \"/EU/EU0001.jsp?formEname=\" + formEname,\n            data: jsonEi,\n            success: function (response) {\n                if (response.r !== 'NO_DIRECT') {\n                    window.location.href = contextPath + response.r;\n                }\n            },\n            error: function (e) {\n                //\n            }\n        });\n    };\n\n    /**\n     * 把list格式转化为map格式,list数据集合是由一行行类似于[{id,pid},{id,pid}....]组成的\n     * @param {list} data : list数据集合;\n     * @param {String} idField : 行中主键(id)的属性名称,作为其他行的父Id\n     * @param {String} parentId : 行中父id的属性名称;\n     * @param {String} rootLevel : 首节点名称;\n     * @return {Object} map\n     */\n    IPLAT.flat2Map = function (data, idField, parentId, rootLevel) {\n        var map = {};\n        if (!$.isArray(data)) {\n            return map;\n        }\n\n        for (var i = 0; i < data.length; i++) {\n            var item = data[i];\n            var id = item[idField];\n            var pid = item[parentId];\n\n            map[id] = map[id] || [];\n            map[pid] = map[pid] || [];\n\n            item.items = map[id]; // schema model中的children: \"items\"\n            map[pid].push(item);\n        }\n\n        return map[rootLevel];\n    };\n\n    /**\n     * 把map格式转化为list格式,map数据集合是由一行行类似于[{id:'',items:[{id:'',items:[.....]}]}]组成的\n     * @param {map} data            map数据集合\n     * @param {String} itemsName    子级属性名称（默认值为items）\n     * @return []\n     */\n    IPLAT.map2Flat = function (data, itemsName) {\n        var map = data.toJSON(),\n            ITEMS_NAME = itemsName || 'items';\n        var list = [];\n        var _map2Array = function (arrayList) {\n            $.each(arrayList, function (i, array) {\n                if (array[ITEMS_NAME] && array[ITEMS_NAME].length > 0) {\n                    _map2Array(array[ITEMS_NAME]);\n                }\n                list.push(array);\n                delete array[ITEMS_NAME];\n            })\n        };\n        _map2Array(map);\n        return list;\n    };\n\n    /**\n     * 自动填充DOM结点各输入域的内容\n     * @private\n     * @param {Object} node     DOM结点对象\n     * @param {EiInfo} eiInfo   数据\n     */\n    IPLAT.fillNode = function (node, eiInfo) {\n        var cellValue;\n\n        if (node.tagName === \"INPUT\" && node.type !== \"button\") {\n            cellValue = eiInfo.get(node.name);\n\n            if (isUndefined(cellValue)) {\n                // 根据node.name 无法在eiInfo中获取值\n                return;\n            }\n\n            // EFInput格式化 绑定EiInfo中的value的处理\n            if ($(node).attr('data-role') === \"formatInput\") {\n                var $textField = $(\"#\" + node.name + \"_textField\");\n                $textField.val(cellValue);\n                $textField.blur();\n            }\n\n            if ($(node).attr(\"data-role\") === \"dropdownlist\") {\n                $(node).data(\"kendoDropDownList\").value(cellValue);\n            } else {\n                node.value = cellValue;\n            }\n        } else if (node.tagName === \"TEXTAREA\") {\n            cellValue = eiInfo.get(node.name);\n            if (cellValue === null) {\n                return;\n            }\n            $(node).text(cellValue).val(cellValue);\n        } else {\n            for (var i = 0; i < node.childNodes.length; i++) {\n                try {\n                    IPLAT.fillNode(node.childNodes[i], eiInfo);\n                } catch (exception) {\n                }\n            }\n        }\n    };\n\n    /**\n     * 清空DOM节点各输入域内容\n     * @param {Object} node DOM结点对象;\n     * @return void\n     */\n    IPLAT.clearNode = function (node) {\n        if (node.tagName === \"INPUT\" || node.tagName === \"TEXTAREA\") {\n            if ($(node).attr(\"data-role\") === \"dropdownlist\") {\n                $(node).data(\"kendoDropDownList\").value(\"\");\n            } else if ($(node).attr(\"data-role\") === \"datepicker\") {\n                $(node).data(\"kendoDatePicker\").value(\"\");\n            } else if ($(node).attr(\"type\") === \"checkbox\" || $(node).attr(\"type\") === \"radio\") {\n                $(node).attr(\"checked\", false);\n            } else {\n                $(node).val(\"\");\n            }\n        }\n        else {\n            for (var i = 0; i < node.childNodes.length; i++) {\n                try {\n                    IPLAT.clearNode(node.childNodes[i]);\n                } catch (exception) {\n                }\n            }\n        }\n    };\n\n    /**\n     * 批量提交当前页面所有Grid勾选的数据\n     *\n     * @param node\n     * @param serviceName\n     * @param methodName\n     * @param callBack\n     */\n    IPLAT.submitNode = function (node, serviceName, methodName, callBack) {\n        var ei = EiInfo.build(node);\n        var gridList = node.find(\"div[data-role='grid']\");\n        $.each(gridList, function (i, item) {\n            var submitGrid = $(item).data(\"kendoGrid\");\n            var submitBlock = submitGrid.getCheckedBlockData();\n            ei.addBlock(submitBlock);\n        });\n\n        EiCommunicator.send(serviceName, methodName, ei, callBack);\n    };\n\n\n    extend(IPLATUI, {\n        EFGrid: {},\n        EFTreeList: {},\n        EFTab: {},\n        EFSelect: {},\n        EFTree: {},\n        EFInput: {},\n        EFPopupInput: {},\n        EFAutoComplete: {},\n        EFUpload: {}\n    });\n})(jQuery);\n(function ($) {\n    var isPlainObject = $.isPlainObject,\n        EiInfo = IPLAT.EiInfo,\n        EiConstant = IPLAT.EiConstant;\n\n    var NS = '.iplat';\n\n    var messageType = {\n        INFO: \"info\",\n        SUCCESS: \"success\",\n        WARNING: \"warning\",\n        ERROR: \"error\"\n    };\n\n    var messageTypeMap = {\n        \"info\": 10,\n        \"success\": 10,\n        \"warning\": 20,\n        \"error\": 30\n    };\n\n    var levelMap = {\n        \"INFO\": 0,\n        \"DEBUG\": 5,\n        \"WARNING\": 15,\n        \"ERROR\": 25\n    };\n\n    var eiInfoMessageHandler = function (eiInfo) {\n        var msgObject = {\n            msg: \"\",\n            detailMsg: \"\",\n            msgKey: \"\",\n            showMsg: false\n        };\n\n        if (eiInfo.get(EiConstant.SHOW_MSG) === false) { // EiInfo 中控制不显示Msg\n            return msgObject;\n        }\n\n        if (eiInfo.getStatus() < 0) {\n            msgObject.msgType = messageType.ERROR;\n        } else if (eiInfo.getStatus() === 0) {\n            msgObject.msgType = messageType.SUCCESS;\n        } else if (eiInfo.getStatus() > 0) {\n            msgObject.msgType = messageType.WARNING;\n        }\n\n        msgObject.msg = eiInfo.getMsg();\n        msgObject.msgKey = eiInfo.getMsgKey();\n        msgObject.detailMsg = eiInfo.getDetailMsg();\n\n        if (eiInfo.get(EiConstant.SHOW_DETAIL_MSG) === false || !IPLATUI.Config.Notification.SHOW_DETAIL_MSG) {\n            // EiInfo 中控制不显示detailMsg\n            msgObject.detailMsg = \"\";\n        }\n        return msgObject;\n    };\n\n    /**\n     * 预处理消息\n     * @param msg 消息可以是String EiInfo， Object\n     * @param msgType 消息的类型\n     * @param isEiInfo 是否是EiInfo\n     * @return {Object} 统一的消息模板需要的参数对象\n     */\n    var messageHandler = function (msg, msgType, isEiInfo) {\n\n        var msgObject = {\n            msg: \"\",\n            detailMsg: \"\",\n            msgKey: \"\",\n            showMsg: false\n        };\n\n        if (IPLATUI.Config.Notification.OFF || messageTypeMap[msgType] < levelMap[IPLATUI.Config.Notification.LEVEL]) {\n            // 全局控制的开关关闭，LOG LEVEL 低级别的log的不会显示\n            return msgObject;\n        }\n\n        if (_.isString(msg)) { // 处理字符串\n            msgObject.msg = msg;\n        } else if (IPLAT.isEiInfo(msg) || isEiInfo) {\n            // 处理EiInfo的消息\n            // msg.__ClassName__ === \"EiInfo\" 避免跨iframe window的instanceof问题\n            msgObject = eiInfoMessageHandler(msg);\n        } else if (isPlainObject(msg)) { // 处理Object类型的消息\n            msgObject = $.extend(msgObject, msg);\n        }\n\n        if (!isAvailable(msgObject.msg) && isAvailable(msgObject.detailMsg)) {\n            // 如果只有detailMsg 没有msg\n            msgObject.msg = msgObject.detailMsg + \"\";\n            msgObject.detailMsg = \"\";\n        }\n\n        if (isAvailable(msgObject.msg)) {\n            msgObject.msg += \"\";\n\n            // msgObject.msg = msgObject.msg.replace(/\\n/g, \"<br>\"); // msg的长度不应超过20个字符,不允许换行\n            msgObject.detailMsg = msgObject.detailMsg.replace(/\\n/g, \"<br>\"); // 具体的异常应在detailMsg中展示，可以换行\n\n            msgObject.showMsg = true; // 只显示有内容的消息\n        }\n\n        return msgObject;\n    };\n\n\n    var NotificationUtil = (function () {\n\n        var hasInitialized = false,\n            timer,\n            defaultAutoHideAfter = IPLATUI.Config.Notification.AUTO_HIDE_AFTER || 6000,\n            notificationWidget;\n\n        // 通知对象的单例 延迟初始化\n        var getNotificationInstance = function () {\n            if (hasInitialized) {\n                return notificationWidget;\n            } else {\n                var isCopy = IPLATUI.Config.Notification.COPY === true,\n                    isAPM = IPLATUI.Config.Notification.APM === true,\n                    isLock = IPLATUI.Config.Notification.LOCK === true;\n\n                // 生成notification的模版\n                var TEMPLATE = kendo.template($(\"#notification-template\").html())({\n                    isCopy: isCopy,\n                    isLock: isLock,\n                    isAPM: isAPM\n                });\n\n                // 拷贝文本到粘贴板\n                if (isCopy) {\n                    $(document).on(\"click\" + NS, '.msg-template-copy', function (e) {\n                        var $this = $(this);\n                        var content = $('.msg-template-main').find('.msg-template-content');\n                        var detailContent = $('.msg-template-main').find('.msg-detail');\n                        if (content.length) {\n                            // 调用API把文本拷贝到粘贴板\n                            IPLAT.copyToClipboard(content.text() + '\\n' + detailContent.children().text());\n                            TooltipUtil($this, '复制成功');\n                        }\n                    });\n                }\n\n                // 固定通知的内容\n                if (isLock) {\n                    $(document).on(\"click\" + NS, '.msg-template-lock', function (e) {\n                        var $this = $(this),\n                            // 获取类别span\n                            typeSpan = notificationWidget.getNotifications().find(\"span\").eq(0),\n                            fixed,\n                            content = $('.msg-template-main');\n\n                        if ($this.data('fixed') === true) {\n                            $this.data('fixed', false);\n                            fixed = false;\n                        } else {\n                            $this.data('fixed', true);\n                            fixed = true;\n                        }\n\n                        if (content.length) {\n                            var typeClass = typeSpan.attr('class') || '';\n                            var typeMatch = typeClass.match(/i-(\\w+)$/);\n                            // 获取类别\n                            var type = (typeMatch && typeMatch.length) ? typeMatch[1] : '';\n                            if (type) {\n                                if (fixed) {\n                                    // 去掉定时关闭notification任务\n                                    clearTimeout(timer);\n                                    // 变更图标\n                                    $this.find('i').removeClass('i-thumb-tack').addClass('i-thumb-tack-fixed');\n                                } else {\n                                    // 重启定时关闭notification任务\n                                    timer = setTimeout(function () {\n                                        notificationWidget.hide();\n                                    }, defaultAutoHideAfter);\n                                    // 变更图标\n                                    $this.find('i').removeClass('i-thumb-tack-fixed').addClass('i-thumb-tack');\n                                }\n                            }\n                        }\n                    });\n                }\n\n                // 调用链路的跟踪\n                if (isAPM) {\n                    $(document).on(\"click\" + NS, '.msg-template-link', function (e) {\n                        var traceId = IPLAT.ajaxEi ? IPLAT.ajaxEi[\"traceId\"] : \"\";\n\n                        if (!isAvailable(traceId)) {\n                            TooltipUtil($(this), '没有traceId');\n                        } else if (/\\${/.test(IPLATUI.APM_URL)) {\n                            TooltipUtil($(this), 'iPlatAPM应用地址配置不正确,请到EDCC03配置');\n                        } else {\n                            window.open(IPLATUI.APM_URL + \"/web/XPDY03?delay=false&&traceId=\" + traceId);\n                        }\n\n                    });\n                }\n\n                notificationWidget = $(\"#notification-util\").kendoNotification({\n                    // 动画\n                    // animation: {\n                    //     open: {\n                    //         effects: \"slideIn:down\",\n                    //         duration: 700\n                    //     },\n                    //     close: {\n                    //         effects: \"slideIn:down\",\n                    //         duration: 700,\n                    //         reverse: true\n                    //     }\n                    // },\n                    position: {\n                        top: 0,\n                        left: '15%'\n                    },\n                    hide: function (e) {\n                        // 每次关闭提示框，同时清除定时关闭notification任务\n                        clearTimeout(timer);\n                        $('.msg-template-lock').removeData();\n                    },\n                    allowHideAfter: 0,\n                    // 设置默认不关闭\n                    autoHideAfter: 0,\n                    button: true,\n                    stacking: \"up\",\n                    width: '70%',\n                    templates: [\n                        {\n                            type: 'success',\n                            template: TEMPLATE\n                        },\n                        {\n                            type: 'info',\n                            template: TEMPLATE\n                        },\n                        {\n                            type: 'error',\n                            template: TEMPLATE\n                        },\n                        {\n                            type: 'warning',\n                            template: TEMPLATE\n                        }\n                    ],\n                    hideOnClick: false\n                }).data(\"kendoNotification\");\n\n                hasInitialized = true;\n                return notificationWidget;\n            }\n        };\n\n        return function (msg) {\n            // 第二个参数指明通知类型，第三个说明是否是EiInfo(主要处理子页面是iframe情形)\n            var msgType = arguments.length > 1 ? arguments[1] : messageType.SUCCESS,\n                isEiInfo = arguments.length > 2 ? arguments[2] : (IPLAT.isEiInfo(msg)),\n                msgTemplate = kendo.template($(\"#msg-template\").html());\n\n            // 防止出现messageType以外的类型\n            msgType = _.indexOf([messageType.SUCCESS, messageType.WARNING,\n                messageType.INFO, messageType.ERROR], msgType) < 0 ? messageType.SUCCESS : msgType;\n\n            if (IPLAT.Util.inIframe()) {\n                if (window !== IPLAT.getParentWindow() &&\n                    $.isFunction(IPLAT.getParentWindow().NotificationUtil)) {\n                    IPLAT.getParentWindow().NotificationUtil(msg, msgType, isEiInfo);\n                }\n            } else {\n                notificationWidget = getNotificationInstance();\n\n                var msgObject = messageHandler(msg, msgType, isEiInfo);\n\n                if (!msgObject.showMsg) { // 空的消息或存在错误的通知，不再显示通知消息\n                    return;\n                }\n\n                notificationWidget.hide();\n\n                // 优先根据内部eiInfo的status（-1表示错误）\n                msgType = msgObject.msgType ? msgObject.msgType : msgType;\n\n                // 展示信息\n                notificationWidget.show(msgTemplate(msgObject), msgType);\n\n                $(\".k-notification\").parent().css(\"z-index\", 10004); // Notification > Window\n\n                // 设置定时关闭notification任务\n                timer = setTimeout(function () {\n                    notificationWidget.hide();\n                }, defaultAutoHideAfter);\n\n                // 错误信息，触发notification固定事件\n                if (msgType === messageType.ERROR) {\n                    $('.msg-template-lock').trigger('click' + NS);\n                }\n            }\n        }\n    })();\n\n    var WindowUtil = (function () {\n        var hasInitialized = false,\n            defaults = {\n                title: \"\",\n                content: \"\"\n            },\n            windowInstance;\n\n        var getWindowInstance = function () {\n            if (hasInitialized) {\n                return windowInstance;\n            } else {\n                var $window = $(\"#window-util\").kendoWindow({\n                    title: \"\",\n                    visible: false,\n                    modal: true,\n                    actions: [\n                        \"Close\"\n                    ],\n                    animation: {\n                        close: {duration: 500},\n                        open: {duration: 500}\n                    }\n                });\n\n                $window.on(\"click\", function (e) {\n                    var args = Array.prototype.slice.call(arguments);\n                    var target = e.target || e.srcElement;\n\n                    if (target.className.indexOf('query-sure') > -1) {\n                        defaults['ok'] && defaults['ok'].apply($window, args);\n                    }\n                    if (target.className.indexOf('query-cancel') > -1) {\n                        defaults['cancel'] && defaults['cancel'].apply($window, args);\n                    }\n                });\n\n                $window.on('submit', function (e) {\n                    var args = Array.prototype.slice.call(arguments);\n                    defaults['submit'] && defaults['submit'].apply($window, args);\n                    return false;\n                });\n\n                windowInstance = $window.data(\"kendoWindow\");\n\n                hasInitialized = true;\n                return windowInstance;\n            }\n        };\n\n        return function (options) {\n            windowInstance = getWindowInstance();\n            defaults = $.extend(defaults, options);\n            windowInstance.setOptions(defaults);\n            windowInstance.title(defaults['title']);\n            windowInstance.content(defaults['content']);\n            windowInstance.center().open();\n            return windowInstance;\n        };\n    })();\n\n    // 警告对话框\n    var alert = (function (settings) {\n        var okFn = arguments[1],\n            title = arguments[2];\n\n        var alertSetting = {\n            title: IPLATUI.Config.Modal.ALERT_TITLE,\n            minWidth: IPLATUI.Config.Modal.ALERT_MIN_WIDTH // 警告对话框配置的默认最小宽度\n        };\n\n        if (IPLAT.isString(settings)) {\n            alertSetting[\"message\"] = settings;\n\n            if ($.isFunction(okFn)) {\n                alertSetting[\"okFn\"] = okFn;\n            }\n\n            if (IPLAT.isString(title)) {\n                alertSetting[\"title\"] = title;\n            }\n\n        } else {\n            alertSetting = $.extend(alertSetting, settings);\n        }\n\n        var alertHTML = kendo.template($(\"#alert-template\").html())({\n            message: alertSetting.message.replace(/\\n/g, \"<br/>\"),\n            ok: IPLAT.CONSTANTS.CONFIRM_BUTTON_NAME\n        });\n\n        return WindowUtil({\n            title: alertSetting.title,\n            actions: false,\n            resizable: false,\n            content: alertHTML,\n            minWidth: alertSetting.minWidth,\n            ok: function () {\n                var kendoWindowAlert = this.data(\"kendoWindow\");\n                $.isFunction(alertSetting.okFn) && alertSetting.okFn();\n                kendoWindowAlert.close();\n            }\n        });\n    });\n\n    // 确认对话框\n    var confirm = function (settings) {\n        var okFn = arguments[1],\n            cancelFn = arguments[2],\n            title = arguments[3];\n\n        var confirmSetting = {\n            title: IPLATUI.Config.Modal.CONFIRM_TITLE,\n            minWidth: IPLATUI.Config.Modal.CONFIRM_MIN_WIDTH // 警告对话框配置的默认最小宽度\n        };\n\n\n        if (IPLAT.isString(settings)) {\n            confirmSetting[\"message\"] = settings;\n\n            if ($.isFunction(okFn)) {\n                confirmSetting[\"okFn\"] = okFn;\n            }\n\n            if ($.isFunction(cancelFn)) {\n                confirmSetting[\"cancelFn\"] = cancelFn;\n            }\n\n            if (IPLAT.isString(title)) {\n                confirmSetting[\"title\"] = title;\n            }\n        } else {\n            confirmSetting = $.extend(confirmSetting, settings);\n        }\n\n        // 支持\\n 换行\n        var confirmHTML = kendo.template($(\"#confirm-template\").html())({\n            message: confirmSetting.message.replace(/\\n/g, \"<br/>\"),\n            ok: IPLAT.CONSTANTS.CONFIRM_BUTTON_NAME,\n            cancel: IPLAT.CONSTANTS.CANCEL_BUTTON_NAME\n        });\n\n        return WindowUtil({\n            title: confirmSetting.title,\n            actions: false,\n            resizable: false,\n            content: confirmHTML,\n            minWidth: confirmSetting.minWidth,\n            ok: function () {\n                var kendoWindowConfirm = this.data(\"kendoWindow\");\n                $.isFunction(confirmSetting.okFn) && confirmSetting.okFn();\n                kendoWindowConfirm.close();\n            },\n            cancel: function () {\n                var kendoWindowConfirm = this.data(\"kendoWindow\");\n                $.isFunction(confirmSetting.cancelFn) && confirmSetting.cancelFn();\n                kendoWindowConfirm.close();\n            }\n        });\n    };\n\n    // 输入对话框\n    var prompt = function (settings) {\n        var okFn = arguments[1],\n            cancelFn = arguments[2],\n            title = arguments[3];\n\n        var promptSetting = {\n            title: IPLATUI.Config.Modal.PROMPT_TITLE,\n            minWidth: IPLATUI.Config.Modal.PROMPT_MIN_WIDTH // 警告对话框配置的默认最小宽度\n        };\n\n\n        if (IPLAT.isString(settings)) {\n            promptSetting[\"message\"] = settings;\n\n            if ($.isFunction(okFn)) {\n                promptSetting[\"okFn\"] = okFn;\n            }\n\n            if ($.isFunction(cancelFn)) {\n                promptSetting[\"cancelFn\"] = cancelFn;\n            }\n\n            if (IPLAT.isString(title)) {\n                promptSetting[\"title\"] = title;\n            }\n        } else {\n            promptSetting = $.extend(promptSetting, settings);\n        }\n\n        // 支持\\n 换行\n        var promptHTML = kendo.template($(\"#prompt-template\").html())({\n            message: promptSetting.message.replace(/\\n/g, \"<br/>\"),\n            ok: IPLAT.CONSTANTS.CONFIRM_BUTTON_NAME,\n            cancel: IPLAT.CONSTANTS.CANCEL_BUTTON_NAME\n        });\n\n        return WindowUtil({\n            title: promptSetting.title,\n            actions: false,\n            resizable: false,\n            content: promptHTML,\n            minWidth: promptSetting.minWidth,\n            ok: function () {\n                var kendoWindowPrompt = this.data(\"kendoWindow\");\n                var content = kendoWindowPrompt.element.find('.kendo-modal-input-content');\n                var val = $('input', content).val() || '';\n                $.isFunction(promptSetting.okFn) && promptSetting.okFn(val);\n                kendoWindowPrompt.close();\n            },\n            cancel: function () {\n                var kendoWindowPrompt = this.data(\"kendoWindow\");\n                $.isFunction(promptSetting.cancelFn) && promptSetting.cancelFn();\n                kendoWindowPrompt.close();\n            }\n        });\n    };\n\n    // 在元素上快捷展示tooltip\n    var TooltipUtil = (function (element, msg) {\n        var $element = $(element);\n\n        var tooltipInstance = $element.kendoTooltip({\n            showAfter: 0,\n            animation: false,\n            content: function () {\n                return msg\n            },\n            hide: function () {\n                // 清除tooltip\n                $element.removeAttr('data-role');\n                this.destroy();\n            }\n        }).data(\"kendoTooltip\");\n\n        tooltipInstance.show();\n\n        // Notification点击右侧图标后出现的tooltip位置\n        var toolTip = tooltipInstance;\n        var toolTipContainer = $(\".k-tooltip\").closest(\"div.k-animation-container\"),\n            _iconOffset = $element.offset();\n        toolTipContainer.css(\"top\", _iconOffset.top + $element.height() + 6 + \"px\");\n        toolTipContainer.css(\"left\", _iconOffset.left - (toolTip.popup.element[0].offsetWidth - ($element.width() - 2)) / 2 + \"px\");\n    });\n\n    $.extend(IPLAT, {\n        alert: alert,\n        confirm: confirm,\n        prompt: prompt,\n        Notification: messageType,\n        WindowUtil: WindowUtil,\n        NotificationUtil: NotificationUtil,\n        TooltipUtil: TooltipUtil\n    });\n\n    $.extend(window, {\n        WindowUtil: WindowUtil,\n        NotificationUtil: NotificationUtil\n    });\n})(jQuery);\n/**\n * 自定义KendoGrid的Pager组件\n *\n * 处理Pager在上方下方的显示场景\n */\n;(function ($) {\n    var isUndefined = IPLAT.isUndefined,\n\n        FIRST = \".k-pager-first\", // 首页按钮\n        LAST = \".k-pager-last\", // 尾页按钮\n        GO_INPUT = \".k-pager-input\", // 页数跳转输入框\n        TOTAL_INFO = \".k-pager-info\",\n\n        COUNT_ACTIVE = \"count-active\", // 打开showCount开关\n        COUNT_BTN = \"i-grid-count\", // showCount开关按钮的样式\n\n        isArray = $.isArray,\n        each = $.each,\n        extend = $.extend;\n\n    /*****************************************************************************************\n     * kendo Grid pageable的文档\n     * http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-pageable\n     *  1. pageable: false 默认是不显示翻页的；\n     *  2. pageable: {\n     *      pageSize: 10, // 每页显示的条数，优先级低于DataSource中的pageSize\n     *\n     *      previousNext: false, // 默认显示上一页 下一页 首页 尾页的按钮\n     *\n     *      numeric: false, // 默认显示页码按钮  [1][2][3]...[8][9][10]\n     *      buttonCount: 5, // 默认显示10个页面按钮，页数超过 则显示 ...，结合numeric为true使用\n     *\n     *      input: true, // 可输入页码的输入框，输入页码跳转，不可和numeric同时使用\n     *\n     *      pageSizes: [10,20,50], // 支持显示全部的all 改变每页显示条数的下拉框\n     *      refresh: true, // 默认不显示刷新按钮,\n     *\n     *      info: false, // 默认显示当前页面的信息和总数信息 例如： 显示 11-20 共54条\n     *      messages: {\n     *          \"allPages\": \"全部\",\n     *          \"display\": \"显示条目 {0} - {1} 共 {2}\",\n     *          \"empty\": \"没有可显示的记录。\",\n     *          \"page\": \"页\",\n     *          \"of\": \"共 {0}\",\n     *          \"itemsPerPage\": \"每页\",\n     *          \"first\": \"首页\",\n     *          \"last\": \"末页\",\n     *          \"next\": \"下一页\",\n     *          \"previous\": \"上一页\",\n     *          \"refresh\": \"刷新\",\n     *          \"morePages\": \"更多...\"\n     *      }\n     *  }\n     ******************************************************************************************/\n\n    // TODO 按照大邦的设计效果 custom kendo pager\n\n    // (function ($, undefined) {\n    //     var kendo = window.kendo, ui = kendo.ui, Widget = ui.Widget, proxy = $.proxy,\n    //         FIRST = '.k-i-seek-w', LAST = '.k-i-seek-e', PREV = '.k-i-arrow-w', NEXT = '.k-i-arrow-e',\n    //         CHANGE = 'change', NS = '.kendoPager', CLICK = 'click', KEYDOWN = 'keydown', DISABLED = 'disabled',\n    //         iconTemplate = kendo.template('<a href=\"\\\\#\" aria-label=\"#=text#\" title=\"#=text#\" ' +\n    //             'class=\"k-link k-pager-nav #= wrapClassName #\"><span class=\"k-icon #= className #\"></span></a>');\n    //\n    //     function button(template, idx, text, numeric, title) {\n    //         return template({\n    //             idx: idx,\n    //             text: text,\n    //             ns: kendo.ns,\n    //             numeric: numeric,\n    //             title: title || ''\n    //         });\n    //     }\n    //\n    //     function icon(className, text, wrapClassName) {\n    //         return iconTemplate({\n    //             className: className.substring(1),\n    //             text: text,\n    //             wrapClassName: wrapClassName || ''\n    //         });\n    //     }\n    //\n    //     function update(element, selector, page, disabled) {\n    //         element.find(selector).parent().attr(kendo.attr('page'), page).attr('tabindex', -1).\n    //         toggleClass('k-state-disabled', disabled);\n    //     }\n    //\n    //     function first(element, page) {\n    //         update(element, FIRST, 1, page <= 1);\n    //     }\n    //\n    //     function prev(element, page) {\n    //         update(element, PREV, Math.max(1, page - 1), page <= 1);\n    //     }\n    //\n    //     function next(element, page, totalPages) {\n    //         update(element, NEXT, Math.min(totalPages, page + 1), page >= totalPages);\n    //     }\n    //\n    //     function last(element, page, totalPages) {\n    //         update(element, LAST, totalPages, page >= totalPages);\n    //     }\n    //\n    //     var Pager = Widget.extend({\n    //         init: function (element, options) {\n    //             var that = this, page, totalPages;\n    //             Widget.fn.init.call(that, element, options);\n    //             options = that.options;\n    //             that.dataSource = kendo.data.DataSource.create(options.dataSource);\n    //             that.linkTemplate = kendo.template(that.options.linkTemplate);\n    //             that.selectTemplate = kendo.template(that.options.selectTemplate);\n    //             that.currentPageTemplate = kendo.template(that.options.currentPageTemplate);\n    //             page = that.page();\n    //             totalPages = that.totalPages();\n    //             that._refreshHandler = proxy(that.refresh, that);\n    //             that.dataSource.bind(CHANGE, that._refreshHandler);\n    //             if (options.previousNext) {\n    //                 if (!that.element.find(FIRST).length) {\n    //                     that.element.append(icon(FIRST, options.messages.first, 'k-pager-first'));\n    //                     first(that.element, page, totalPages);\n    //                 }\n    //                 if (!that.element.find(PREV).length) {\n    //                     that.element.append(icon(PREV, options.messages.previous));\n    //                     prev(that.element, page, totalPages);\n    //                 }\n    //             }\n    //             if (options.numeric) {\n    //                 that.list = that.element.find('.k-pager-numbers');\n    //                 if (!that.list.length) {\n    //                     that.list = $('<ul class=\"k-pager-numbers k-reset\" />').appendTo(that.element);\n    //                 }\n    //             }\n    //             if (options.input) {\n    //                 if (!that.element.find('.k-pager-input').length) {\n    //                     that.element.append('<span class=\"k-pager-input k-label\">' + options.messages.page +\n    //                         '<input class=\"k-textbox\">' + kendo.format(options.messages.of, totalPages) + '</span>');\n    //                 }\n    //                 that.element.on(KEYDOWN + NS, '.k-pager-input input', proxy(that._keydown, that));\n    //             }\n    //             if (options.previousNext) {\n    //                 if (!that.element.find(NEXT).length) {\n    //                     that.element.append(icon(NEXT, options.messages.next));\n    //                     next(that.element, page, totalPages);\n    //                 }\n    //                 if (!that.element.find(LAST).length) {\n    //                     that.element.append(icon(LAST, options.messages.last, 'k-pager-last'));\n    //                     last(that.element, page, totalPages);\n    //                 }\n    //             }\n    //\n    //             if (options.pageSizes) {\n    //                 if (!that.element.find('.k-pager-sizes').length) {\n    //                     var pageSizes = options.pageSizes.length ? options.pageSizes : [\n    //                         'all',\n    //                         5,\n    //                         10,\n    //                         20\n    //                     ];\n    //                     var pageItems = $.map(pageSizes, function (size) {\n    //                         if (size.toLowerCase && size.toLowerCase() === 'all') {\n    //                             return '<option value=\\'all\\'>' + options.messages.allPages + '</option>';\n    //                         }\n    //                         return '<option>' + size + '</option>';\n    //                     });\n    //                     $('<span class=\"k-pager-sizes k-label\"><select/>' + options.messages.itemsPerPage + '</span>').\n    //                     appendTo(that.element).find('select').html(pageItems.join('')).end().appendTo(that.element);\n    //                 }\n    //                 that.element.find('.k-pager-sizes select').val(that.pageSize());\n    //                 if (kendo.ui.DropDownList) {\n    //                     that.element.find('.k-pager-sizes select').show().kendoDropDownList();\n    //                 }\n    //                 that.element.on(CHANGE + NS, '.k-pager-sizes select', proxy(that._change, that));\n    //             }\n    //\n    //             if (options.refresh) {\n    //                 if (!that.element.find('.k-pager-refresh').length) {\n    //                     that.element.append('<a href=\"#\" class=\"k-pager-refresh k-link\" title=\"' +\n    //                         options.messages.refresh + '\"><span class=\"k-icon k-i-refresh\">' +\n    //                         options.messages.refresh + '</span></a>');\n    //                 }\n    //                 that.element.on(CLICK + NS, '.k-pager-refresh', proxy(that._refreshClick, that));\n    //             }\n    //             if (options.info) {\n    //                 if (!that.element.find('.k-pager-info').length) {\n    //                     that.element.append('<span class=\"k-pager-info k-label\" />');\n    //                 }\n    //             }\n    //             that.element.on(CLICK + NS, 'a', proxy(that._click, that)).addClass('k-pager-wrap k-widget k-floatwrap');\n    //             that.element.on(CLICK + NS, '.k-current-page', proxy(that._toggleActive, that));\n    //             if (options.autoBind) {\n    //                 that.refresh();\n    //             }\n    //             kendo.notify(that);\n    //         },\n    //         destroy: function () {\n    //             var that = this;\n    //             Widget.fn.destroy.call(that);\n    //             that.element.off(NS);\n    //             that.dataSource.unbind(CHANGE, that._refreshHandler);\n    //             that._refreshHandler = null;\n    //             kendo.destroy(that.element);\n    //             that.element = that.list = null;\n    //         },\n    //         events: [CHANGE],\n    //         options: {\n    //             name: 'Pager',\n    //             selectTemplate: '<li><span class=\"k-state-selected\">#=text#</span></li>',\n    //             currentPageTemplate: '<li class=\"k-current-page\"><span class=\"k-link k-pager-nav\">#=text#</span></li>',\n    //             linkTemplate: '<li><a tabindex=\"-1\" href=\"\\\\#\" class=\"k-link\" data-#=ns#page=\"#=idx#\" #if (title !== \"\") {# title=\"#=title#\" #}#>#=text#</a></li>',\n    //             buttonCount: 10,\n    //             autoBind: true,\n    //             numeric: true,\n    //             info: true,\n    //             input: false,\n    //             previousNext: true,\n    //             pageSizes: false,\n    //             refresh: false,\n    //             messages: {\n    //                 allPages: 'All',\n    //                 display: '{0} - {1} of {2} items',\n    //                 empty: 'No items to display',\n    //                 page: 'Page',\n    //                 of: 'of {0}',\n    //                 itemsPerPage: 'items per page',\n    //                 first: 'Go to the first page',\n    //                 previous: 'Go to the previous page',\n    //                 next: 'Go to the next page',\n    //                 last: 'Go to the last page',\n    //                 refresh: 'Refresh',\n    //                 morePages: 'More pages'\n    //             }\n    //         },\n    //         setDataSource: function (dataSource) {\n    //             var that = this;\n    //             that.dataSource.unbind(CHANGE, that._refreshHandler);\n    //             that.dataSource = that.options.dataSource = dataSource;\n    //             dataSource.bind(CHANGE, that._refreshHandler);\n    //             if (that.options.autoBind) {\n    //                 dataSource.fetch();\n    //             }\n    //         },\n    //         refresh: function (e) {\n    //             var that = this, idx, end, start = 1, reminder, page = that.page(), html = '', options = that.options,\n    //                 pageSize = that.pageSize(), total = that.dataSource.total(), totalPages = that.totalPages(),\n    //                 linkTemplate = that.linkTemplate, buttonCount = options.buttonCount;\n    //             if (e && e.action == 'itemchange') {\n    //                 return;\n    //             }\n    //             if (options.numeric) {\n    //                 if (page > buttonCount) {\n    //                     reminder = page % buttonCount;\n    //                     start = reminder === 0 ? page - buttonCount + 1 : page - reminder + 1;\n    //                 }\n    //                 end = Math.min(start + buttonCount - 1, totalPages);\n    //                 if (start > 1) {\n    //                     html += button(linkTemplate, start - 1, '...', false, options.messages.morePages);\n    //                 }\n    //                 for (idx = start; idx <= end; idx++) {\n    //                     html += button(idx == page ? that.selectTemplate : linkTemplate, idx, idx, true);\n    //                 }\n    //                 if (end < totalPages) {\n    //                     html += button(linkTemplate, idx, '...', false, options.messages.morePages);\n    //                 }\n    //                 if (html === '') {\n    //                     html = that.selectTemplate({ text: 0 });\n    //                 }\n    //                 html = this.currentPageTemplate({ text: page }) + html;\n    //                 that.list.removeClass('k-state-expanded').html(html);\n    //             }\n    //             if (options.info) {\n    //                 if (total > 0) {\n    //                     html = kendo.format(options.messages.display, Math.min((page - 1) * pageSize + 1, total), Math.min(page * pageSize, total), total);\n    //                 } else {\n    //                     html = options.messages.empty;\n    //                 }\n    //                 that.element.find('.k-pager-info').html(html);\n    //             }\n    //             if (options.input) {\n    //                 that.element.find('.k-pager-input').html(that.options.messages.page + '<input class=\"k-textbox\">' + kendo.format(options.messages.of, totalPages)).find('input').val(page).attr(DISABLED, total < 1).toggleClass('k-state-disabled', total < 1);\n    //             }\n    //             if (options.previousNext) {\n    //                 first(that.element, page, totalPages);\n    //                 prev(that.element, page, totalPages);\n    //                 next(that.element, page, totalPages);\n    //                 last(that.element, page, totalPages);\n    //             }\n    //             if (options.pageSizes) {\n    //                 var hasAll = that.element.find('.k-pager-sizes option[value=\\'all\\']').length > 0;\n    //                 var selectAll = hasAll && pageSize === this.dataSource.total();\n    //                 var text = pageSize;\n    //                 if (selectAll) {\n    //                     pageSize = 'all';\n    //                     text = options.messages.allPages;\n    //                 }\n    //                 that.element.find('.k-pager-sizes select').val(pageSize).filter('[' + kendo.attr('role') + '=dropdownlist]').kendoDropDownList('value', pageSize).kendoDropDownList('text', text);\n    //             }\n    //         },\n    //         _keydown: function (e) {\n    //             if (e.keyCode === kendo.keys.ENTER) {\n    //                 var input = this.element.find('.k-pager-input').find('input'), page = parseInt(input.val(), 10);\n    //                 if (isNaN(page) || page < 1 || page > this.totalPages()) {\n    //                     page = this.page();\n    //                 }\n    //                 input.val(page);\n    //                 this.page(page);\n    //             }\n    //         },\n    //         _refreshClick: function (e) {\n    //             e.preventDefault();\n    //             this.dataSource.read();\n    //         },\n    //         _change: function (e) {\n    //             var value = e.currentTarget.value;\n    //             var pageSize = parseInt(value, 10);\n    //             var dataSource = this.dataSource;\n    //             if (!isNaN(pageSize)) {\n    //                 dataSource.pageSize(pageSize);\n    //             } else if ((value + '').toLowerCase() == 'all') {\n    //                 dataSource.pageSize(dataSource.total());\n    //             }\n    //         },\n    //         _toggleActive: function () {\n    //             this.list.toggleClass('k-state-expanded');\n    //         },\n    //         _click: function (e) {\n    //             var target = $(e.currentTarget);\n    //             e.preventDefault();\n    //             if (!target.is('.k-state-disabled')) {\n    //                 this.page(target.attr(kendo.attr('page')));\n    //             }\n    //         },\n    //         totalPages: function () {\n    //             return Math.ceil((this.dataSource.total() || 0) / (this.pageSize() || 1));\n    //         },\n    //         pageSize: function () {\n    //             return this.dataSource.pageSize() || this.dataSource.total();\n    //         },\n    //         page: function (page) {\n    //             if (page !== undefined) {\n    //                 if (this.trigger('pageChange', { index: page })) {\n    //                     return;\n    //                 }\n    //                 this.dataSource.page(page);\n    //                 this.trigger(CHANGE, { index: page });\n    //             } else {\n    //                 if (this.dataSource.total() > 0) {\n    //                     return this.dataSource.page();\n    //                 } else {\n    //                     return 0;\n    //                 }\n    //             }\n    //         }\n    //     });\n    //     ui.plugin(Pager);\n    // }(window.kendo.jQuery));\n\n\n    /**\n     * 初始化工具栏信息\n     *\n     * STEP1 处理buttons，包括 EDFA01注册的按钮，默认的按钮，js中定义的按钮\n     * STEP2 处理Grid右侧Setting下拉菜单中的逻辑，包括：个性化显示列，导出数据等\n     * STEP3 处理翻页条在Grid上方的逻辑\n     *\n     * @param options\n     * @private\n     */\n    IPLAT.EFGrid._initPager = function (options) {\n        var gridConfig = options.gridConfig; // JS中的配置优先级最高\n\n        /*******************************************************\n         *\n         * STEP1    先处理JS中配置的翻页相关配置\n         *\n         *******************************************************/\n\n        if (!isUndefined(gridConfig.showCount)) { // JS中配了showCount 优先级最高\n            options.showCount = gridConfig.showCount;\n            delete gridConfig.showCount;\n        }\n\n        if (!isUndefined(gridConfig.pageable)) { // JS中配了pageable 优先级最高\n            extend(true, options, {pageable: gridConfig.pageable});\n            delete gridConfig.pageable;\n        }\n\n        // var showCount = options.showCount,\n        //     pageable = options.pageable;\n        //\n        //\n        // /*******************************************************\n        //  *\n        //  * STEP2    存在翻页条时 先处理要不要显示总数的场景\n        //  *\n        //  *******************************************************/\n        //\n        // if (pageable) {\n        //     if (!showCount) {\n        //         // 不从服务端查询总数时的翻页展示处理。 没有总数时，只显示 上一页 下一页\n        //         extend(true, options.pageable, {\n        //             input: true,\n        //             numeric: false,\n        //             buttonCount: 1,\n        //             info: false\n        //         });\n        //     }\n        // }\n    };\n\n    /**\n     * 处理EFGrid翻页条的位置\n     *\n     * @param gridInstance\n     * @private\n     */\n    var _handleGridPagerPosition = function (gridInstance) {\n        var options = gridInstance.options,\n            $grid = gridInstance.element;\n\n        // 翻页条在grid上方的处理\n        if (IPLAT.EFGrid._hasToolbarPager(options)) {\n            var $pager = $(gridInstance.pager.element);\n            var hasButtons = IPLAT.EFGrid._hasToolbarButtons(options.toolbarConfig);\n            // hasSettings = IPLAT.EFGrid._hasToolbarSettings(options.toolbarConfig);\n\n            var $toolbar = $grid.find(\"#ef_grid_toolbar_\" + options.blockId);\n\n            $pager.addClass(\"i-pager-top\");\n\n            if (!hasButtons) { // grid上方无按钮\n                // if (hasSettings) { // grid上方有配置按钮\n                //     $pager.find(\".k-pager-info\").css(\"padding-right\", 40);\n                // }\n                $pager.prependTo($toolbar);\n            } else {\n                // $pager.css(\"float\", \"right\");\n\n                if ($toolbar.find(\"div.kendo-xplat-add\").length > 0) {\n                    $pager.insertAfter($toolbar.find(\".kendo-xplat-add\"));\n                } else {\n                    $pager.prependTo($toolbar);\n                }\n            }\n\n            $(window).resize(kendo.throttle(function () {\n                $pager.show();\n            }, 100));\n        }\n    };\n\n    /**\n     * 使用iPlatUI定制的翻页条，增加了showCount的开关，Grid初始化完成后调用一次\n     * 后续可在此增加配置项隐藏showCount的按钮\n     *\n     *  @param gridInstance\n     * @private\n     */\n    IPLAT.EFGrid._handlePagerCount = function (gridInstance) {\n        var options = gridInstance.options,\n            pageable = options.pageable;\n\n        if (pageable) {\n            // gridInstance.pager是kendo.ui.Pager对象，pageable=false时，其为undefined\n            var $pager = $(gridInstance.pager.element);\n            $pager.addClass(\"i-grid-pager\");\n\n            var $countBtn = $($(\"#grid-count-template\").html()).insertAfter($pager.find(\".k-pager-sizes\"));\n\n            $countBtn.attr(\"id\", \"count_\" + gridInstance.getBlockId()).on(\"click\", function () {\n                if ($(this).hasClass(COUNT_ACTIVE)) {\n                    // 打开查询总数的开关\n                    gridInstance.options.showCount = false;\n                    gridInstance.dataSource.query();\n\n                } else {\n                    // 关闭查询总数的开关\n                    gridInstance.options.showCount = true;\n                    gridInstance.dataSource.query();\n                }\n            });\n\n            // Grid初始化完成后，设置正确的showCount状态\n            IPLAT.EFGrid._refreshPagerCount(gridInstance);\n        }\n    };\n\n    /**\n     * 打开或者关闭showCount查询总数的功能, 设置正确的按钮的显示状态；\n     * 也会处理翻页条的位置；EFGrid初始化，查询后会多次调用\n     *\n     * @param gridInstance\n     * @private\n     */\n    IPLAT.EFGrid._refreshPagerCount = function (gridInstance) {\n        var options = gridInstance.options,\n            pageable = options.pageable;\n\n        if (pageable) {\n            var $pager = $(gridInstance.pager.element);\n            var $countBtn = $pager.find(\".\" + COUNT_BTN);\n\n            if (!gridInstance.options.showCount) {\n                // 关闭查询总数的开关\n                $countBtn.removeClass(COUNT_ACTIVE);\n\n                $pager.find(FIRST).hide(); // 不知道总数时，隐藏首页和尾页\n                $pager.find(LAST).hide();\n                $pager.find(GO_INPUT).hide(); // 页数跳转\n                $pager.find(TOTAL_INFO).hide(); // 共\n            } else {\n                // 打开查询总数的开关\n                $countBtn.addClass(COUNT_ACTIVE);\n\n                $pager.find(FIRST).show();\n                $pager.find(LAST).show();\n                $pager.find(GO_INPUT).show();\n                $pager.find(TOTAL_INFO).show();\n            }\n\n            _handleGridPagerPosition(gridInstance);\n        }\n    };\n\n})(window.jQuery);\n/**\n * 自定义列\n */\n;(function ($) {\n    var EiConstant = IPLAT.EiConstant,\n        EiInfo = IPLAT.EiInfo,\n        EiBlock = IPLAT.EiBlock,\n        WindowUtil = IPLAT.WindowUtil,\n        ICON = IPLATUI.Config.Layout.ICON,\n        ICON_AND_TEXT = IPLATUI.Config.Layout.ICON_AND_TEXT,\n        each = $.each;\n\n    var _mixedHandler = function (models) {\n        var locked = 0,\n            unlocked = 0;\n        each(models, function (i, model) {\n            if (locked === 0) {\n                locked = model.column_locked === \"1\" ? 1 : 0;\n            }\n\n            if (unlocked === 0) {\n                unlocked = model.column_locked === \"1\" ? 0 : 1;\n            }\n\n            if (locked + unlocked === 2) {\n                return false;\n            }\n        });\n        return locked + unlocked === 2;\n    };\n\n    IPLAT.EFGrid._buildPersonal = function (options, gridInstance) {\n        var blockId = options.blockId,\n            personalBlockId = \"personal_\" + blockId,\n            personalGrid,\n            gridPersonalInfo,\n            personalWindow;\n\n        var rowIndex = -1,\n            dbColumns = options.personalInfo.getBlock(personalBlockId).getMappedRows();\n\n        gridPersonalInfo = new EiInfo(\"personalInfo\");\n        gridPersonalInfo.addBlock(new EiBlock(\n            options.personalInfo.getBlock(personalBlockId).getBlockMeta()\n        ));\n\n        each(options.columns, function (i, column) {\n            if (!column.aid) { // 排除掉checkbox 序号列\n                rowIndex++;\n\n                var dbColumn = _.find(dbColumns, {column_ename: column.field});\n\n                if (dbColumn) {\n                    var pos = dbColumn.column_order * 1;\n                    gridPersonalInfo.set(personalBlockId, pos, \"tedfa60_id\", dbColumn.tedfa60_id);\n                    gridPersonalInfo.set(personalBlockId, pos, \"project_ename\", dbColumn.project_ename);\n                    gridPersonalInfo.set(personalBlockId, pos, \"form_ename\", dbColumn.form_ename);\n                    gridPersonalInfo.set(personalBlockId, pos, \"grid_id\", dbColumn.grid_id);\n                    gridPersonalInfo.set(personalBlockId, pos, \"user_id\", dbColumn.user_id);\n\n                    gridPersonalInfo.set(personalBlockId, pos, \"column_ename\", dbColumn.column_ename);\n                    gridPersonalInfo.set(personalBlockId, pos, \"column_cname\", dbColumn.column_cname);\n                    gridPersonalInfo.set(personalBlockId, pos, \"column_locked\", dbColumn.column_locked);\n                    gridPersonalInfo.set(personalBlockId, pos, \"column_hidden\", dbColumn.column_hidden);\n                    gridPersonalInfo.set(personalBlockId, pos, \"column_width\", dbColumn.column_width);\n                    gridPersonalInfo.set(personalBlockId, pos, \"column_order\", dbColumn.column_order);\n                    gridPersonalInfo.set(personalBlockId, pos, \"soft_delete\", dbColumn.soft_delete);\n                } else {\n                    gridPersonalInfo.set(personalBlockId, rowIndex, \"tedfa60_id\", \"\");\n                    gridPersonalInfo.set(personalBlockId, rowIndex, \"project_ename\", IPLATUI.PROJECT_ENAME);\n                    gridPersonalInfo.set(personalBlockId, rowIndex, \"form_ename\", IPLATUI.FORM_ENAME);\n                    gridPersonalInfo.set(personalBlockId, rowIndex, \"grid_id\", options.blockId);\n                    gridPersonalInfo.set(personalBlockId, rowIndex, \"user_id\", IPLATUI.USER_ID);\n\n                    gridPersonalInfo.set(personalBlockId, rowIndex, \"column_ename\", column.field);\n                    gridPersonalInfo.set(personalBlockId, rowIndex, \"column_cname\", column.title);\n                    gridPersonalInfo.set(personalBlockId, rowIndex, \"column_locked\", column.locked ? \"1\" : \"0\");\n                    gridPersonalInfo.set(personalBlockId, rowIndex, \"column_hidden\", column.hidden ? \"1\" : \"0\");\n                    gridPersonalInfo.set(personalBlockId, rowIndex, \"column_width\", column.width);\n                    gridPersonalInfo.set(personalBlockId, rowIndex, \"column_order\", column.pos);\n                    gridPersonalInfo.set(personalBlockId, rowIndex, \"soft_delete\", \"0\");\n                }\n            }\n        });\n\n        gridPersonalInfo.set(personalBlockId, EiConstant.COUNT, rowIndex + 1);\n        gridPersonalInfo.set(personalBlockId, EiConstant.LIMIT, 20);\n        gridPersonalInfo.set(personalBlockId, EiConstant.OFFSET, 0);\n\n        personalGrid = IPLAT.xGrid({\n            gridId: \"ef_personal_grid_\" + options.blockId,\n            needAuth: false,\n            tagId: options.blockId + \"-\" + kendo.guid(),\n            columns: [\n                // {\n                //     field: \"op\",\n                //     title: \"操作\",\n                //     template: $(\"#personal-grid-template\").html(),\n                //     locked: true,\n                //     enable: false\n                // },\n                {field: \"tedfa60_id\", hidden: true},\n                {field: \"project_ename\", hidden: true},\n                {field: \"form_ename\", hidden: true},\n                {field: \"grid_id\", hidden: true},\n                {field: \"user_id\", hidden: true},\n                {\n                    field: \"column_ename\",\n                    enable: false,\n                    template: function (model) {\n                        if (model.column_locked === '1') {\n                            return \"<span style='color: red'>\" + model.column_ename + \"</span>\";\n                        }\n                        return model.column_ename;\n                    }\n                },\n                {\n                    field: \"column_locked\", displayType: \"checkbox\", editType: \"checkbox\"\n                },\n                {\n                    field: \"column_hidden\", displayType: \"checkbox\", editType: \"checkbox\"\n                },\n                {\n                    field: \"column_width\", defaultValue: 96, attributes: {\n                    \"data-rules\": \"integer\"\n                }\n                },\n                {\n                    field: \"column_order\", hidden: true\n                },\n                {\n                    field: \"soft_delete\", title: \"配置状态\", template: function (dataItem) {\n                    if (dataItem[\"soft_delete\"] === \"1\") {\n                        return \"默认配置\";\n                    } else {\n                        return \"可自定义\";\n                    }\n                }\n                }\n\n            ],\n\n            queryMethod: function (params) {\n                // 翻页参数\n                var skip = params.data.skip,\n                    pageSize = params.data.pageSize;\n\n                var responseEiInfo = gridPersonalInfo.clone();\n                responseEiInfo.set(personalBlockId, EiConstant.LIMIT, pageSize);\n\n                var block = responseEiInfo.getBlock(personalBlockId);\n                var rows = block.getRows();\n                block.setRows(rows.slice(skip, skip + pageSize));\n\n                responseEiInfo.set(EiConstant.SHOW_MSG, false); // 不显示query的msg\n                params.success(responseEiInfo.toJSON());\n            },\n\n            query: function () { //  初始的查询条件\n                var queryInfo = new EiInfo(\"personalInfo\");\n                queryInfo.set(\"inqu_status-0-project_ename\", IPLATUI.PROJECT_ENAME);\n                queryInfo.set(\"inqu_status-0-form_ename\", IPLATUI.FORM_ENAME);\n                queryInfo.set(\"inqu_status-0-grid_id\", options.blockId);\n                queryInfo.set(\"inqu_status-0-user_id\", IPLATUI.USER_ID);\n                return queryInfo;\n            },\n\n            beforeEdit: function (e) {\n                /**\n                 * 勾选行后，点击单元格准备编辑时的事件\n                 * beforeEdit可以用于自定义单元格是否可以编辑，不要和列的readonly，enable混用\n                 * @param e 事件对象\n                 * e.sender Grid对象\n                 * e.container 单元格td jQuery对象\n                 * e.row 行号\n                 * e.col 列号(columns中的列配置信息数组中的column对象的index)\n                 * e.model 行数据对象 kendo.data.Model\n                 * e.field 列英文名\n                 * e.preventDefault 禁止编辑\n                 */\n\n                if (e.model[\"soft_delete\"] === \"1\") {\n                    // 使用默认值 禁止编辑\n                    e.preventDefault();\n\n                    WindowUtil({\n                        'title': \"提示\",\n                        \"content\": \"<div class='kendo-del-message'>使用了默认配置的列，不可编辑</div>\"\n                    });\n                } else {\n\n                    if (e.field === \"soft_delete\") {\n                        e.preventDefault();\n                    } else if (e.field === \"column_hidden\") {\n                        var col = _.find(e.sender.columns, function (column) {\n                            if (column.field === e.field && column.attributes && column.attributes[\"mustShow\"]) {\n                                // 列必须显示\n                                return true;\n                            }\n                            return false;\n                        });\n\n                        if (col) {\n                            WindowUtil({\n                                'title': \"提示\",\n                                \"content\": \"<div class='kendo-del-message'>\" + col.title + \" 列不可隐藏</div>\"\n                            });\n                        }\n                    }\n                }\n\n            },\n            onCheckRow: function (e) {\n                // /**\n                //  * 点击行首checkbox，勾选行时触发的事件\n                //  * @param e     kendo的Event对象\n                //  * e.sender     kendoGrid对象，resultGrid\n                //  * e.fake       用于区分是手动点击的事件还是模拟的事件\n                //  * e.checked    用于区分是勾选还是取消勾选\n                //  * e.model      勾选或取消勾选的行数据，kendo.data.Model\n                //  * e.row        当前行的行号\n                //  * e.tr         行的tr,包括固定列和数据列 jquery对象\n                //  */\n                // var $element = e.sender.element,\n                //     $upBtn = $element.find(\"#\"+ personalBlockId + \"_up > .k-button\"),\n                //     $downBtn = $element.find(\"#\"+ personalBlockId + \"_down > .k-button\"),\n                //     $undoBtn = $element.find(\"#\"+ personalBlockId + \"undo > .k-button\"),\n                //     $redoBtn = $element.find(\"#\"+ personalBlockId + \"_redo > .k-button\");\n                //\n                // if (e.model[\"soft_delete\"] === \"1\") {\n                //     // 禁用 up down undo\n                //     $upBtn.prop(\"disabled\", true);\n                //     $downBtn.prop(\"disabled\", true);\n                //     $undoBtn.prop(\"disabled\", false);\n                //     $redoBtn.prop(\"disabled\", true);\n                // } else {\n                //     $upBtn.prop(\"disabled\", false);\n                //     $downBtn.prop(\"disabled\", false);\n                //     $undoBtn.prop(\"disabled\", false);\n                //     $redoBtn.prop(\"disabled\", false);\n                // }\n\n            },\n\n            onRowClick: function (e) {\n                /**\n                 * 单击数据行时触发的事件，注意编辑状态时不会触发\n                 * @param e\n                 * e.sender     kendoGrid对象，resultGrid\n                 * e.model      点击的行数据，kendo.data.Model\n                 * e.row        当前行的行号\n                 * e.tr         行的tr,包括固定列和数据列 jquery对象\n                 */\n\n                // if (e.model[\"soft_delete\"] === \"1\") {\n                //     // 禁用 up down undo\n                // } else {\n                //\n                // }\n            },\n\n            dataBinding: function () {\n\n            },\n\n            saveOptions: { // 提交数据时的判断\n                create: true,\n                update: false\n            },\n\n            blockId: personalBlockId,\n            height: 400,\n            autoBind: false,\n            toolbarConfig: {\n                add: false, \"delete\": false, save: false, cancel: false,\n                buttons: [{\n                    name: personalBlockId + \"_up\",\n                    attributes: {\n                        style: \"float:left\",\n                        title: \"向上\"\n                    },\n                    icon: \"fa-arrow-up\",\n                    layout: ICON,\n                    click: function () {\n                        if (personalGrid.getCheckedRows().length === 0) {\n                            WindowUtil({\n                                'title': \"向上移动列\",\n                                \"content\": \"<div class='kendo-del-message'>没有选中的行</div>\"\n                            });\n                        } else {\n                            if (_mixedHandler(personalGrid.getCheckedRows())) {\n                                WindowUtil({\n                                    'title': \"向上移动列\",\n                                    \"content\": \"<div class='kendo-del-message'>不允许同时移动固定列和非固定列</div>\"\n                                });\n                            } else {\n                                var lockedCount = _.filter(personalGrid.getDataItems(), {column_locked: \"1\"}).length;\n                                each(personalGrid.getCheckedRows(), function (i, dataItem) {\n                                    var index = personalGrid.dataSource.indexOf(dataItem);\n                                    var newIndex;\n                                    if (dataItem.column_locked === \"1\") {\n                                        newIndex = Math.max(0, index - 1);\n                                    } else { // 非固定列不能移动到固定列之前\n                                        newIndex = Math.max(lockedCount, index - 1);\n                                    }\n\n                                    if (newIndex != index) {\n                                        var data = personalGrid.dataSource.data();\n                                        var upRow = data[newIndex];\n\n                                        dataItem.set(\"column_order\", newIndex);\n                                        data[newIndex] = dataItem;\n                                        data[newIndex + 1] = upRow;\n                                        upRow.set(\"column_order\", newIndex + 1);\n\n\n                                    } else {\n                                        if (newIndex > 0) {\n                                            WindowUtil({\n                                                'title': \"向上移动列\",\n                                                \"content\": \"<div class='kendo-del-message'>非固定列不能移动到固定列的上方</div>\"\n                                            });\n\n                                        } else {\n                                            WindowUtil({\n                                                'title': \"向上移动列\",\n                                                \"content\": \"<div class='kendo-del-message'>已经移动到了顶部</div>\"\n                                            });\n                                        }\n\n                                        return false;\n                                    }\n\n                                });\n                            }\n                        }\n                    }\n                }, {\n                    name: personalBlockId + \"_down\",\n                    icon: \"fa-arrow-down\",\n                    layout: ICON,\n                    attributes: {\n                        style: \"float:left\",\n                        title: \"向下\"\n                    },\n                    click: function () {\n                        if (personalGrid.getCheckedRows().length === 0) {\n                            WindowUtil({\n                                'title': \"向下移动列\",\n                                \"content\": \"<div class='kendo-del-message'>没有选中的行</div>\"\n                            });\n                        } else {\n\n                            if (_mixedHandler(personalGrid.getCheckedRows())) {\n                                WindowUtil({\n                                    'title': \"向下移动列\",\n                                    \"content\": \"<div class='kendo-del-message'>不允许同时移动固定列和非固定列</div>\"\n                                });\n                            } else {\n                                var lockedCount = _.filter(personalGrid.getDataItems(), {column_locked: \"1\"}).length;\n                                each(personalGrid.getCheckedRows().reverse(), function (i, dataItem) {\n                                    var index = personalGrid.dataSource.indexOf(dataItem);\n\n                                    var newIndex;\n                                    if (dataItem.column_locked === \"1\") { // 固定列不能移动到非固定列的下方\n                                        newIndex = Math.min(lockedCount - 1, index + 1);\n\n                                    } else {\n                                        newIndex = Math.min(personalGrid.dataSource.total() - 1, index + 1);\n                                    }\n\n                                    if (newIndex != index) {\n                                        var data = personalGrid.dataSource.data();\n                                        var downRow = data[newIndex];\n\n                                        dataItem.set(\"column_order\", newIndex);\n                                        data[newIndex] = dataItem;\n                                        data[newIndex - 1] = downRow;\n                                        downRow.set(\"column_order\", newIndex - 1);\n                                    }\n                                    else {\n                                        if (newIndex === lockedCount - 1) {\n                                            WindowUtil({\n                                                'title': \"向下移动列\",\n                                                \"content\": \"<div class='kendo-del-message'>固定列不能移动到非固定列的下方</div>\"\n                                            });\n\n                                        } else {\n                                            WindowUtil({\n                                                'title': \"向下移动列\",\n                                                \"content\": \"<div class='kendo-del-message'>已经移动到了底部</div>\"\n                                            });\n                                        }\n                                        return false;\n\n                                    }\n                                });\n                            }\n                        }\n                    }\n                }, {\n                    name: personalBlockId + \"_undo\",\n                    icon: \"fa-ban\",\n                    text: \"默认配置\",\n                    layout: ICON_AND_TEXT,\n                    attributes: {\n                        style: \"float:left\",\n                        title: \"默认配置\"\n                    },\n                    click: function () {\n                        // 数据库里 软删除 soft delete\n                        each(personalGrid.getCheckedRows(), function (i, row) {\n                            row.set(\"soft_delete\", \"1\");\n                        });\n                        personalGrid.saveChanges();\n                    }\n                },\n                    {\n                        name: personalBlockId + \"_redo\",\n                        icon: \"fa-database\",\n                        text: \"自定义配置\",\n                        layout: ICON_AND_TEXT,\n                        attributes: {\n                            style: \"float:left\",\n                            title: \"自定义配置\"\n                        },\n                        click: function () {\n                            // 数据库里 软删除 mark delete\n                            each(personalGrid.getCheckedRows(), function (i, row) {\n                                row.set(\"soft_delete\", \"0\");\n                            });\n\n                            personalGrid.saveChanges();\n                        }\n                    }, {\n                        name: personalBlockId + \"_cancel\",\n                        icon: \"fa-times-circle-o\",\n                        text: \"取消\",\n                        layout: \"3\",\n                        attributes: {\n                            style: \"float: right\"\n                        },\n                        click: function () {\n                            personalGrid.cancelChanges();\n                        }\n                    },\n                    {\n                        name: personalBlockId + \"_refresh\",\n                        icon: \"fa-refresh\",\n                        text: \"保存并刷新\",\n                        layout: \"3\",\n                        attributes: {\n                            style: \"float: right\"\n                        },\n                        click: function () {\n                            personalGrid.saveChanges();\n                            window.location.reload();\n                        }\n                    }\n                ]\n            },\n            eiInfo: gridPersonalInfo,\n            url: IPLATUI.CONTEXT_PATH + \"/service\",\n            serviceName: \"EDFA60\"\n        });\n\n        personalWindow = $(\"#ef_personal_window_\" + options.blockId).kendoWindow({\n            title: \"自定义列信息\",\n            width: \"80%\",\n            // height: \"70%\",\n            position: {\n                top: \"10%\",\n                left: \"10%\"\n            },\n            visible: false,\n            modal: true,\n            actions: [\n                \"Close\"\n            ],\n            animation: {\n                close: {duration: 500},\n                open: {duration: 500}\n            }\n        }).data(\"kendoWindow\");\n\n        return personalWindow;\n    };\n\n    // personalGrid.element.on(\"click\", \".i-text-btn-sm\", function (e) {\n    //     var handlers = IPLAT.Util.unbindHandlers(personalGrid.dataSource, \"change\");\n    //     var uid = $(this).parent().data(\"uid\");\n    //\n    //     if ($(this).hasClass(\"personal-up\")) { // 向上\n    //         var dataItem = personalGrid.dataSource.getByUid(uid);\n    //         var index = personalGrid.dataSource.indexOf(dataItem);\n    //         var newIndex = Math.max(0, index - 1);\n    //\n    //         if (newIndex != index) {\n    //             personalGrid.dataSource.remove(dataItem);\n    //             personalGrid.dataSource.insert(newIndex, dataItem);\n    //         }\n    //\n    //\n    //     } else if ($(this).hasClass(\"personal-down\")) { // 向下\n    //         var dataItem = personalGrid.dataSource.getByUid(uid);\n    //         var index = personalGrid.dataSource.indexOf(dataItem);\n    //         var newIndex = Math.min(personalGrid.dataSource.total() - 1, index + 1);\n    //\n    //         if (newIndex != index) {\n    //             personalGrid.dataSource.remove(dataItem);\n    //             personalGrid.dataSource.insert(newIndex, dataItem);\n    //         }\n    //\n    //     } else if ($(this).hasClass(\"personal-undo\")) {\n    //\n    //     }\n    //\n    //     // IPLAT.Util.bindHandlers(personalGrid.dataSource, \"change\", handlers);\n    //\n    // });\n})(window.jQuery);\n/**\n * 构建工具栏和按钮\n */\n;(function ($) {\n    var EiConstant = IPLAT.EiConstant,\n        EiInfo = IPLAT.EiInfo,\n        WindowUtil = IPLAT.WindowUtil,\n        TEXT = IPLATUI.Config.Layout.TEXT,\n        ICON = IPLATUI.Config.Layout.ICON,\n        ICON_AND_TEXT = IPLATUI.Config.Layout.ICON_AND_TEXT,\n        gridDefaultButtons = [],\n\n        NS = \".IPLAT\",\n        ON_DELETE = \"onDelete\",\n        DELETE_ACTION = IPLAT.EFGrid.DELETE_ACTION, // 点击删除按钮时，记录删除操作\n\n        isArray = $.isArray,\n        each = $.each,\n        extend = $.extend;\n\n\n    /**\n     * 初始化工具栏信息\n     *\n     * STEP1 处理buttons，包括 EDFA01注册的按钮，默认的按钮，js中定义的按钮\n     * STEP2 处理Grid右侧Setting下拉菜单中的逻辑，包括：个性化显示列，导出数据等\n     * STEP3 处理翻页条在Grid上方的逻辑\n     *\n     * @param options\n     * @private\n     */\n    IPLAT.EFGrid._initToolbar = function (options) {\n        var gridConfig = options.gridConfig,\n            needAuth = options.needAuth;\n\n        var toolbarConfig = extend(true, {\n            \"add\": true,\n            \"cancel\": true,\n            \"save\": true,\n            \"delete\": true\n        }, options.toolbarConfig, gridConfig.toolbarConfig);\n\n        delete gridConfig.toolbarConfig; // 去除页面上的toolbarConfig，防止被再次继承\n\n        if (!isArray(toolbarConfig.buttons)) {\n            toolbarConfig.buttons = [];\n        }\n        if (!isArray(toolbarConfig.default_layout)) {\n            toolbarConfig.default_layout = [];\n        }\n\n\n        /*******************************************************\n         *\n         * STEP1    处理buttons，包括 EDFA01注册的按钮，默认的按钮\n         *          js中定义的按钮\n         *\n         *******************************************************/\n\n        // 1. 权限配置优先级最高;\n        // 2. 判断IPLATUI中的配置; 在工具栏上追加按钮，覆盖原有的按钮功能\n        // 3. 判断EFGrid Tag中的配置;\n\n        if (needAuth) {\n            gridDefaultButtons = [];\n            // __eiInfo 当前页面上的EiInfo\n            // TODO: needAuth = false的时候，注册的自定义按钮iframe GRID嵌入等隐患\n            var btnDescInfo = EiInfo.parseJSONString(__eiInfo.getAttr()[EiConstant.EF_FORM_BUTTON_DESC]);\n\n            var filteredBlockIds = _.filter(_.keys(btnDescInfo.getBlocks()), function (gridId) {\n                // 后台GRID信息注册不规范，导致多个block出现\n                return gridId.trim().toUpperCase() === \"GRID:\" + options.gridId.toUpperCase();\n            });\n\n            var customButtons = [], // 后台注册的自定义按钮\n                gridButtonRegex = /^((INSERT($|_\\d+$))|(SAVE($|_\\d+$))|(CANCEL($|_\\d+$))|(DELETE($|_\\d+$)))/;\n            // EFGridButtonNames = [\"INSERT\", \"SAVE\", \"CANCEL\", \"DELETE\", \"SETTING\"];\n\n            var registerButtonConfig = {};\n\n            each(filteredBlockIds, function (index, blockId) {\n                var gridBlock = btnDescInfo.getBlock(blockId);\n\n                for (var i = 0; i < gridBlock.getRows().length; i++) {\n                    var buttonId = gridBlock.getCell(i, \"button_ename\").toString().toUpperCase();\n\n                    if (gridBlock.getCell(i, \"button_status\").toString() === \"1\") {\n                        // 只维护有权限的按钮信息\n                        if (gridButtonRegex.test(buttonId)) {\n                            var buttonName = buttonId.split('_')[0]; // INSERT_1\n                            buttonName = buttonName === \"INSERT\" ? \"add\" : buttonName.toLowerCase();\n                            registerButtonConfig[buttonName] = true;\n\n                            gridDefaultButtons.push({\n                                name: buttonName,\n                                text: gridBlock.getCell(i, \"button_cname\").toString(),\n                                icon: gridBlock.getCell(i, \"uri\").toString(),\n                                layout: gridBlock.getCell(i, \"layout\").toString()\n                            });\n\n                            // toolbarConfig['default_layout'][buttonName] = gridBlock.getCell(i, \"layout\").toString();\n                        } else { // 自定义的按钮\n                            customButtons.push({\n                                name: buttonId,\n                                text: gridBlock.getCell(i, \"button_cname\").toString(),\n                                icon: gridBlock.getCell(i, \"uri\").toString(),\n                                layout: gridBlock.getCell(i, \"layout\").toString()\n                            });\n                        }\n                    }\n                }\n            });\n\n            toolbarConfig = _.mapObject(toolbarConfig, function (value, buttonId) {\n                if (_.indexOf(_.keys(registerButtonConfig), buttonId) < 0 &&\n                    _.indexOf([\"add\", \"cancel\", \"save\", \"delete\"], buttonId) > -1) {\n                    // Grid的按钮没有注册 永远不会显示\n                    return false;\n                }\n                return value;\n            });\n\n            // 注册的按钮在自定义按钮的前面\n            toolbarConfig.buttons = customButtons.concat(toolbarConfig.buttons);\n        }\n\n        // 此时 toolbarConfig.buttons数组还未创建 toolbarConfig中只有权限信息\n        var blockId = options.blockId,\n            gridId = options.gridId,\n            personalWindowId = \"#ef_personal_window_\" + blockId,\n            kendoToolBarItems = []; // kendoToolBar组件需要的items参数\n\n        // kendo默认的增删改按钮 FIXME name和id混淆使用了\n        var defaultToolbar = [\n            {\n                name: \"add\",\n                text: \"新增\",\n                icon: \"k-add\",\n                layout: ICON_AND_TEXT\n            },\n\n            {\n                name: \"save-changes\",\n                text: \"保存\",\n                icon: \"k-update\",\n                layout: ICON_AND_TEXT\n            },\n\n            {\n                name: \"cancel-changes\",\n                text: \"取消\",\n                icon: \"k-cancel\",\n                layout: ICON_AND_TEXT\n            },\n\n            {\n                name: \"delete\",\n                text: \"删除\",\n                icon: \"k-delete\",\n                layout: ICON_AND_TEXT,\n                click: function (e) {\n                    var gridInstance = $(\"#\" + gridId).data(\"kendoGrid\");\n\n                    var dataSource = gridInstance.dataSource,\n                        models = [];\n\n                    if (gridInstance.trigger(ON_DELETE + NS, {event: e})) {\n                        return;\n                    }\n\n                    each(gridInstance.getCheckedRows(), function (i, model) {\n                        models.push(model);\n                    });\n\n\n                    var deleteHTML = kendo.template($(\"#del-template\").html())(\n                        {message: \"确认删除此数据么?\", ok: '确定', cancel: '取消'}\n                    );\n\n                    if (models.length > 0) {\n                        WindowUtil({\n                            title: \"删除\",\n                            content: deleteHTML,\n                            ok: function () {\n                                var that = this;\n\n                                // 存储当前的删除操作\n                                gridInstance._action = DELETE_ACTION;\n\n                                // 仅在删除失败的场景下用于恢复，业务上不能直接使用\n                                gridInstance._deleteRows = gridInstance.getCheckedRowsIndex();\n\n                                // Grid暂不刷新，成功或者失败的回调中再刷新\n                                gridInstance.removeRows(models, false);\n\n                                dataSource.sync();\n\n                                that.data(\"kendoWindow\").close();\n                            },\n                            cancel: function () {\n                                var that = this;\n                                that.data(\"kendoWindow\").close();\n                            }\n                        });\n                    } else {\n                        WindowUtil({\n                            'title': \"删除\",\n                            \"content\": \"<div class='kendo-del-message'>没有选中的行</div>\"\n                        });\n                    }\n                }\n            }\n        ];\n\n        // 防止js中自定义的按钮覆盖了grid 默认的4个按钮\n        var _configButton = function (i, buttonName) {\n            var button = defaultToolbar[i];\n\n            if (isArray(toolbarConfig.buttons)) {\n                var index = _.findIndex(toolbarConfig.buttons, function (e) {\n                    return e.name === buttonName;\n                });\n\n                if (index > -1) {\n                    button = extend(button,\n                        toolbarConfig.buttons[index]\n                    );\n                    toolbarConfig.buttons.splice(index, 1);\n                }\n            }\n            return button;\n        };\n\n        // 平台使用的按钮对象 非kendoToolBar所需的items\n        var toolbarButtons = [];\n\n        // 读取toolbarConfig中Grid的默认四个按钮的信息\n        each([\"add\", \"save-changes\", \"cancel-changes\", \"delete\"], function (i, buttonName) {\n            var buttonId = buttonName.split(\"-\")[0];\n\n            if (toolbarConfig[buttonId]) {\n                var registerBtn = _.find(gridDefaultButtons, {name: buttonId}),\n                    defaultBtn = _configButton(i, buttonName); // 去除buttons数组中和默认按钮name重复的元素\n                if (registerBtn) {\n                    registerBtn = extend({}, defaultToolbar[i], registerBtn);\n                    registerBtn.name = buttonName;\n                    toolbarButtons.push(registerBtn);\n                } else {\n                    toolbarButtons.push(defaultBtn);\n                }\n            }\n        });\n\n        if (isArray(toolbarConfig.buttons)) {\n            toolbarButtons = toolbarButtons.concat(toolbarConfig.buttons);\n        }\n\n        toolbarConfig.buttons = toolbarButtons;\n\n        // 按钮图标文字显示控制 并转换成kendoToolBar所需的items\n        each(toolbarButtons, function (index, buttonOptions) {\n            var btnLayout = buttonOptions['layout'] || TEXT,\n                btnSpan = \"\",\n                btnText = \"<span>\" + (buttonOptions['text'] || \"\") + \"</span>\";\n\n            if (btnLayout !== TEXT) { // 显示图标\n                var btnClass = IPLAT.Util.parseBtnClass(buttonOptions['icon']);\n                if(btnLayout === ICON) {\n                    btnClass = btnClass + \" i-btn-only-icon\";\n                    btnText = \"\";\n                }\n                btnSpan = \"<span class='\" + btnClass + \"'></span>\";\n            }\n\n            var button = {\n                type: \"button\",\n                attributes: extend(buttonOptions[\"attributes\"], {\n                    \"class\": \"kendo-xplat-\" + buttonOptions.name + \" xplat-float-right\",\n                    \"id\": buttonOptions.name\n                }),\n                template: kendo.template(\"<button class='i-btn-lg \" +\n                    \"k-grid-\" + buttonOptions.name + \"' type='button' >\" + btnSpan + btnText + \"</button>\")\n            };\n\n            kendoToolBarItems.push(button);\n        });\n\n\n        /*******************************************************\n         *\n         * STEP2    处理Grid右侧Setting下拉菜单中的逻辑，包括：\n         *          个性化显示列，导出数据等\n         *\n         *******************************************************/\n\n        var _buildGridSettings = function (options) {\n            var defaultActions = [];\n            if (options.personal) { // 自定义列的顺序和显示\n                defaultActions.push({\n                    name: \"personalGrid_\" + blockId,\n                    text: \"自定义数据列\",\n                    click: function () {\n                        var personalWindow = $(personalWindowId).data(\"kendoWindow\");\n                        personalWindow.center().open();\n                    }\n                });\n            }\n            // grid的配置项覆盖config配置项\n            var tempExportGrid = extend({}, options, options.gridConfig);\n            var exportGrid = tempExportGrid.exportGrid;\n\n\n            if (exportGrid) { // 开启了grid的导出功能\n                var exportOptions = {};\n                var exportEiInfo = new EiInfo(\"\");\n\n                exportOptions[\"frontExport\"] = true;\n                exportOptions[\"exportFileType\"] = \"xls\";\n                exportOptions[\"exportBlockId\"] = blockId;\n                exportOptions[\"exportFileName\"] = exportGrid.exportFileName || blockId;\n\n                if ($.isPlainObject(exportGrid)) { // Grid导出的配置项解析\n                    exportOptions[\"exportFileType\"] =\n                        exportGrid.exportFileType || \"xls\";\n\n                    exportOptions[\"exportBlockId\"] =\n                        exportGrid.exportBlockId || blockId;\n\n                    if (isAvailable(exportGrid.exportServiceName) && isAvailable(exportGrid.exportMethodName)) {\n                        // 使用后台服务，生成要导出的EiInfo\n                        exportOptions[\"exportServiceName\"] = exportGrid.exportServiceName;\n                        exportOptions[\"exportMethodName\"] = exportGrid.exportMethodName;\n\n                        exportOptions[\"frontExport\"] = false; // 后台导出的标志\n                    }\n                }\n\n                defaultActions.push({\n                    name: \"exportGrid_\" + blockId,\n                    text: \"导出数据\",\n                    click: function () {\n                        var gridInstance = $(\"#\" + gridId).data(\"kendoGrid\");\n                        var doExport = true;\n\n                        if ($.isFunction(exportGrid.beforeExport)) { // 导出数据前的事件\n                            doExport = exportGrid.beforeExport(gridInstance); // 业务上判断是否导出\n                        }\n\n                        if (doExport) { // 执行导出逻辑\n                            // 配置导出文件名\n                            if ($.isFunction(exportGrid.exportFileName)) {\n                                // 注意函数每次点击都会被调用，例如导出文件名需要设置时间戳\n                                exportOptions[\"exportFileName\"] = exportGrid.exportFileName(gridInstance);\n                            }\n\n                            if (exportOptions[\"frontExport\"]) {\n\n                                // 前端导出\n                                if ($.isFunction(exportGrid.exportEiInfo)) {\n                                    // 注意exportEiInfo函数每次点击都会被调用\n                                    exportEiInfo = exportGrid.exportEiInfo(gridInstance);\n\n                                } else if (IPLAT.isEiInfo(exportGrid.exportEiInfo)) {\n                                    exportEiInfo = exportGrid.exportEiInfo;\n                                } else {\n                                    // 默认为导出当前页，前端导出\n                                    // TODO: 1.指明导出的列；2.指明不导出的列；3.导出显示的值（例如下拉选项的中文内容）\n                                    exportEiInfo = gridInstance.wrapEiBlock(null);\n                                }\n\n                                exportOptions[\"exportEiInfo\"] = exportEiInfo.toJSONString();\n                            } else {\n\n                                // 后端导出\n                                // 后台导出时，不使用默认的查询条件，业务上提供自定义的查询条件\n                                if ($.isFunction(exportGrid.queryEiInfo)) {\n                                    exportOptions[\"queryInfo\"] = exportGrid.queryEiInfo(gridInstance);\n                                } else if (IPLAT.isEiInfo(exportGrid.queryEiInfo)) {\n                                    exportOptions[\"queryInfo\"] = exportGrid.queryEiInfo;\n                                } else {\n                                    // 后台导出时，使用默认的查询条件\n                                    exportOptions[\"queryInfo\"] = gridInstance.getQueryInfo();\n                                }\n\n                                if (IPLAT.isEiInfo(exportOptions[\"queryInfo\"])) {\n                                    exportOptions[\"queryInfo\"] = exportOptions[\"queryInfo\"].toJSONString();\n                                }\n                            }\n\n                            IPLAT.Util.exportGrid(exportOptions);\n                        } // doExport if结束\n                    } // click函数结束\n                });\n\n            }\n\n            return defaultActions;\n        };\n\n        var settingActions = _buildGridSettings(options);\n\n        if (!isArray(toolbarConfig[\"setting\"])) {\n            toolbarConfig[\"setting\"] = [];\n        }\n\n        toolbarConfig[\"setting\"] = settingActions.concat(toolbarConfig[\"setting\"]);\n        settingActions = toolbarConfig[\"setting\"];\n\n        if (settingActions.length > 0) { // 处理设置信息，grid右侧的下拉菜单\n            kendoToolBarItems.push({\n                type: \"buttonGroup\",\n                buttons: settingActions,\n                overflow: \"always\" // kendo toolbar anchor dropdown buttons\n            });\n        }\n\n        toolbarConfig[\"kendoToolBarItems\"] = kendoToolBarItems;\n\n\n        /*******************************************************\n         *\n         * STEP3    处理翻页条在Grid上方的逻辑\n         *\n         *******************************************************/\n\n        if (IPLAT.EFGrid._hasToolbarPager(options)) {\n\n            if (IPLAT.EFGrid._hasToolbarButtons(toolbarConfig) && options.showCount) {\n                // 有ToolBarButtons且从服务端查询总数时的翻页展示处理\n\n                extend(true, options.pageable, {\n                    messages: {\n                        \"display\": \"共 {2} 条\"\n                    }\n                });\n            }\n        }\n\n        options.toolbarConfig = toolbarConfig;\n\n        return toolbarConfig;\n    };\n\n\n    // 创建操作按钮工具栏\n    IPLAT.EFGrid._createToolBar = function (options, gridInstance) {\n        var blockId = options.blockId,\n            kendoToolBarItems = options.toolbarConfig[\"kendoToolBarItems\"],\n            toolbarId = '#ef_grid_toolbar_' + blockId,\n            $grid = gridInstance.element;\n\n        $grid.find(toolbarId).kendoToolBar({\n            items: kendoToolBarItems\n        });\n\n        // 工具条渲染结束后 绑定按钮的事件\n        var toolbarButtons = options.toolbarConfig[\"buttons\"];\n\n        each(toolbarButtons, function (index, buttonOptions) {\n            if ($.isFunction(buttonOptions.click)) {\n                $(toolbarId).on(\"click\", \".kendo-xplat-\" + buttonOptions.name, buttonOptions.click);\n            }\n        });\n\n        if (IPLAT.EFGrid._hasToolbarSettings(options.toolbarConfig)) {\n            $(toolbarId).addClass(\"k-iplat-setting-open\");\n        }\n\n        $(toolbarId).on(\"click.IPLAT\", '.k-grid-cancel-changes', function () {\n            // 点击cancel-changes按钮，会更改所有model（tr）的uid\n            gridInstance._checkedRows = [];\n        });\n    };\n\n})(window.jQuery);\n(function ($) {\n    var Class = kendo.Class,\n        ajaxEi = IPLAT.ajaxEi,\n        EiConstant = IPLAT.EiConstant,\n        EiInfo = IPLAT.EiInfo,\n        EiBlock = IPLAT.EiBlock,\n        htmlDecode = IPLAT.htmlDecode,\n        buildAjaxOption = IPLAT.Util.buildAjaxOption,\n\n        WindowUtil = IPLAT.WindowUtil,\n        NotificationUtil = IPLAT.NotificationUtil,\n        Notification = IPLAT.Notification,\n\n        NS = \".IPLAT\",\n\n        CREATE_ACTION = IPLAT.EFGrid.CREATE_ACTION,\n        READ_ACTION = IPLAT.EFGrid.READ_ACTION,\n        UPDATE_ACTION = IPLAT.EFGrid.UPDATE_ACTION,\n        DELETE_ACTION = IPLAT.EFGrid.DELETE_ACTION, // 点击删除按钮时，记录删除操作\n\n        BEFORE_ADD = \"beforeAdd\", // copyAdd\n        ON_ADD = \"onAdd\", // models已经准备好\n        AFTER_ADD = \"afterAdd\", // models已经准备好\n        TD_VALIDATOR_CLASS = 'td-validator',\n        TD_ERROR_MSG = 'errorMsg',\n\n        ON_SAVE = \"onSave\",\n        SAVECHANGES = \"saveChanges\", // onSave对应的kendo原生事件\n        ON_CANCEL = \"onCancel\",\n        ON_DELETE = \"onDelete\",\n\n        ON_SUCCESS = \"onSuccess\",\n        ON_FAIL = \"onFail\",\n\n        BEFORE_EDIT = \"beforeEdit\",\n        AFTER_EDIT = \"afterEdit\",\n        ON_CHECKROW = \"onCheckRow\",\n        ON_CHECK_ALLROWS = \"onCheckAllRows\",\n        ON_CELLCLICK = \"onCellClick\",\n        ON_ROWCLICK = \"onRowClick\",\n        ON_ROWDBLCLICK = \"onRowDblClick\",\n        LOADCOMPLETE = \"loadComplete\",\n        GRID_CELL = \"td[role='gridcell']\",\n\n        CSRF_HEADER = {},\n        AJAX_OPTIONS = {\n            type: 'POST',\n            dataType: \"json\",\n            contentType: \"application/json\",\n            headers: CSRF_HEADER\n        },\n        personalInfo = new EiInfo(\"personalInfo\"),\n\n        MAX_COUNT = IPLATUI.Config.EFGrid.MAX_COUNT,\n        QUERY_ALL = IPLATUI.Config.EFGrid.QUERY_ALL,\n        BOTTOM_BORDER = IPLAT.ColorBox.GRID_BOTTOM_BORDER,\n        BOTTOM_BORDER_HOVER = IPLAT.ColorBox.GRID_BOTTOM_BORDER_HOVER,\n        INVALID_COLOR = IPLAT.ColorBox.INVALID_COLOR,\n        DEFAULT_TOOLTIP_WIDTH = 450,\n        DEFAULT_ERROR_TOOLTIP_WIDTH = 100,\n        gridDefaults,\n        isArray = $.isArray,\n        isPlainObject = $.isPlainObject,\n        isFunction = $.isFunction,\n        isString = _.isString,\n        each = $.each,\n        keys = _.keys,\n        find = _.find,\n        extend = $.extend,\n        autoFitFlag = true;\n\n    // grid列上的查询条件\n    kendo.ui.FilterMenu.fn.options.operators.string = {\n        contains: \"包含\",\n        eq: \"等于\",\n        neq: \"不等于\"\n\n    };\n\n    // EFGrid的全局配置\n    gridDefaults = IPLATUI.Config.EFGrid;\n\n    /**\n     * EFGrid封装前端请求数据，获取服务端数据的接口\n     */\n    var AbstractTransport = Class.extend({\n        init: function (options) {\n            var that = this;\n            that.options = options;\n\n            that.CREATE = options[\"insertMethod\"] || \"insert\";\n            that.READ = options[\"queryMethod\"] || \"query\";\n            that.UPDATE = options[\"updateMethod\"] || \"update\";\n            that.DESTROY = options[\"deleteMethod\"] || \"delete\";\n\n            that.serviceName = options[EiConstant.SERVICE_NAME] || options.eiInfo.get(EiConstant.SERVICE_NAME);\n            that.methodName = options[\"queryMethod\"] || options[\"methodName\"] || \"query\";\n            that.efSecurityToken = $(\"#efSecurityToken\").val();\n            that.postEiInfo = new EiInfo();\n\n            CSRF_HEADER = { // 请求前加入header\n                beforeSend: function (xhr) {\n                    xhr.setRequestHeader('efSecurityToken', that.efSecurityToken);\n                }\n            };\n\n        },\n\n        _buildFilter: function (params) {\n            var that = this,\n                blockId = that.options.blockId,\n                eiBlock = that.options.eiBlock, // result block的元数据\n\n                // JS中可以通过配置 query 来配置查询的EiInfo\n                gridConfig = that.options.gridConfig,\n                _options = extend({}, that.options, gridConfig),\n                query = _options.query,\n                postEiInfo;\n\n            // 每次查询都会检查初始的query设置，如果希望只在第一次查询时使用\n            // 在query 函数里实现该逻辑，然后调用默认的EiInfo.build(document.body)\n\n            if (isFunction(query)) { // 通过函数设置查询条件 return EiInfo\n                postEiInfo = query();\n\n            } else if (IPLAT.isEiBlock(query)) { // 直接指明查询条件的EiBlock\n                postEiInfo = new EiInfo(\"\");\n                postEiInfo.addBlock(query);\n\n            } else if (IPLAT.isEiInfo(query)) { // 直接指明EiInfo\n                postEiInfo = query;\n\n            } else if (IPLAT.isString(query) && $(query).length > 0) {\n                // 通过String选择器 DOM jQuery 序列化出 查询条件EiInfo\n                postEiInfo = EiInfo.build($(query));\n\n            } else { // 默认是序列化整个页面\n                postEiInfo = EiInfo.build(document.body);\n            }\n\n            if (IPLAT.isEiInfo(postEiInfo)) {\n                that.postEiInfo = postEiInfo; // 解析页面上的查询条件\n            } else {\n                that.postEiInfo = new EiInfo();\n            }\n\n            var postEiBlock = that.postEiInfo.getBlock(blockId);\n\n            if (!isAvailable(postEiBlock)) {\n                postEiBlock = new EiBlock(eiBlock.getBlockMeta());\n                that.postEiInfo.addBlock(postEiBlock);\n            }\n\n            var kendoGid = $(\"#\" + that.options.gridId).data(\"kendoGrid\");\n            if (isAvailable(kendoGid) && isAvailable(kendoGid.eiBlock)) {\n                // 防止 eiBlock 中 attr 被覆盖\n                postEiBlock.setAttr(extend({}, kendoGid.eiBlock.getAttr()));\n            } else {\n                postEiBlock.setAttr(extend({}, eiBlock.getAttr()));\n            }\n\n            // dataSource.query 条件处理\n            IPLAT.Util.filterAdapter(params.filter, that.postEiInfo);\n\n            // build orderBy\n            // 1. 后端排序\n            // 2. 多列组合排序\n            // 3. join的列SQL语法的问题\n\n            // t { field: \"age\", dir: \"desc\" } is sent as:\n            //\n            // sort[0][field]: age\n            // sort[0][dir]: desc\n            postEiBlock.set(\"orderBy\", IPLAT.Util.sortAdapter(params.sort));\n\n\n            return that.postEiInfo;\n\n        },\n\n        _buildModels: function (params, operation) {\n            var that = this,\n                pageSize,\n                skip,\n                options = that.options,\n                modelId = options.modelId,\n                blockId = options.blockId,\n                gridId = options.gridId,\n                postEiBlock = that.postEiInfo.getBlock(blockId),\n                kendoGrid = $(\"#\" + gridId).data('kendoGrid'),\n                showCount = kendoGrid instanceof kendo.ui.Grid ? kendoGrid.options.showCount : options.showCount;\n\n            if (operation === READ_ACTION) {\n                that.methodName = that.READ;\n                pageSize = params.pageSize || 10;\n                if (pageSize > MAX_COUNT) { // TODO: 超过允许的最大查询\n                    pageSize = QUERY_ALL;\n                }\n                skip = params.skip || 0;\n\n                postEiBlock.set(EiConstant.LIMIT, pageSize);\n                postEiBlock.set(EiConstant.OFFSET, skip);\n\n                if (!!showCount) {\n                    postEiBlock.set(EiConstant.SHOW_COUNT, \"true\");\n                }\n            } else {\n                if (operation === CREATE_ACTION) {\n                    that.methodName = that.CREATE;\n\n                } else if (operation === UPDATE_ACTION) {\n                    that.methodName = that.UPDATE;\n\n                } else if (operation === DELETE_ACTION) {\n                    that.methodName = that.DESTROY;\n                }\n\n                var checkedRows = kendoGrid.getCheckedRows();\n\n                // 提交勾选的数据，或者提示存在修改了，但没有勾选的数据，不会被提交\n                var _exist = function (items, dataItem) {\n                    return !!_.find(items, function (item) {\n                        return dataItem[modelId] === item[modelId];\n                    });\n                };\n\n                var submitChecked = true; // 默认提交勾选的行，执行_exist检查\n                if (isPlainObject(options.saveOptions)) {\n                    submitChecked = options.saveOptions[operation];\n                } else {\n                    if (operation === \"destroy\") {\n                        submitChecked = false; // TODO 删除时为什么不检查checked Rows\n                    }\n                }\n\n                _mapModels(postEiBlock, options.columns, params.models, {\n                    operation: operation,\n                    submitChecked: submitChecked,\n                    _exist: _exist,\n                    checkedRows: checkedRows\n\n                });\n            }\n        },\n\n        buildTransport: function () {\n            var that = this;\n\n            return extend(that._buildURL(), {\n                parameterMap: function (params, operation) {\n                    that._buildFilter(params);\n                    that._buildModels(params, operation);\n\n                    return that._buildRequest();\n                }\n            });\n        }\n    });\n\n    /**\n     * 不再使用EiService的提交方式\n     * @deprecated\n     */\n    var EiServiceTransport = AbstractTransport.extend({\n        _buildURL: function () {\n            var transportDefaults = buildAjaxOption();\n            var that = this,\n                url = that.options.url;\n\n            return extend(true, transportDefaults, {\n                read: {url: url},\n                create: {url: url},\n                update: {url: url},\n                destroy: {url: url}\n            });\n        },\n        _buildRequest: function () {\n            var that = this,\n                postEiInfo = that.postEiInfo,\n                efSecurityToken = that.efSecurityToken,\n                serviceName = that.serviceName,\n                methodName = that.methodName;\n\n            return {\n                service: serviceName,\n                method: methodName,\n                eiinfo: postEiInfo.toJSONString(), // 完整的EFColumn元数据信息\n                efSecurityToken: efSecurityToken\n            };\n        }\n    });\n\n    /**\n     * Restful风格的提交方式\n     */\n    var RestfulTransport = EiServiceTransport.extend({\n        _buildURL: function () {\n            var that = this,\n                serviceName = that.serviceName,\n                transportDefaults = buildAjaxOption({contentType: IPLAT.AJAX.ContentType.JSON}),\n                transport,\n                useFunction = false,\n                url = that.options.url,\n                readURL,\n                createURL,\n                updateURL,\n                destroyURL;\n\n            readURL = url + \"/\" + serviceName + \"/\" + that.READ;\n            createURL = url + \"/\" + serviceName + \"/\" + that.CREATE;\n            updateURL = url + \"/\" + serviceName + \"/\" + that.UPDATE;\n            destroyURL = url + \"/\" + serviceName + \"/\" + that.DESTROY;\n\n            transport = {\n                read: extend({url: readURL}, CSRF_HEADER),\n                create: extend({url: createURL}, CSRF_HEADER),\n                update: extend({url: updateURL}, CSRF_HEADER),\n                destroy: extend({url: destroyURL}, CSRF_HEADER)\n            };\n\n            transport = extend(true, transportDefaults, transport);\n\n\n            if (isFunction(that.READ)) {\n                transport.read = that.READ;\n                useFunction = true;\n            }\n\n            if (isFunction(that.CREATE)) {\n                transport.create = that.CREATE;\n                useFunction = true;\n            }\n\n            if (isFunction(that.UPDATE)) {\n                transport.update = that.UPDATE;\n                useFunction = true;\n            }\n\n            if (isFunction(that.DESTROY)) {\n                transport.destroy = that.DESTROY;\n                useFunction = true;\n            }\n\n            if (useFunction) {\n                transport = IPLAT.Util.buildCRUDFunction(transport, that);\n            }\n\n            return transport;\n        },\n\n        _buildRequest: function () {\n            var that = this;\n            return that.postEiInfo.toJSONString();\n        }\n    });\n\n    /**\n     * 封装了EiService和REST两种请求格式的工厂类\n     */\n    var TransportFactory = (function () {\n        var transportTypes = {\n            REST: RestfulTransport,\n            EI: EiServiceTransport\n        };\n\n        return {\n            getTransport: function (type, options) {\n                var TransportBuilder = transportTypes[type],\n                    builder = new TransportBuilder(options);\n\n                return builder.buildTransport();\n            },\n\n            registerTransport: function (type, builder) {\n                if (builder.prototype instanceof AbstractTransport) {\n                    transportTypes[type] = builder;\n                }\n                return TransportFactory;\n            }\n        }\n    })();\n\n    /**\n     * EFColumn列，自定义列的配置覆盖处理\n     * @param {Array} preColumns preColumns是优先级高的数组，会覆盖baseColumns中的同名（field）元素，\n     * preColumns中其他的（不存在于baseColumns中的）元素，默认追加到baseColumns末尾，\n     * 如果类配置了属性position为front，则将该列放到baseColumns之前。\n     *\n     * @param {Array} baseColumns 将被覆盖的列\n     * @return {Array} 被覆盖的列baseColumns\n     * @private\n     */\n    function _extendColumns(preColumns, baseColumns) {\n        if (isArray(preColumns) && preColumns.length > 0) {\n            each(baseColumns, function (i, baseColumn) {\n                each(preColumns, function (j, preColumn) {\n                    if (baseColumn.field === preColumn.field) {\n                        extend(true, baseColumns[i], preColumn); // 列名相同时，原生配置覆盖后台配置\n                        preColumns[j] = {}; // 标记清除原生配置\n                    }\n                });\n            });\n\n            // 处理原生配置中不存在于EiBlock中的列，默认在列的最后。例如，自定义的按钮列。\n            var frontColumns = [];\n            each(preColumns, function (i, column) {\n                if (column.field) {\n                    if (column.position === \"front\") {\n                        frontColumns.push(column);\n                    } else {\n                        baseColumns.push(column);\n                    }\n                }\n            });\n            baseColumns = frontColumns.concat(baseColumns);\n            return baseColumns;\n        }\n        return baseColumns;\n    }\n\n    /**\n     * 构造列信息，分为3个阶段\n     * 1. 解析EiBlock， Tag ，JS中的属性配置\n     * 2. 解析出校验等规则信息\n     * 3. 处理编辑问题\n     * @param options\n     * @private\n     */\n    function _buildColumns(options) {\n        var eiBlock = options.eiBlock,\n            tagId = options.tagId,\n            gridConfig = options.gridConfig, // 页面JS中的原生配置\n            autoDraw = options.autoDraw || \"yes\",\n            kendoColumns = [],\n            modelId = \"\",\n            modelFields = {},\n            tagColumns = isPlainObject(IPLAT.EFGrid[tagId]) ? IPLAT.EFGrid[tagId].columns : [];\n\n        if (gridConfig.rowNo !== undefined) { // 显示行号，gridConfig的优先级高\n            options.rowNo = gridConfig.rowNo;\n        }\n\n        if (autoDraw === \"no\" || autoDraw === \"false\") {\n            // 完全根据EFColumn Tag渲染\n            // TODO: Tag属性和java js的不一致性处理, Tag上的动态属性设置\n            kendoColumns = tagColumns; // 已经是kendo接受的格式，转换在EFColumn Tag中进行\n            // 使用iplatWidth=true来标记自定义width的column\n            each(kendoColumns, function (i, column) {\n                if (!!column.width) {\n                    column['iplatWidth'] = true;\n                }\n            });\n\n        } else {\n            // EiColumn.java, EFColumn.tag, js的属性映射处理\n            // 原则上三者应该同步，本质上是EF的属性和功能映射到KendoUI\n            // 处理列的显示和校验等信息，分析出schema.model所需的信息\n            var blockMeta = eiBlock.getBlockMeta().getMetas(); // [EiColumn]\n\n            kendoColumns = _.chain(blockMeta).map(function (eiColumn) {\n                var columnJSON = eiColumn.toJSON(); // EiColumn完整的属性信息，包括java中动态set的属性\n\n                // 数据类型的处理 \"N\", \"C\"， 数字默认居右， 数据类型包括B，N，C，D，E\n                // 数字列的内容默认居右 这部分逻辑在 _buildColumnTemplate中处理了\n                // if (columnJSON.type === \"N\") {\n                //     align = \"right\";\n                // }\n\n                // 有定义列的方向，就使用默认\n                var align = columnJSON.align;\n\n                columnJSON.valueType = columnJSON.type; // schema.model里面的type信息\n\n                columnJSON.editType = columnJSON.editor; // 单元格编辑时的展示类型\n\n                delete columnJSON.editor; // 和kendo自定义的editor冲突\n\n                if (columnJSON.readonly) { // 只读列\n                    if (_.indexOf(IPLAT.EFGrid[tagId].readonlyColumns, columnJSON.name) < 0) {\n                        // 通过EiColumn.java 设置的readonly处理\n                        IPLAT.EFGrid[tagId].readonlyColumns.push(columnJSON.name);\n                    }\n                }\n\n                // EiColumn Meta的信息的优先级低\n                var columnAttr = columnJSON.attr, // EiColumn.java设置的自定义数据\n                    locked = columnJSON.primaryKey, // 主键列是固定列\n                    enable = true,\n                    headerAlign,  // header中文本居的方位\n                    // headerAttributes = {}, // 头部属性\n                    hidden = (columnJSON.visible === false),\n                    validation = {};\n\n                if (isPlainObject(columnAttr)) { // EiColumn.java中设置的动态属性\n                    locked = !!(columnAttr[\"locked\"]);\n                    enable = columnAttr['enable'];\n                    headerAlign = columnAttr['headerAlign'];\n                }\n\n                if (columnJSON.regex) {\n                    validation[\"data-regex\"] = columnJSON.regex;\n                }\n\n                if (columnJSON.errorPrompt) {\n                    validation[\"data-errorprompt\"] = columnJSON.errorPrompt;\n                }\n\n                var columnOptions = {\n                    field: columnJSON.name,\n                    title: columnJSON.descName,\n                    hidden: hidden,\n                    locked: locked,\n                    enable: enable,\n                    width: columnJSON.width || gridDefaults.columnWidth,\n                    height: columnJSON.height || gridDefaults.rowHeight,\n                    attributes: extend({\n                        align: align,\n                        required: !columnJSON.nullable,\n                        minLength: columnJSON.minLength,\n                        maxLength: columnJSON.maxLength,\n                        \"data-rules\": columnJSON.validateType\n                    }, validation)\n                };\n\n                if (isString(headerAlign)) {\n                    columnOptions['headerAttributes'] = {\n                        style: \"text-align:\" + headerAlign\n                    }\n                }\n\n                return extend(columnJSON, columnOptions);\n\n\n            }).sortBy(\"pos\").value(); // EiBlock中的列, autoDraw === \"yes\"\n\n            if (autoDraw === \"mixed\" || autoDraw === \"override\") {\n\n                var oldTagColumns = _.map(tagColumns, function (tagColumn, i) {\n                    return extend({tagPos: i}, tagColumn);\n                }); // 复制一份EFColumn的数组，保证tag的顺序，防止_extendColumns破坏了原来的tagColumns\n\n                kendoColumns = _extendColumns(tagColumns, kendoColumns); // EFColumn Tag会覆盖EiBlock中的列配置\n\n                if (autoDraw === \"override\") { // 显示的列以Tag为准，但是会混入EiBlock中的属性，注意和no的区别\n                    kendoColumns = _.chain(kendoColumns).filter(function (column) {\n                        return _.findIndex(oldTagColumns, function (tagColumn) {\n                            var equal = tagColumn.field === column.field;\n                            if (equal) {\n                                column.tagPos = tagColumn.tagPos;\n                            }\n                            return equal;\n                        }) >= 0;\n                    }).sortBy(\"tagPos\").map(function (column) {\n                        delete column.tagPos;\n                        return column;\n                    }).value();\n                }\n            }\n        }\n\n        // 优先级最高的配置，支持kendo的所有原生配置，高级用法，用于自定义列\n        if (isArray(gridConfig.columns)) {\n            var gridConfigColumns = gridConfig.columns;\n            // 使用iplatWidth=true来标记自定义width的column\n            each(gridConfigColumns, function (i, column) {\n                if (!!column.width) {\n                    column['iplatWidth'] = true;\n                }\n            });\n            kendoColumns = _extendColumns(gridConfigColumns, kendoColumns);\n            delete gridConfig.columns;\n        }\n\n        // Tag逻辑抽象成JS的场景，直接在使用IPLAT.Grid({columns: []})\n        if (isArray(options.columns)) {\n            kendoColumns = _extendColumns(options.columns, kendoColumns);\n            delete options.columns;\n        }\n\n        // 构造schema中的modelFields，将EiBlockMeta元数据信息映射到Kendo的schema\n        modelId = kendoColumns[0].field;\n        each(kendoColumns, function (i, column) {\n            modelId = column.primaryKey ? column.field : modelId;\n            column.width = column.width || gridDefaults.columnWidth;\n            // 解析EiColumn中的校验等信息到modelFields中\n            modelFields[column.field] = {\n                editable: column.enable,\n                defaultValue: column.defaultValue || \"\",\n                validation: column.attributes\n                // type: \"number\"\n            };\n            // 暂时注释掉设置model的type=\"date\"\n            // 批量复制判断的属性是editType\n            // if (typeof column.editType !== \"undefined\" && column.editType.indexOf(\"date\") === 0) {\n            //     modelFields[column.field].type = \"date\";\n            // }\n\n            if (column.editType === \"dropdown\") {\n                modelFields[column.field].filterable = {\n                    ui: function (element) {\n                        element.kendoDropDownList({\n                            dataSource: column.values,\n                            dataTextField: column.textField,\n                            dataValueField: column.valueField\n                        });\n                    }\n                };\n            }\n        });\n\n        options.columns = kendoColumns;\n        options.columnCallback = gridConfig.columnCallback;\n\n        // Grid中readonly = true , 所有的column都被设置为readonly = true\n        if (options.readonly === true) {\n            _.each(options.columns, function (column) {\n                column.readonly = true;\n            })\n        }\n\n        _buildSortColumns(options);\n\n        _buildColumnTemplate(options);\n        _buildColumnEditor(options);\n\n        _buildColumnHeader(options);\n\n\n        extend(true, options, {\n            modelId: modelId,\n            dataSource: {\n                schema: {\n                    model: {\n                        id: modelId,\n                        fields: modelFields\n                    }\n                }\n            }\n        });\n\n        return kendoColumns;\n    }\n\n    /**\n     * 用户可自定义列的显示，宽度，排列顺序，是否固定等信息。存入平台的TEDFA60表\n     * @param options\n     * @private\n     */\n    function _buildPersonalColumns(options) {\n        var personal = options.personal,\n            personalBlockId = \"personal_\" + options.blockId,\n            personalColumns = [],\n            kendoColumns = [];\n\n        _buildColumns(options);\n\n        if (personal) {\n            // 从TEDFA60中有查到个性化的信息\n            personalInfo = options.personalInfo;\n            personalColumns = personalInfo.getBlock(personalBlockId).getMappedRows(); // EDFA60表中的信息\n\n            // 弹出的grid的列数据信息\n            kendoColumns = options.columns;\n\n            each(kendoColumns, function (i, column) {\n                each(personalColumns, function (j, personalColumn) {\n                    if (column.field === personalColumn.column_ename) {\n                        column.pos = personalColumn.column_order * 1; // 只使用EDFA60的列顺序信息\n                        if (personalColumn.soft_delete === \"0\") { // 只使用EDFA60的列顺序信息\n                            column.locked = personalColumn.column_locked === \"1\";\n                            column.hidden = personalColumn.column_hidden === \"1\";\n                            column.width = personalColumn.column_width + \"px\";\n                        }\n                    }\n                });\n            });\n\n            kendoColumns = _.sortBy(kendoColumns, \"pos\");\n\n            options.columns = kendoColumns;\n        }\n    }\n\n    /**\n     * 处理列的排序（后端）\n     * @param options\n     * @private\n     */\n    function _buildSortColumns(options) {\n        var sort = options.iplatSort,\n            columns = options.columns;\n\n        // 内部方法，设置column 中 sortable的值\n        function setSortable(columns, isSort) {\n            var sortObj,\n                isSort = !!isSort; //强制转化为boolean\n\n            // sortable 的实际值按照 js中sortable > column中sort > attr(java)中sort的规则来判定\n            each(columns, function (i, column) {\n                sortObj = $.extend({sortable: (column.attr || {}).sort}, {sortable: column.iplatSort}, {sortable: column.sortable});\n                column.sortable = sortObj.sortable === isSort ? isSort : !isSort;\n            });\n        }\n\n        if (sort === \"single\") {\n            options.sortable = {\n                mode: \"single\",\n                allowUnsort: true, // 默认是true，允许出现非排序状态；asc normal desc\n                initialDirection: \"asc\"// 初始的排序顺序\n            };\n            setSortable(columns, false);\n        } else if (sort === \"all\") {\n            options.sortable = {\n                mode: \"multiple\",\n                allowUnsort: true, // 默认是true，允许出现非排序状态；asc normal desc\n                initialDirection: \"asc\"// 初始的排序顺序\n            };\n            setSortable(columns, false);\n        } else if (sort === \"setted\") {\n            options.sortable = {\n                mode: \"multiple\",\n                allowUnsort: true, // 默认是true，允许出现非排序状态；asc normal desc\n                initialDirection: \"asc\"// 初始的排序顺序\n            };\n            setSortable(columns, true);\n        }\n    }\n\n    /**\n     * 处理了数据列的小计，总计\n     * 根据displayType 设置固定的显示模版，提供扩展机制\n     * @param options\n     * @private\n     */\n    function _buildColumnTemplate(options) {\n        var columns = options.columns, // kendoColumns\n            rowNo = options.rowNo,\n            gridConfig = options.gridConfig, // 页面JS中的原生配置\n            gridId = options.gridId,\n            sumType = options.sumType, // grid上的合计属性\n            columnCallback = options.columnCallback;\n\n        var flag = false;\n\n        var page, total, finalSumType = null,\n            aggregate = [];\n        page = total = 0;\n\n        each(columns, function (i, column) {\n            if (column.valueType === \"N\") {\n                column.attributes.align = \"right\"; // 解决在js中配置valueType为N时，align居左的问题\n                column.sumType = column.sumType || sumType; // 列上的合计属性覆盖grid的设置\n\n                if (finalSumType !== \"all\") { // 需要计算最终的合计类型\n                    if (column.sumType === \"page\") {\n                        page = 1;\n                        finalSumType = \"page\";\n                    }\n\n                    if (column.sumType === \"total\") {\n                        total = 1;\n                        finalSumType = \"total\";\n                    }\n\n\n                    if (column.sumType === \"all\" || (page + total) === 2) {\n                        finalSumType = \"all\";\n                        // return false; // 等价于for循环的break, return 非false等价于continue\n                    }\n                }\n            }\n        });\n\n        // 确定footerTemplate的模板 []\n        var sumTemplate = $(\"#sum-template\").html();\n\n        each(columns, function (i, column) {\n            if (column.sumType && column.valueType === \"N\") {\n                aggregate.push({\n                    field: column.field,\n                    format: column.format,\n                    aggregate: \"sum\"\n                });\n                column.footerAttributes = extend(column.footerAttributes, {\n                    align: \"right\"\n                });\n\n                column.footerTemplate = kendo.template(sumTemplate.replace(/@field@/g, column.field));\n            }\n\n            // 批量复制模版\n            _buildColumnCopyTemplate(column);\n\n            // 处理column的type和校验\n            switch (column.displayType) {\n                case \"checkbox\":\n                    column.template = function (dataItem) {\n                        var value = !!(dataItem[column.field] * 1); // 0 false \"0\"\n                        var checked = value ? \"checked\" : \"\";\n                        return \"<input type='checkbox' disabled='disabled' value='\" + value + \"'\" + checked + \" class='i-grid-checkbox'>\";\n                    };\n                    break;\n\n                case \"radio\":\n                    column.template = function (dataItem) {\n                        var value = !!dataItem[column.field];\n                        var checked = value ? \"checked\" : \"\";\n                        return \"<input type='radio' disabled='disabled' value='\" + value + \"'\" + checked + \" class='i-grid-radio'>\";\n                    };\n                    break;\n\n                case 'date':\n                case 'datetime':\n                    column.template = function (dataItem) {\n                        var value = dataItem[column.field];\n                        if (column.parseFormats[0]) {\n                            var date = kendo.parseDate(value, column.parseFormats[0]);\n                            return kendo.format(column.format, date || \"\");\n                        } else {\n                            return kendo.format(column.format, value) || value || \"\";\n                        }\n                    };\n                    break;\n\n                case \"url\": // 不允许编辑\n                    column.template = function (dataItem) {\n                        var value = dataItem[column.field] || \"\";\n\n                        if (isFunction(columnCallback) && !flag) {\n                            flag = true;\n                            // 绑定了无数次\n                            $(\"body\").on(\"click\", \"#\" + gridId + \" a.cell-url\", function (e) {\n\n                                var model = $(\"#\" + gridId).data(\"kendoGrid\").dataItem($(this).closest(\"tr\"));\n                                columnCallback(column.field, model);\n                            });\n                        }\n\n                        return \"<a href='#' class='cell-url'>\" + value + \"</a>\";\n                    };\n                    break;\n\n                case \"button\": // 不允许编辑\n                    column.enable = false;\n                    break;\n\n                case \"image\": // 不允许编辑\n                    column.enable = false;\n                    break;\n\n                default:\n                    break;\n\n            }\n\n            // 可编辑的单元格，勾选时突出显示\n            var showEditHelper = IPLAT.Util.boolConfigHelper(options.dynamic.editHelper,\n                IPLATUI.Config.EFGrid.editHelper);\n\n            // editable 是boolean变量，平台默认的 判断单元格是否可编辑的逻辑\n            var editable = !(column.readonly === true || column.enable === false);\n\n            // 业务可以在JS中自行判断单元格是否显示可编辑\n            if (isFunction(options[\"customEditHelper\"])) {\n                editable = options[\"customEditHelper\"](column);\n            }\n\n            // TODO 新增时readonly 无法提示用户其可编辑\n            if (editable) {\n                // 单元格可编辑 才会添加校验 可编辑提示的辅助div\n\n                // 单元格可编辑就会被添加i-validate-helper样式 ，明确指明使用editHelper，再添加i-edit-helper\n                var editClass = showEditHelper ? 'i-validate-helper i-edit-helper' : 'i-validate-helper';\n\n                var editDiv = \"<div class='\" + editClass + \"'>\";\n\n                if (_.isString(column.template)) {\n                    column.template = editDiv + column.template + \"</div>\";\n                } else if (isFunction(column.template)) {\n                    var func = column.template;\n                    column.template = function (dataItem) {\n                        dataItem[column.field] = dataItem[column.field] || '';\n                        return editDiv + func.call(this, dataItem) + \"</div>\";\n                    }\n\n                } else {\n                    if (column.format) { // 数字的format信息\n                        column.template = function (dataItem) {\n                            var result = \"\";\n                            if (isAvailable(dataItem[column.field])) {\n                                result = kendo.format(column.format, dataItem[column.field]);\n                            }\n                            return editDiv + result + \"</div>\";\n                        };\n                    } else {\n                        column.template = editDiv + \"#=\" + column.field + \" != null ? \" +\n                            column.field + \": ''#</div>\";\n                    }\n                }\n            }\n        });\n\n        options.finalSumType = finalSumType;\n        options.aggregate = aggregate;\n\n        var footer = \"\",\n            footerTemplate = \"\";\n\n        if (finalSumType) {\n            footer = $(\"#sum-template\").html().replace(/data\\.@field@\\./g, \"\");\n            footerTemplate = kendo.template(footer)({\n                sumType: finalSumType,\n                page: \"小计\",\n                sum: \"总计\"\n            });\n\n            if (!options.enable) {\n                rowNo = options.rowNo = true; // 要合计，但是没有checkbox列，默认开启行号\n                footer = \"rowNo\";\n            } else {\n                footer = \"checkbox\";\n            }\n        }\n\n        // column的序列号\n        if (rowNo) {\n            var rowNoColumn = [{\n                // field: \"rowNo\",\n                headerAttributes: {\n                    resizable: false,\n                    style: \"padding: 3px;\"\n                },\n                headerTemplate: \"<span>\" + IPLATUI.Config.EFGrid.rowNoText + \"</span>\",\n                template: function (item) {\n                    var items = item.parent();\n                    return \"<span class='row-no'>\" + (items.indexOf(item) + 1) + \"</span>\";\n                },\n                width: '40px',\n                attributes: {\n                    align: IPLATUI.Config.EFGrid.rowNoAlign\n                },\n                pos: -1,\n                aid: true,\n                enable: false,\n                // 使用iplatWidth=true来标记定义width的column\n                iplatWidth: true,\n                locked: true\n            }];\n\n            if (footer === \"rowNo\") {\n                rowNoColumn[0].footerTemplate = footerTemplate;\n            }\n\n            columns = rowNoColumn.concat(columns);\n        }\n\n\n        if (options.enable) {\n            // checkbox列 批量选中操作\n            if (!/hidden/gi.test(options.checkMode)) {\n                var checkColumn = [extend({}, {\n                    headerTemplate: \"<input type='checkbox' class='check-all' />\",\n                    attributes: {\n                        align: \"center\"\n                    },\n                    template: '<input type=\"checkbox\" value=#=uid# class=\"kendo-check-box check-one\" />',\n                    width: '40px',\n                    pos: -2,\n                    aid: true,\n                    headerAttributes: {\n                        align: \"center\",\n                        resizable: false\n                    },\n                    // 使用iplatWidth=true来标记定义width的column\n                    iplatWidth: true,\n                    enable: false,\n                    locked: true\n                }, gridConfig.checkColumn)];\n\n                if (footer === \"checkbox\") {\n                    checkColumn[0].footerTemplate = footerTemplate;\n                    checkColumn[0].width = \"40px\";\n                }\n\n                columns = checkColumn.concat(columns);\n            }\n        } else {\n            // 所有的列都无法编辑， 工具栏的按钮应该失效\n            options.toolbarConfig = {hidden: true};\n        }\n        options.columns = columns;\n    }\n\n    /**\n     * 提供批量复制header的模版\n     * @param column\n     * @private\n     */\n    function _buildColumnCopyTemplate(column) {\n        // 批量复制\n        // 当column里面存在readonly和enable时候，关闭批量复制功能\n        var enableCopy = true;\n        // 当readonly = true 或者 readonly = 'readonly' 或者readonly = 'true'\n        if (column.readonly === true || $.trim(column.readonly) === 'true' || $.trim(column.readonly) === 'readonly') {\n            enableCopy = false\n        }\n\n        // 当column.enable = false 或者 column.enable = 'false'\n        if (column.enable === false || column.enable === 'false') {\n            enableCopy = false\n        }\n\n        if (enableCopy && column.copy === true) {\n            var copyType = column.editType || column.popupType || \"C\";\n            var link = \"<a class='k-grid-copy k-state-border-down' data-type='\" + copyType + \"' href='javascript:;' \" +\n                \"><span class='k-icon k-i-maximize'></span></a>\";\n            if (typeof column.headerTemplate === \"string\") {\n                column.headerTemplate = link + column.headerTemplate;\n\n            } else if (typeof column.headerTemplate === \"function\") {\n                column.headerTemplate = link + column.headerTemplate.call(null, column);\n            } else {\n                column.headerTemplate = link + column.title;\n            }\n        }\n    }\n\n    /**\n     * 让固定列的Grid和非固定列的Grid高度一致\n     * 解决由于行高变化导致的固定区和数据区的table错位的问题\n     * @param $tr       行tr的jQuery对象\n     * @param gridId    grid的Id\n     * @private\n     */\n    function _initGridAndLockedGridHeight($tr, gridId) {\n        var table = $tr.closest('table'),\n            $grid = $(\"#\" + gridId),\n            height = table.height() || 0;\n\n        $grid.find('.k-grid-content-locked').height(height);\n        $grid.find('.k-grid-content').height(height);\n    }\n\n    /**\n     * 列类型的处理，主要是编辑，提供扩展机制\n     * @param options\n     * @private\n     */\n    function _buildColumnEditor(options) {\n        var columns = options.columns,\n            gridId = options['gridId'];\n\n        each(columns, function (i, column) {\n            if (column.attributes && column.attributes.required) {\n                var span = \"<span class='i-input-required'>*</span>\";\n                if (typeof column.headerTemplate === \"string\") {\n                    column.headerTemplate = span + column.headerTemplate;\n\n                } else if (typeof column.headerTemplate === \"function\") {\n                    column.headerTemplate = span + column.headerTemplate.call(null, column);\n                } else {\n                    column.headerTemplate = \"<span class='i-input-required'>*</span>\" + column.title;\n                }\n            }\n\n            // 处理column的type和 校验\n            switch (column.editType) {\n                case 'textarea':\n                    column.editor = function (container, options) {\n\n                        var field = options.field,\n                            model = options.model,\n                            grid = $(\"#\" + gridId).data(\"kendoGrid\"),\n                            required = column.attributes.required;\n                        if (required === true || $.trim(required) === 'true') {\n                            required = true;\n                        }\n\n                        var input = $('<span class=\"k-widget k-dropdown i-popup-input k-header\">' +\n                            '<span class=\"k-dropdown-wrap\">' +\n                            '<input type=\"text\" readonly=\"readonly\" id=\"' + field + '\" value=\"' + model[field].replace(/[\\r\\n\\v\\f\\t ]+/gi, ' ') + '\"' + (required ? \"required\" : \"\") + '>' +\n                            '<span class=\"k-select\">' +\n                            '<span id=\"icon_' + field + '\" class=\"i-icon i-popup-textarea\"></span></span></span></span>');\n\n                        if (required) {\n                            container.addClass(\"i-invalid-cell\");\n                        }\n\n                        input.appendTo(container);\n\n                        $(\"#icon_\" + field).mousedown(function () {\n\n                            var $this = $(this);\n                            IPLAT.Popup.popupTextArea({\n                                // title: '数据回填',\n                                content: model[field],\n                                pele: $this,\n                                callback: function (val) {\n                                    grid.setCellValue(model, field, val);\n                                    this.data('kendoWindow').close();\n                                }\n                            })\n                        });\n                    };\n                    break;\n                case 'checkbox':\n                    column.editor = function (container, options) {\n                        var field = options.field;\n                        // var input = $(\"<input type='checkbox' data-bind='checked:\" + field + \"'>\");\n                        //  kendo.bind(input, options.model);\n\n                        var value = !!(options.model[field] * 1); // 0 false \"0\"\n                        var checked = value ? \"checked\" : \"\";\n                        var input = $(\"<input type='checkbox' \" + checked + \" >\");\n                        input.appendTo(container);\n\n                        input.on(\"click\", function (e) {\n                            var checked = this.checked;\n                            options.model.set(field, checked ? \"1\" : \"0\"); // 平台规范 boolean存数据库是\"1\", \"0\"\n                            input.prop(\"checked\", checked);\n                        });\n                    };\n                    break;\n\n                case 'radio':\n                    column.editor = function (container, options) {\n                        var field = options.field;\n                        // var input = $(\"<input type='radio' data-bind='checked:\" + field + \"'>\");\n                        // input.appendTo(container);\n                        // kendo.bind(input, options.model);\n                        var value = !!(options.model[field] * 1); // 0 false \"0\"\n                        var checked = value ? \"checked\" : \"\";\n                        var input = $(\"<input type='radio' \" + checked + \" >\");\n                        input.appendTo(container);\n\n                        input.on(\"click\", function (e) {\n                            var checked = this.checked;\n                            options.model.set(field, checked ? \"1\" : \"0\");\n                            input.prop(\"checked\", checked);\n                        });\n                    };\n                    break;\n\n                case 'date':\n                case 'datetime':\n                    // 注意column的format是个json的字符串,value 最终的格式以DATE_FORMAT为准\n                    var format = column.format || column.dateFormat;\n                    column.format = \"{0:\" + format + \"}\";\n\n                    if (_.isFunction(column[\"editor\"])) {\n                        break;\n                    }\n\n                    column.editor = function (container, options) {\n                        var input = $('<input />'),\n                            attributes = column.attributes || {};\n                        input.attr(\"name\", options.field);\n\n                        if (attributes.required === \"true\" || attributes.required === true) {\n                            input.prop(\"required\", \"true\");\n                            // 校验信息在td中不显示, 调整overflow，注意也影响了其他td\n                            container.addClass(\"i-invalid-cell\");\n                        }\n\n                        input.attr(\"id\", \"__colDate_\" + options.field);\n                        input.appendTo(container);\n\n                        var dateOptions = extend({\n                            dateId: \"__colDate_\" + options.field,\n                            format: column.dateFormat,\n                            parseFormats: column.parseFormats,\n                            role: column.editType\n                        }, column.dynamic);\n\n                        IPLAT.Date(dateOptions);\n                    };\n                    break;\n\n                case 'combo':\n                case 'dropdown':\n                    column.editor = function (container, options) {\n                        var input = $('<input />'),\n                            attributes = column.attributes || {};\n                        input.attr(\"name\", options.field);\n\n                        if (attributes.required === true || attributes === true) {\n                            input.prop(\"required\", \"true\");\n                            container.addClass(\"i-invalid-cell\");\n                        }\n\n                        input.appendTo(container);\n\n                        var template = column.itemTemplate || \"#=\" + column.textField + \"#\";\n\n                        var dropDownOption = extend({\n                            valuePrimitive: true,\n                            value: column.defaultValue,\n                            template: template,\n                            valueTemplate: template,\n                            dataTextField: column.textField,\n                            dataValueField: column.valueField,\n                            dataSource: column.values\n                        }, attributes);  // grid下拉列动态属性,autoWidth,optionLabel,filter等\n\n                        input.kendoDropDownList(dropDownOption);\n\n                    };\n                    break;\n                case 'multiSelect':\n                    column.editor = function (container, options) {\n                        var selectId = options.field;\n                        var tr = container.closest('tr');\n                        var select = $('<select id=\"' + selectId + '\"  style=\"width: 100%;\"></select>');\n\n                        var defaultValue = options.model[options.field] || column.defaultValue;\n                        select.appendTo(container);\n\n                        if (column.attributes.required === \"true\") {\n                            select.prop(\"required\", \"true\");\n                            container.addClass(\"i-invalid-cell\");\n                        }\n                        // 处理multiSelect固定列表格和非固定列表格高度不一致时候，固定列表格出现空白\n                        _initGridAndLockedGridHeight(tr, gridId);\n\n                        var template = column.itemTemplate || \"#=\" + column.textField + \"#\";\n\n                        select.kendoMultiSelect({\n                            valuePrimitive: true,\n                            value: defaultValue.split(','),\n                            template: template,\n                            valueTemplate: template,\n                            dataTextField: column.textField,\n                            dataValueField: column.valueField,\n                            dataSource: column.values,\n                            autoClose: true,\n                            change: function (e) {\n                                var list = e.sender.value();\n                                // 暂时关闭，等后面更好的办法处理编辑multiSelect造成的高度溢出问题\n                                // _initGridAndLockedGridHeight(tr,gridId);\n                                // $(\"[data-uid='\"+tr.data('uid')+\"']\").height(tr.height());\n\n                                if (list.length > 0) {\n                                    options.model.set(options.field, list.join(\",\"));\n                                    // options.model[options.field] = list;\n                                } else {\n                                    options.model[options.field] = \"\";\n                                }\n                            }\n                        })\n                    };\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n\n    /**\n     * 处理column中列头部信息\n     * @param options\n     * @private\n     */\n    function _buildColumnHeader(options) {\n        // TODO 没有考虑在批量复制的情况下，会导致header会被覆盖\n        var columns = options.columns,\n            headerAttributes = gridDefaults.headerAttributes || {};\n\n        // 处理column中headerColumn\n        each(columns, function (i, column) {\n            // 存在headerTemplate与headerAttributes不需要添加默认样式\n            if (!column.headerTemplate && !column.headerAttributes) {\n                column.headerAttributes = headerAttributes;\n            }\n        });\n    }\n\n    /**\n     * 实现grid头部的批量复制的逻辑\n     * @param gridInstance\n     * @private\n     */\n    function _initBatchCopy(gridInstance) {\n        var $element = gridInstance.element;\n\n        if (!$element) {\n            return;\n        }\n\n        // 批量复制操作\n        $element.on(\"click\", \"a.k-grid-copy\", function (e) {\n            var $this = $(this),\n                $data = $this.data(),\n                type = $data[\"type\"],\n                $th = $this.closest(\"th\"),\n                field = $th.data(\"field\"),\n                _column = gridInstance.findColumnByField(field);\n\n            switch (type) {\n                case 'C':\n                    IPLAT.ColumnCopy.input(gridInstance, $th, $this, {backFill: _column.backFill});\n                    break;\n                case 'textarea':\n                    IPLAT.Popup.popupTextArea({\n                        title: '批量复制',\n                        content: \"\",\n                        pele: $this,\n                        callback: function (val) {\n                            var _this = this;\n                            if ($.isFunction(_column.backFill)) {\n                                _column.backFill.call(gridInstance, {\n                                    value: val,\n                                    window: _this.data('kendoWindow'),\n                                    copy: true\n                                })\n                            } else {\n                                var rows = gridInstance.getCheckedRows(); // EFGrid列的批量赋值功能\n                                $.each(rows, function (index, item) {\n                                    gridInstance.setCellValue(item, field, val);\n                                });\n                                _this.data('kendoWindow').close();\n                            }\n                        }\n                    });\n                    break;\n                case 'date':\n                case 'datetime':\n                    var _dateOptions = extend({\n                        backFill: _column.backFill,\n                        format: _column.dateFormat,\n                        parseFormats: _column.parseFormats,\n                        role: _column.editType\n                    }, _column.dynamic);\n\n                    IPLAT.ColumnCopy.date(gridInstance, $th, $this, _dateOptions);\n                    break;\n                case 'combo':\n                case 'dropdown':\n                    var template = _column.itemTemplate || \"#=\" + _column.textField + \"#\";\n                    IPLAT.ColumnCopy.select(gridInstance, $th, $this, {\n                        valuePrimitive: true,\n                        value: _column.defaultValue,\n                        template: template,\n                        valueTemplate: template,\n                        dataTextField: _column.textField,\n                        dataValueField: _column.valueField,\n                        backFill: _column.backFill,\n                        dataSource: _column.values\n                    });\n                    break;\n                case 'multiSelect':\n                    var template = _column.itemTemplate || \"#=\" + _column.textField + \"#\";\n                    IPLAT.ColumnCopy.multiSelect(gridInstance, $th, $this, {\n                        valuePrimitive: true,\n                        value: _column.defaultValue,\n                        template: template,\n                        valueTemplate: template,\n                        dataTextField: _column.textField,\n                        dataValueField: _column.valueField,\n                        dataSource: _column.values,\n                        backFill: _column.backFill,\n                        autoClose: true\n                    });\n                    break;\n                case 'popup':\n                    // popupType由COLUMN变成INPUT,textElement为当前title所在的th标签,column中backFill复用\n                    var options = _column.popupOptions;\n                    options.popupType = options.popupType.replace(\"COLUMN\", \"INPUT\");\n                    var popupOptions = extend({\n                        textElement: $th,\n                        copy: true,\n                        init: _column.init,\n                        query: _column.query,\n                        backFill: _column.backFill,\n                        backFillGrid: gridInstance\n                    }, options);\n                    IPLAT.Popup.popupGrid(popupOptions);\n                    break;\n                default:\n                    break;\n            }\n\n            return false;\n        });\n    }\n\n    /**\n     * Grid数据源的初始构建\n     *\n     * @param {Object} options grid的配置\n     * @return {Object} 返回初始的dataSource\n     * @private\n     */\n    function _initDataSource(options) {\n        var blockId = options.blockId,\n            gridId = options.gridId,\n            finalSumType = options.finalSumType, // page total all\n            dataSource,\n            resultBlock,\n            kendoGrid;\n\n        // response的数据处理顺序: requestEnd--> parse--> errors--> total--> data\n        dataSource = {\n            batch: true, // 一次请求提交多条数据\n            serverFiltering: true, // 服务端过滤\n            serverPaging: true, // 服务端分页\n            serverSorting: true, // 服务端排序\n            schema: {\n                // parse: function (response) {\n                //     var that = this; // kendo.data.DataReader\n                //     ajaxEi = EiInfo.parseJSONObject(response);\n                //     return response;\n                // },\n\n                errors: function (response) {\n                    // response是EiInfo的JSON 首先执行errors逻辑\n                    // HTTP 200，对结果进行判断要不要触发error处理。 status为 负数 或者 正数时， 不强制检测result block\n                    if (ajaxEi.getStatus() == 0 && !resultBlock) {\n                        // 查询时不能缺少数据块 强制要求update insert delete的status设置为正数\n                        return \"表格[\" + blockId + \"]操作失败，原因[缺失数据块]\";\n                    }\n                    return null;\n                },\n\n                total: function (response) {\n                    var count = resultBlock.get(EiConstant.COUNT);\n                    var limit = resultBlock.get(EiConstant.LIMIT);\n\n                    // Grid对象已经生成\n                    var kendoGrid = $(\"#\" + gridId).data('kendoGrid'),\n                        // 后台count查询标记，值为String类型\n                        showCount = resultBlock.get(EiConstant.SHOW_COUNT) === \"true\";\n\n                    if (showCount && $.isNumeric(count) && parseInt(count) >= 0) {\n                        // 区分showCount时，count结果为0 和 非showCount时的，默认count 0\n                        // 后台进行了Count\n                        this.isOver = false;\n                    } else {\n                        var rows = ajaxEi.getBlock(blockId).getMappedRows();\n                        var dataSource = kendoGrid.dataSource;\n                        var pageSize = limit || dataSource.pageSize();\n                        var page = dataSource.page();\n\n                        // 返回数据小于每页数量，表明后端数据获取结束\n                        if (rows.length < pageSize) {\n                            count = ( page - 1 ) * pageSize + rows.length;\n                            this.count = count;\n                            this.isOver = true;\n                        } else {\n                            this.isOver = false;\n                            // 提高总数数量，能够继续获取数据\n                            count = (page + 1) * pageSize;\n                        }\n                    }\n\n                    return count;\n                },\n\n                data: function (response) {\n                    // var that = this; // kendo.data.DataReader\n\n                    // insert的时候需要新增的数据行的Id，update, delete不做要求，返回正常的EiInfo即可\n                    ajaxEi = EiInfo.parseJSONObject(response);\n                    var kendoGrid = $(\"#\" + gridId).data(\"kendoGrid\"),\n                        pager = kendoGrid.pager;\n\n                    // 将每次操作返回的EiInfo设置到grid对象中，注意ajaxEi不是Grid options中eiInfo\n                    kendoGrid.eiInfo = ajaxEi;\n                    kendoGrid.eiBlock = ajaxEi.getBlock(blockId);\n\n                    IPLAT.ajaxEi = ajaxEi;\n\n                    if (this.isOver) {\n                        if (pager) {\n                            pager.dataSource._total = this.count;\n                        }\n                    }\n\n                    var rows = ajaxEi.getBlock(blockId).getMappedRows();\n                    var pageSize = resultBlock.get(EiConstant.LIMIT) || kendoGrid.dataSource.pageSize();\n                    if (pager) {\n                        pager.dataSource._pageSize = pageSize;\n                    }\n                    return rows.slice(0, pageSize);\n                }\n            },\n\n            error: function (e) {\n                // 两种错误: 1.数据请求异常（ajax e.xhr）\n                //          2.业务异常(e.errors)\n                var kendoGrid = $(\"#\" + gridId).data(\"kendoGrid\"),\n                    errors = e.errors;\n\n                if (kendoGrid._action === DELETE_ACTION) {\n                    // 恢复原来删除的数据，并勾选\n                    kendoGrid.cancelChanges();\n                    kendoGrid.setCheckedRows(kendoGrid._deleteRows);\n                }\n\n                if (!e.errors) {\n                    // 格式化平台的异常信息 获得msgObj\n                    errors = IPLAT.Util.formatErrorMessage((e.xhr && e.xhr.responseText) || \"\");\n                    e.errors = errors;\n                }\n\n                if (!kendoGrid.trigger(ON_FAIL + NS, {errorMsg: e.errors, xhr: e.xhr})) {\n                    NotificationUtil(errors, Notification.ERROR);\n                }\n            },\n\n            requestEnd: function (e) {\n                // e => sender(DataSource) response(JSON) type(\"read\", \"create\" ...)\n\n                var that = this,\n                    type = e.type,\n                    response = e.response; // EiInfoJSON\n\n                ajaxEi = null;\n\n                try {\n                    kendoGrid = $(\"#\" + gridId).data(\"kendoGrid\");\n\n                    // 失败场景下 e.type 为 undefined\n                    kendoGrid._action = type || kendoGrid._action;\n\n                    // 服务没有返回EiInfo格式的JSON时，response是undefined；\n                    // 将会导致ajax调用的error，从而触发DataSource的error处理函数\n                    // 可能产生JSON parse Error\n                    ajaxEi = EiInfo.parseJSONObject(response);\n\n                    // 返回的EiInfo中可能没有Grid需要的EiBlock\n                    // 在数据预处理的errors函数中返回错误信息，从而触发DataSource的error处理函数\n                    resultBlock = ajaxEi.getBlock(blockId);\n\n                    var status = ajaxEi.getStatus();\n\n                    if (status === 0) {\n                        if (!kendoGrid.trigger(ON_SUCCESS + NS, {eiInfo: ajaxEi, type: type})) {\n                            NotificationUtil(ajaxEi, Notification.SUCCESS);\n                            kendoGrid.unCheckAllRows();\n                        }\n                    } else if (status > 0) {\n                        // 修改，删除的场景返回的status > 0\n                        if (!kendoGrid.trigger(ON_SUCCESS + NS, {eiInfo: ajaxEi, type: type})) {\n                            NotificationUtil(ajaxEi, Notification.WARNING);\n                            kendoGrid.unCheckAllRows();\n                        }\n                    } else {\n                        // 注意：trigger error 将导致Grid的操作复原\n                        ajaxEi.set(EiConstant.SHOW_DETAIL_MSG, true);\n                        e.errors = ajaxEi;\n\n                        if (isAvailable(ajaxEi.get(\"redirect\"))) {\n                            // 登录过期后的重定向 需要判断弹出iframe的场景\n                            var topWindow = IPLAT.getParentWindow() || window;\n                            topWindow.location.href = ajaxEi.get(\"redirect\");\n                        } else {\n                            that.trigger(\"error\", e);\n                        }\n                    }\n                } catch (error) {\n                    // 服务没有返回EiInfo格式的JSON，会自动触发error事件\n                    // e.errors = \"服务端没有返回正确的EiInfo数据\";\n                    // e.errors = \"表格[\" + blockId + \"]数据失败，原因[\" + ajaxEi.getMsg() + \"]\";\n                    // that.trigger(\"error\", e);\n                }\n            }\n        };\n\n        if (finalSumType) { // 小计 总计的判断\n            dataSource.serverAggregates = true; // 服务端总计\n            dataSource.aggregate = options.aggregate;\n\n            dataSource.schema.aggregates = function (response) {\n                ajaxEi = EiInfo.parseJSONObject(response);\n                var rows = ajaxEi.getBlock(blockId).getMappedRows(),\n                    pageSum = 0,\n                    totalSum = ajaxEi.get(blockId + \"-\" + EiConstant.COLUMN_TOTAL_SUM) || {},\n                    aggregates = {};\n\n                // {\"a\":1,b:2} ==> {\"a\": {sum: 1}, b:{sum:2}}\n                each(options.aggregate, function (i, value) {\n                    var field = value.field;\n                    if (finalSumType === \"all\" || finalSumType === \"page\") {\n                        pageSum = 0;\n                        each(rows, function (j, row) {\n                            pageSum += (parseFloat(row[field]) || 0); // 小计\n                        });\n                    }\n\n                    var sum = totalSum[field] || \"\",\n                        page = pageSum.toFixed(2);\n\n                    if (value.format) {\n                        sum = kendo.format(value.format, sum);\n                        page = kendo.format(value.format, pageSum);\n                    }\n\n                    aggregates[field] = {\n                        sum: sum, // 服务端总计\n                        page: page,\n                        sumType: finalSumType\n                    };\n                });\n\n                return aggregates;\n            };\n        }\n\n        return dataSource;\n    }\n\n    /**\n     * 解析简化后的options，合并为kendo的格式\n     * @param options\n     * @private\n     */\n    function _buildDataSource(options) {\n\n        var dataSourceDefaults = _initDataSource(options),\n            dataSourceSettings = options.dataSource,\n            dataSource = {};\n\n        if (!options.strict) {\n            // 使用IPLAT封装后的配置，混合使用kendo的配置\n            var url = options.url;\n\n            if (url) {\n                // 配置transport\n                extend(true, dataSource, dataSourceDefaults, {\n                    transport: TransportFactory.getTransport(\"REST\", options)\n                    // transport: TransportFactory.getTransport(\"EI\", options)\n                }, dataSourceSettings);\n\n            } else {\n                extend(true, dataSource, dataSourceDefaults, dataSourceSettings);\n            }\n        } else {\n            // 严格模式，完全遵循kendo的格式配置dataSource\n            dataSource = dataSourceSettings;\n        }\n        // delete options.dataSource;\n\n        return dataSource;\n    }\n\n    /**\n     * EFGrid的options的封装, 返回符合kendoGrid格式的options\n     * @param options EFGrid的options\n     * @return {Object} 符合kendoGrid格式的options\n     * @private\n     */\n    function _beforeInit(options) {\n        var blockId = options.blockId,\n            eiInfo = options.eiInfo,\n            configId = options.configId, // 解决同一个页面弹出Grid的blockId和原Grid blockId重复的问题\n            gridConfig, // 页面JS中的原生配置\n            dataSource;\n\n        options.tagId = options.tagId || (blockId + \"-\" + kendo.guid());\n        options.eiBlock = eiInfo.getBlock(blockId);\n        options.dynamic = options.dynamic || {}; // 兼容js中直接调用IPLAT.Grid的写法\n\n        options = extend(true, {}, gridDefaults, options); // 复制一份defaults\n\n        if (options.eiBlock) {\n            // IPLATUI.EFGrid中的配置\n            gridConfig = options.gridConfig = extend({}, IPLATUI.EFGrid[configId || blockId]);\n\n            // 构造列信息\n            _buildPersonalColumns(options);\n\n            // 构造数据源\n            dataSource = _buildDataSource(options);\n\n            // 构造翻页条\n            IPLAT.EFGrid._initPager(options);\n\n            // 构造操作栏\n            options.toolbarConfig = IPLAT.EFGrid._initToolbar(options);\n\n            if (IPLAT.EFGrid._hasToolBar(options)) {\n                // 确定toolbarConfig的配置后， 判断是否渲染 toolbar\n                // 定制Grid上Toolbar的操作\n                extend(true, options, {\n                    toolbar: [{\n                        template: kendo.template(\"<div id='ef_grid_toolbar_\" + blockId +\n                            \"' class='grid_toolbar' ></div>\")\n                    }]\n                });\n            }\n\n            // gridConfig.pageable = false， 在此可以覆盖掉 默认的翻页配置\n            return extend(true, {dataSource: dataSource}, options, gridConfig);\n\n        } else {\n            // 初始化时必须有Meta信息\n            NotificationUtil(\"表格[\" + blockId + \"]初始化失败，原因[缺失数据块]\", Notification.ERROR);\n            return false;\n        }\n    }\n\n    /**\n     * kendoGrid渲染结束后的处理\n     * @param options\n     * @param gridInstance\n     * @private\n     */\n    function _afterInit(options, gridInstance) {\n        var autoFit = options.autoFit, // 是否开启Grid中column宽度根据内容去自适应\n            $grid = gridInstance.element;\n\n        if (IPLAT.isEiInfo(options.personalInfo)) {\n            options.personalWindow = IPLAT.EFGrid._buildPersonal(options, gridInstance);\n        }\n\n        gridInstance._checkedRows = [];\n\n        // checkbox批量选择处理\n        var _checkToEdit = function () {\n            var timer = null;\n\n            // 单击数据行事件处理\n            $grid.on(\"click.IPLAT\", \"tr[role=row]\", function (e) {\n                // fixed 阻止事件冒泡，防止主从表中事件都触发\n                IPLAT.Util.stopPropagation(e);\n\n                timer && clearTimeout(timer);\n                if (e.detail === 2) // 双击 兼容 Gecko 的浏览器\n                    return;\n\n                // currentTarget = this --> tr\n                // target 真正触发的事件的dom节点\n                var $target = $(e.target) || $(e.srcElement),\n                    $tr = $(this),\n                    model = gridInstance.dataItem($tr),\n                    rowNo = $tr.index(); // jQuery的方法，获取tr在table中的行号\n\n                timer = setTimeout(function () {\n                    var $td = $target.closest('td');\n                    if (!$td.is(\"td\") || $td.is(\"td.k-edit-cell\")) {\n                        // 非编辑状态才会触发，TODO: 按钮，url处理 改造成fake\n                        return;\n                    }\n\n                    if (options.checkMode.indexOf(\"row\") >= 0) {\n                        // 单击行也能check, 触发onCheckRow事件\n                        gridInstance.setCheckedRows(rowNo)\n                    }\n\n                    var index = gridInstance.cellIndex($td),\n                        columnField = \"\";\n                    if (gridInstance.columns[index]) {\n                        columnField = gridInstance.columns[index].field;\n                    }\n\n                    gridInstance.trigger(ON_CELLCLICK + NS, {\n                        event: e,\n                        td: $td,\n                        field: columnField,\n                        model: model,\n                        row: rowNo\n                    });\n\n                    var $TRs = gridInstance.element.find(\"tr[data-uid=\" + model.uid + \"]\");\n\n                    gridInstance.trigger(ON_ROWCLICK + NS, {\n                        event: e,\n                        tr: $TRs,\n                        model: model,\n                        row: rowNo\n                    });\n\n                }, IPLATUI.Config.Timer.dblclick);\n\n\n            });\n\n            // 双击事件处理\n            $grid.on(\"dblclick.IPLAT\", \"tr[role=row]\", function (e) {\n                // fixed 阻止事件冒泡，防止主从表中事件都触发\n                IPLAT.Util.stopPropagation(e);\n\n                timer && clearTimeout(timer);\n\n                var $target = $(e.target) || $(e.srcElement),\n                    $tr = $(this),\n                    model = gridInstance.dataItem($tr),\n                    $td = $target.closest('td'),\n                    rowNo = $tr.index(); // jQuery的方法，获取tr在table中的行号\n\n\n                if (!$td.is(\"td\") || $td.is(\"td.k-edit-cell\")) {\n                    // 非编辑状态才会触发，TODO: 按钮，url处理 改造成fake\n                    return;\n                }\n\n                if (options.checkMode.indexOf(\"row\") >= 0) {\n                    // 单击行也能check, 触发onCheckRow事件\n                    gridInstance.setCheckedRows(rowNo)\n                }\n\n                var $TRs = gridInstance.element.find(\"tr[data-uid=\" + model.uid + \"]\");\n\n                gridInstance.trigger(ON_ROWDBLCLICK + NS, {\n                    event: e,\n                    tr: $TRs,\n                    model: model,\n                    row: rowNo\n                });\n            });\n\n            // checkbox 全选\n            $grid.on(\"click.IPLAT\", \"input.check-all\", function (e) {\n                // fixed 阻止事件冒泡，防止主从表中事件都触发\n                IPLAT.Util.stopPropagation(e);\n\n                var target = e.target || e.srcElement,\n                    checked = target.checked;\n\n                gridInstance.trigger(ON_CHECK_ALLROWS + NS, {\n                    event: e,\n                    checked: checked\n                });\n\n                $grid.find(\"input.check-one\").each(function (index, element) {\n                    var $element = $(element);\n                    element.checked = checked;  // 每一行的列头checkbox状态重置\n                    $element.trigger(\"check-one\", [true]);\n                });\n            });\n\n            // 单个checkbox 处理\n            $grid.on(\"click.IPLAT check-one\", \"input.check-one\", function (e, fake) {\n                // fixed 阻止事件冒泡，防止在主从表中事件都触发\n                IPLAT.Util.stopPropagation(e);\n\n                var that = this,\n                    checked = that.checked,\n                    $element = $(that),\n                    uid = $element.val(),\n                    checkedIndex = _.indexOf(gridInstance._checkedRows, uid);\n\n                // TODO: 全选的状态受到单选的影响, 需要自定义三种状态的checkbox\n\n                if (options.checkMode.indexOf(\"single\") >= 0) {\n                    // 只能勾选一行\n                    each(gridInstance._checkedRows, function (index, dataUid) {\n                        if (dataUid !== uid) {\n                            var $checkOne = $grid.find(\"input[value=\" + dataUid + \"]\");\n                            $checkOne[0].checked = false;\n                            $checkOne.trigger(\"check-one\", [true]);\n                        }\n                    });\n                }\n\n\n                var $contentRow = $grid.find(\".k-grid-content tr[data-uid=\" + uid + \"]\");\n\n                if (checked) { // 勾选行\n                    $element.closest(\"tr\").addClass(\"i-state-selected k-state-selected\");\n                    $contentRow.addClass(\"i-state-selected k-state-selected\");\n                    if (checkedIndex < 0) {\n                        gridInstance._checkedRows.push(uid);\n                    }\n                } else { // 取消勾选行\n                    $element.closest(\"tr\").removeClass(\"i-state-selected k-state-selected\");\n                    $contentRow.removeClass(\"i-state-selected k-state-selected\");\n                    if (checkedIndex >= 0) {\n                        gridInstance._checkedRows.splice(checkedIndex, 1);\n                    }\n                }\n\n                // shift区域勾选\n                if (e.shiftKey) {\n                    var checkArray = $grid.find(\"input.check-one\"),\n                        startUid,\n                        $start,\n                        startIndex,\n                        endIndex,\n                        minIndex,\n                        maxIndex;\n\n\n                    if (gridInstance._checkedRows.length < 2) {\n                        startIndex = 0;\n                    } else {\n                        startUid = gridInstance._checkedRows[gridInstance._checkedRows.length - 2];\n                        $start = $grid.find(\"input[value=\" + startUid + \"]\");\n                        startIndex = _.indexOf(checkArray, $start[0]);\n                    }\n\n                    endIndex = _.indexOf(checkArray, $element[0]);\n\n                    minIndex = Math.min(startIndex, endIndex);\n                    maxIndex = Math.max(startIndex, endIndex);\n\n                    for (var i = minIndex; i < maxIndex; i++) {\n                        uid = checkArray.eq(i).val();\n                        checkedIndex = _.indexOf(gridInstance._checkedRows, uid);\n\n                        if (checkedIndex < 0) {\n                            checkArray[i].checked = true;\n                            checkArray.eq(i).trigger(\"check-one\", [true]);\n                        }\n                    }\n                }\n\n                var $tr = $element.closest(\"tr\"),\n                    model = gridInstance.dataItem($tr),\n                    rowNo = $tr.index(),\n                    $TRs = gridInstance.element.find(\"tr[data-uid=\" + model.uid + \"]\");\n\n                gridInstance.trigger(ON_CHECKROW + NS, {\n                    fake: fake, // 不是真正的点击，通过trigger得到的fake事件\n                    event: e,\n                    checked: checked,\n                    model: model,\n                    tr: $TRs,\n                    row: rowNo\n                });\n            });\n        };\n\n        if (IPLAT.EFGrid._hasToolBar(options)) {\n            IPLAT.EFGrid._createToolBar(options, gridInstance);\n        }\n\n        _checkToEdit();\n\n        // 翻页时，重置勾选的行\n        gridInstance.bind(\"page\", function () {\n            gridInstance._checkedRows = [];\n        });\n\n        // 翻页时，取消时，全选checkbox状态重置\n        gridInstance.bind(\"dataBound\", function (e) {\n            var checkAll = $(\"#\" + options.gridId).find(\".check-all\");\n            if (checkAll.length > 0) {\n                checkAll[0].checked = false;\n            }\n\n            // 恢复选中的状态\n            gridInstance.refreshCheckRows();\n\n            // 从表的checkbox居中\n            $(\"input[type=checkbox]\").closest(\"td\").css('text-align', 'center');\n\n            // 调整column的宽度\n            // iplatWidth=true的column通常来源于block中meta,EFColumn.tag,JS中EFGrid.columns,checkbox,rowNo\n            // autoFitFlag保证autoFit只在页面加载时触发,点击查询按钮不会触发\n            if (autoFitFlag) {\n                var columns = gridInstance.options.columns;\n                if (!!autoFit) {\n                    each(columns, function (index, column) {\n                        if (!column['iplatWidth']) {\n                            gridInstance.autoFitColumn(index);\n                        }\n                    });\n                }\n                autoFitFlag = false;\n            }\n\n            // TODO scrollable 默认是显示垂直方向的滚动条的，grid高度足够时避免出现\n            // http://docs.telerik.com/kendo-ui/controls/data-management/grid/how-to/Layout/hide-scrollbar-when-not-needed\n            var gridWrapper = e.sender.wrapper;\n            var gridDataTable = e.sender.table;\n            var gridDataArea = gridDataTable.closest(\".k-grid-content\");\n\n            gridWrapper.toggleClass(\"no-scrollbar\", gridDataTable[0].offsetHeight <= gridDataArea[0].offsetHeight);\n\n            // FIXME 只对column进行重绘，避免每次都重绘整个grid Tab\n            setTimeout(function () { // 滚动条 行高 重绘\n                gridInstance.resize(true);\n            }, 300);\n\n            IPLAT.EFGrid._refreshPagerCount(gridInstance);\n\n            // 有数据时去除header底部border\n            _handleGridHeaderBorder(gridInstance);\n        });\n\n        if (!options.showCount) { // 服务器没有返回总数\n            // 防止pager对象不存在\n            if (gridInstance.pager) {\n                var $pager = gridInstance.pager.element;\n                $pager.addClass(\"no-show-count\");\n            }\n        }\n\n        _initBatchCopy(gridInstance);\n\n        // 按Tab键，切换当前编辑的单元格\n        $grid.keydown(function (event) {\n            var checkedRows = $grid.find(\".k-grid-content tr.i-state-selected\");\n            var lockedRows = $grid.find(\".k-grid-content-locked tr.i-state-selected\");\n            var cells = [];\n            var rowLength = 0;\n\n            each(checkedRows, function (i, item) {\n                if (lockedRows.length === 0) {\n                    rowLength = item.children.length;\n                } else {\n                    rowLength = lockedRows[i].children.length + item.children.length;\n\n                    each(lockedRows[i].children, function () {\n                        if ($(this).find(\"[type='checkbox']\").length > 0) {\n                            return rowLength = rowLength - 1;\n                        }\n                        cells.push(this)\n                    });\n                }\n\n                each(item.children, function () {\n                    cells.push(this);\n                });\n            });\n\n            var editingCell = $grid.find(\"td[data-role='editable']\");\n            var index = _.indexOf(cells, editingCell[0]);\n\n            switch (event.keyCode) {\n                case 9 :\n                    // Tab切换前先进行校验\n                    if (!$(editingCell.find(\"input\")).kendoInputValidate().valid) {\n                        var validator = $(\"#\" + __eiInfo.get(\"efFormEname\")).kendoValidator().data(\"kendoValidator\");\n                        validator.validateInput($(editingCell.find(\"input\")));\n                        return false;\n                    }\n                    event.preventDefault();\n                    if (event.shiftKey && index - 1 >= 0) {\n                        editingCell.find(\"input\").blur();\n                        gridInstance.editCell($(cells[index - 1]));\n                        break;\n                    }\n                    if (index + 1 < cells.length) {\n                        var columns = gridInstance.columns;\n                        for (; index + 1 < cells.length;) {\n                            if (columns[1 + (index + 1) % (columns.length - 1)].readonly &&\n                                // 新增时Tab切换不跳过readonly列\n                                !gridInstance.dataItem(editingCell.closest(\"tr\")).isNew()) {\n                                index = index + 1;\n                            } else\n                                break;\n                        }\n                        editingCell.find(\"input\").blur();\n                        gridInstance.editCell($(cells[index + 1]));\n                    }\n                    break;\n                case 38:\n                    event.preventDefault();\n                    if (index - rowLength >= 0) {\n                        editingCell.find(\"input\").blur();\n                        gridInstance.editCell($(cells[index - rowLength]));\n                    }\n                    break;\n                case 40:\n                    event.preventDefault();\n                    if (index !== -1 && index + rowLength < cells.length) {\n                        editingCell.find(\"input\").blur();\n                        gridInstance.editCell($(cells[index + rowLength]));\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    /**\n     * EFGrid组件构造\n     *\n     * @param options\n     * @return {*}\n     */\n    IPLAT.xGrid = function (options) {\n        var gridInstance = null,\n            kendoGridOptions = _beforeInit(options);\n\n        if (kendoGridOptions) {\n            gridInstance = $(\"#\" + options.gridId).kendoGrid(kendoGridOptions).data(\"kendoGrid\");\n\n            _afterInit(kendoGridOptions, gridInstance);\n\n            if (kendoGridOptions.autoBind === false) {\n                var blockId = gridInstance.getBlockId();\n                var rowsLength = options.eiInfo.getBlock(blockId).getRows().length;\n                if (rowsLength > 0) {\n                    gridInstance.setEiInfo(options.eiInfo);\n                }\n            }\n\n            // 初始无数据时header底部的border处理\n            _handleGridHeaderBorder(gridInstance);\n\n            // 底部border\n            _handleGridBottomBorder(gridInstance);\n\n            gridInstance.bind(SAVECHANGES, function (e) {\n                var grid = e.sender;\n\n                if (!grid.isValid()) { // 保存之前的校验\n                    e.preventDefault();\n                }\n\n                if (isFunction(kendoGridOptions[ON_SAVE])) {\n                    kendoGridOptions[ON_SAVE].call(grid, e);\n                }\n            });\n\n            gridInstance.bind(ON_CANCEL + NS, kendoGridOptions[ON_CANCEL]);\n            gridInstance.bind(ON_DELETE + NS, kendoGridOptions[ON_DELETE]);\n\n            gridInstance.bind(ON_SUCCESS + NS, kendoGridOptions[ON_SUCCESS]);\n            gridInstance.bind(ON_FAIL + NS, kendoGridOptions[ON_FAIL]);\n\n            gridInstance.bind(BEFORE_ADD + NS, kendoGridOptions[BEFORE_ADD]);\n            gridInstance.bind(ON_ADD + NS, kendoGridOptions[ON_ADD]);\n            gridInstance.bind(AFTER_ADD + NS, kendoGridOptions[AFTER_ADD]);\n\n            gridInstance.bind(\"dataBinding\", function (e) {\n                if (e.action === \"add\") {\n                    if (gridInstance.trigger(ON_ADD + NS, e)) {\n                        e.preventDefault(); // 不再触发AFTER_ADD\n                    }\n                }\n            });\n\n            gridInstance.bind(BEFORE_EDIT + NS, kendoGridOptions[BEFORE_EDIT]);\n            gridInstance.bind(AFTER_EDIT + NS, kendoGridOptions[AFTER_EDIT]);\n\n            gridInstance.bind(ON_CHECKROW + NS, kendoGridOptions[ON_CHECKROW]);\n            gridInstance.bind(ON_CHECK_ALLROWS + NS, kendoGridOptions[ON_CHECK_ALLROWS]);\n            gridInstance.bind(ON_CELLCLICK + NS, kendoGridOptions[ON_CELLCLICK]);\n            gridInstance.bind(ON_ROWCLICK + NS, kendoGridOptions[ON_ROWCLICK]);\n            gridInstance.bind(ON_ROWDBLCLICK + NS, kendoGridOptions[ON_ROWDBLCLICK]);\n\n            // 自定义事件的处理\n            if (isFunction(kendoGridOptions.loadComplete)) {\n                kendoGridOptions.loadComplete(gridInstance);\n            }\n\n            // 处理grid hover事件\n            gridInstance.element.on(\"mouseover\", \"tr\", function (e) {\n                var _uid = $(this).data(\"uid\");\n                $(\"tr[data-uid='\" + _uid + \"']\").addClass(\"k-td-hover\");\n            });\n\n            gridInstance.element.on(\"mouseout\", \"tr\", function (e) {\n                var _uid = $(this).data(\"uid\");\n                $(\"tr[data-uid='\" + _uid + \"']\").removeClass(\"k-td-hover\");\n            });\n\n\n            var _tooltip = _.throttle(function (td, msg, type) {\n                var $this = $(td),\n                    parent = $this.closest(\"tr\"),\n                    width = $this.width(),\n                    text = $this.text().trim(),\n                    errorMsg = (_.isString(msg) && msg) || text,\n                    errorMessageText = \"<span class='k-icon k-i-warning'></span>&nbsp;&nbsp;\" + htmlDecode(errorMsg),\n                    fontSize = $this.css('font-size'),\n                    $otherTooltips = $(\"[data-role='tooltip']\"),\n                    fontWidth = IPLAT.getCurrentStrWidth(text, fontSize),\n                    toolTipOptions = {\n                        showAfter: 0,\n                        animation: false,\n                        hide: function () {\n                            // 清除tooltip\n                            $this.removeAttr('data-role');\n                            this.destroy();\n                        }\n                    };\n\n                // 处理页面上可能存在的tooltip, 让其消失\n                each($otherTooltips, function (i, tooltip) {\n                    var kendoToolTip = $(tooltip).data('kendoTooltip');\n\n                    // 校验出错的tootip的hide 不在此处理，参考iplat.ui.kendo.validator.js 中 showValidateMsg函数\n                    var inValid = $(tooltip).is(\"input.k-invalid\");\n\n                    if (kendoToolTip instanceof kendo.ui.Tooltip && !inValid) {\n                        kendoToolTip.hide();\n                    }\n                });\n\n\n                if (type === 'error' && parent.hasClass('i-state-selected')) { // 校验出错时的tooltip\n\n                    extend(toolTipOptions, {width: DEFAULT_ERROR_TOOLTIP_WIDTH, content: errorMessageText});\n\n                    var toolTip = $this.kendoTooltip(toolTipOptions).data(\"kendoTooltip\");\n                    toolTip.show();\n\n                    var $toolTip = toolTip.popup.element;\n                    // 临时使用 css 重置样式，后续样式调整\n                    $toolTip.css('background', INVALID_COLOR);\n                    $toolTip.find('.k-callout-n').css('border-bottom-color', INVALID_COLOR);\n\n                } else {\n                    // 单元格文字过长的tooltip\n                    // tr,td节点没有被选中,出现tooltip\n                    // 选中内容，就不出现tooltip\n                    // 主从表中，主表包含子表的td也不展示\n                    if (!($this.hasClass('k-state-selected') || parent.hasClass('i-state-selected') || $this.hasClass('k-detail-cell'))) {\n                        if (fontWidth >= width) {\n                            if (fontWidth > DEFAULT_TOOLTIP_WIDTH) {\n                                $.extend(toolTipOptions, {width: DEFAULT_TOOLTIP_WIDTH});\n                            }\n                            $.extend(toolTipOptions, {content: text});\n\n                            // 每次tooltip都是重新渲染\n                            var longTextTooltip = $this.kendoTooltip(toolTipOptions).data(\"kendoTooltip\");\n                            longTextTooltip.show();\n                        }\n                    }\n                }\n            }, 400);\n\n            // tooltip处理Grid中td展示信息过长\n            gridInstance.element.on(\"mouseover\", \"td\", function (e) {\n                var $this = $(this);\n                var errorMsg = $.trim($this.data(TD_ERROR_MSG)) || '';\n                if (errorMsg) {\n                    _tooltip(this, errorMsg, 'error');\n                } else {\n                    _tooltip(this);\n                }\n            });\n\n            _amazingHandler(gridInstance);\n        }\n\n        // 处理小计总计，默认无数据时模板出现undefined的问题, 无数据不触发dataBound事件\n        if (gridInstance.getDataItems().length === 0 && gridInstance.options.finalSumType) {\n            var $sum = gridInstance.footer.find(\".sum-undefined\");\n            $sum.find(\".i-sum-page\").html(0);\n            $sum.removeClass(\"sum-undefined\").addClass(\"sum-\" + options.finalSumType);\n        }\n\n        return gridInstance;\n    };\n\n\n    extend(true, IPLAT, {\n        Grid: IPLAT.xGrid,\n        Transport: {\n            AbstractTransport: AbstractTransport,\n            EiServiceTransport: EiServiceTransport,\n            RestfulTransport: RestfulTransport,\n            TransportFactory: TransportFactory\n        }\n    });\n\n\n    /**\n     * 回填的EiBlock的列和当前Grid列的对应关系Map\n     *\n     * 理论上回填的EiBlock的列应该包含当前Grid的所有列，\n     * 回填的EiBlock的不包含Grid的列时，pos为-1\n     *\n     * @param inBlock\n     */\n    kendo.ui.Grid.fn.getColumnMap = function (inBlock) {\n        var that = this,\n            eiBlock = that.eiBlock || that.options.eiBlock;\n\n        var metas = eiBlock.getBlockMeta().getMetas();\n\n        var columns = inBlock.getBlockMeta().getMetas();\n\n        var indexMap = {};\n\n        // 维护Grid列和待赋值的Block的列的key的关系\n        for (var key in metas) {\n            var column = columns[key] || {pos: -1};\n            indexMap[key] = column[\"pos\"];\n        }\n\n        return indexMap;\n    };\n\n    /**\n     * 设置单行的数据，如果Grid已有的 index 数据行无效，就在Grid顶部添加新行\n     *\n     * @param {Number} index     grid的行号\n     * @param {kendo.data.Model} sourceModel sourceModel应该包含当前Grid的所有数据列\n     */\n    kendo.ui.Grid.fn.setRow = function (index, sourceModel) {\n      var that = this,\n          model = that.dataSource.at(index),\n          idField = that.dataSource.options.schema.model.id, // 主键field name\n          fields = that.dataSource.options.schema.model.fields,\n          modelJSONObj = typeof sourceModel.toJSON === 'function' ?\n              sourceModel.toJSON() : sourceModel, // 变为JSON格式的Object对象\n\n          destModel = new kendo.data.Model(modelJSONObj);\n\n          destModel.dirty = true;\n          destModel.fields = fields;\n\n        // TODO 使用Model.define\n        // var BizModel = kendo.data.Model.define({\n        //     id: idField,\n        //     fields: fields\n        // });\n\n      if (model) {\n        destModel[\"_events\"] = model[\"_events\"]; // model -> change -> dataSource -> change -> grid\n        destModel.id = model[idField]; // 防止id _defaultId一致，把destModel误判成isNew\n        destModel[idField] = model[idField]; // 原有数据行的主键不能被set修改\n        that.dataSource.data()[index] = destModel;\n        destModel.set(\"uid\", model.uid); //保持原有的uid， 保证checked列表不变化\n      } else {\n        this.dataSource.insert(0, destModel);\n      }\n    };\n\n\n    /**\n     * 将EiInfo中的EiBlock数据追加到Grid中\n     * EiInfo中EiBlock的列信息和Grid的EiBlock的列信息不一致\n     *\n     * @param inInfo    待添加的EiInfo\n     * @param bottom    默认在Grid的顶部添加行，为true时 在Grid的底部添加行\n     * @param checked   默认勾选新增的行, 为false时不勾选\n     */\n    kendo.ui.Grid.fn.addEiInfo = function (inInfo, bottom, checked) {\n        var that = this,\n            blockId = that.getBlockId();\n\n        var inBlock = inInfo.getBlock(blockId);\n\n        if (inBlock) {\n            var indexMap = that.getColumnMap(inBlock);\n            var models = [];\n\n            each(inBlock.getRows(), function (i, row) {\n                models.push(IPLAT.Util.block2Model(i, inBlock, indexMap));\n            });\n\n            that.addRows(models, bottom, checked);\n        }\n\n    };\n\n    /**\n     * Grid的当前页新添加行数据\n     *\n     * @param rows      单个Model 或者Model数组\n     * @param bottom    默认在Grid的顶部添加行，为true时 在Grid的底部添加行\n     * @param checked   默认勾选新增的行, 为false时不勾选\n     */\n    kendo.ui.Grid.fn.addRows = function (rows, bottom, checked) {\n        var that = this,\n            dataSource = that.dataSource,\n            data = dataSource.data(),\n            rows2Add = [], // kendo.data.Model\n            models = $.isArray(rows) ? rows : [rows],\n            handlers = IPLAT.Util.unbindHandlers(that.dataSource, \"change\");\n\n        // Model.define 影响editable的editor的fieldType的判断，\n        // 解决复制新增数据列的editor变为numberbox的问题\n        var idField = that.dataSource.options.schema.model.id || \"\";\n        var fields = that.dataSource.options.schema.model.fields;\n\n        var kendoModel;\n\n        // 当前Grid的使用的Model\n        var BizModel = kendo.data.Model.define({\n            id: idField,\n            fields: fields\n        });\n\n        each(models, function (i, model) {\n            // addRows的Model对象有可能来自子窗口，此时使用instanceof是不安全的\n            if (IPLAT.isKendoModel(model)) {\n                // 复制新增时，新的行数据的uid要唯一\n                kendoModel = new BizModel(model.toJSON());\n\n                rows2Add.push(kendoModel);\n            } else if (isPlainObject(model)) {\n                kendoModel = new BizModel(model.toJSON());\n\n                rows2Add.push(kendoModel);\n            }\n        });\n\n        that._checkedRows = [];\n\n        var unchecked = checked === false;\n\n        if (!unchecked) {\n            // 勾选新增的行\n            var copyNewRows = function (e) {\n                each(e.items, function (index, item) {\n                    that._checkedRows.push(item.uid);\n                });\n            };\n            that.dataSource.one(\"change\", copyNewRows);\n        }\n\n        // 批量复制新增，防止触发大量的dataBound事件\n        var newIndex = 0;\n        if (bottom) {\n\n            // 在Grid底部添加行\n            newIndex = data.length;\n            data.push.apply(data, rows2Add); // ObservableArray push\n        } else {\n            data.unshift.apply(data, rows2Add); // trigger \"dataBound\"\n        }\n\n        // 重置id, isNew = true\n        for (var length = newIndex + rows2Add.length; newIndex < length; newIndex++) {\n            data[newIndex]._defaultId = data[newIndex]._defaultId || '';\n            data[newIndex].id = data[newIndex]._defaultId;\n        }\n\n        IPLAT.Util.bindHandlers(that.dataSource, \"change\", handlers);\n\n        that.dataSource.trigger(\"change\", {items: rows2Add, action: \"add\"});\n    };\n\n    /**\n     * 删除Grid中的行数据\n     *\n     * @param list      单行号或者多行号, 也可以是某行数据的Model对象\n     * @param binding   删除时，是否刷新Grid，为false时，不刷新Grid\n     */\n    kendo.ui.Grid.fn.removeRows = function (list, binding) {\n        var that = this,\n            dataSource = that.dataSource,\n            data,\n            index,\n            length,\n            models = [],\n            deleteIndex;\n\n        var handlers = IPLAT.Util.unbindHandlers(that.dataSource, \"change\");\n\n        if (IPLAT.isKendoModel(list)) {\n            models.push(list);\n        } else if ($.isArray(list) && _.isNumber(list[0])) {\n            models = that.getRows(list);\n        } else {\n            models = list; // [model, model, ...]\n        }\n\n        for (index = 0, length = models.length; index < length; index++) {\n            data = dataSource.data();\n            deleteIndex = _.indexOf(data, models[index]);\n            data.splice.call(data, deleteIndex, 1);\n        }\n\n        IPLAT.Util.bindHandlers(that.dataSource, \"change\", handlers);\n\n        if (binding !== false) {\n            that.dataSource.trigger(\"change\", {items: models, action: \"remove\"});\n        }\n    };\n\n    /**\n     * 获取EFGrid的blockId\n     * @return {string}\n     */\n    kendo.ui.Grid.fn.getBlockId = function () {\n        return this.options.blockId || \"\";\n    };\n\n    /**\n     * 使用EiInfo刷新EFGrid\n     * @param eiInfo\n     */\n    kendo.ui.Grid.fn.setEiInfo = function (eiInfo) {\n        var that = this,\n            handlers,\n            blockId = that.getBlockId(),\n            eiBlock = eiInfo.getBlock(blockId),\n            dataSource = that.dataSource;\n\n        if (eiBlock) {\n            var limit = eiBlock.get(EiConstant.LIMIT) || 10,\n                offset = eiBlock.get(EiConstant.OFFSET) || 0;\n\n            // 关闭change事件， 防止重复触发dataBinding等后续事件\n            handlers = IPLAT.Util.unbindHandlers(that.dataSource, \"change\");\n            dataSource.success(eiInfo.toJSON());\n            dataSource._skip = offset;\n            dataSource._take = limit;\n            IPLAT.Util.bindHandlers(that.dataSource, \"change\", handlers);\n            dataSource._process(dataSource._data);\n        }\n    };\n\n    /**\n     * 获取kendoGrid对象中的每次操作结果的EiInfo\n     */\n    kendo.ui.Grid.fn.getEiInfo = function () {\n        return this.eiInfo || this.options.eiInfo;\n    };\n\n    /**\n     * 获取当前Grid的查询条件\n     */\n    kendo.ui.Grid.fn.getQueryInfo = function () {\n        var that = this,\n            filter = that.dataSource.filter(); // kendoGrid上的查询条件\n\n        var postString = that.dataSource.options.transport.parameterMap({\n            filter: filter\n        }, READ_ACTION);\n\n        // queryInfo暂不加入结果集(result EiBlock)\n        return EiInfo.parseJSONString(postString);\n    };\n\n    /**\n     * 设置grid的EiBlock， 会刷新Grid。\n     * @param {EiBlock} eiBlock grid将使用的EiBlock\n     */\n    kendo.ui.Grid.fn.setEiBlock = function (eiBlock) {\n        if (eiBlock.getBlockId() === this.getBlockId()) {\n            var eiInfo = this.getEiInfo();\n            eiInfo.addBlock(eiBlock);\n            this.setEiInfo(eiInfo);\n            this.eiBlock = eiBlock;\n        }\n    };\n\n    kendo.ui.Grid.fn.getEiBlock = function () {\n        return this.eiBlock;\n    };\n\n    /**\n     * 获取Grid中的固定列的配置信息。 [{field: \"\", locked: true},{...}]\n     * @param exclude 是否排除checkbox列\n     * @return {Array}\n     */\n    kendo.ui.Grid.fn.getLockedColumns = function (exclude) {\n        var that = this, lockedColumns = [];\n        each(that.columns, function (i, column) {\n            if (column.locked) {\n                lockedColumns.push(column);\n            }\n        });\n        if (that.options.enable && exclude) {\n\n            // 排除checkbox固定列\n            lockedColumns.shift();\n        }\n        return lockedColumns;\n    };\n\n    /**\n     * 模拟创建一个input\n     * @param value 传入的值\n     * @param column 列属性\n     * @return {element}\n     */\n    var mockInput = function (value, column) {\n        var $input = $('<input>'),\n            inputValue = value || '',\n            attributes = column.attributes || {};\n        $input.attr(attributes);\n        $input.val(inputValue || '');\n        return $input;\n    };\n\n    /**\n     * 校验 model 的值是否合法\n     * @param model 对象\n     * @return {Array}\n     */\n    kendo.ui.Grid.fn.validModel = function (model) {\n        // 获取column的信息\n        var that = this,\n            columnNames,\n            modelJSON,\n            column,\n\n            // 存储 model 的校检结果\n            validatorList = [];\n\n        if (!IPLAT.isKendoModel(model)) {\n            return validatorList;\n        }\n\n        // 获取原生的 modelJSON 的和 name\n        modelJSON = model.toJSON() || {};\n        columnNames = keys(modelJSON) || [];\n\n        each(columnNames, function (i, name) {\n            if (isString(name)) {\n                column = that.getColumn(name);\n                if (column) {\n\n                    // 验证单个输入框的结果\n                    var $input = mockInput(modelJSON[name], column);\n                    var result = $input.kendoInputValidate();\n                    extend(result, {name: name});\n                    validatorList.push(result);\n                }\n            }\n        });\n\n        return validatorList;\n    };\n\n    /**\n     * 对 column 设置错误提示信息\n     * @param model 对象\n     * @param column 列名\n     * @param errorMsg 错误信息\n     */\n    kendo.ui.Grid.fn._setCellErrorMsg = function (model, column, errorMsg) {\n        var that = this,\n            $tr,\n            $cell;\n\n        if (!IPLAT.isKendoModel(model)) {\n            return;\n        }\n\n        if (!column) {\n            return;\n        }\n\n        $cell = that.getCell(model, column);\n        $cell.addClass(TD_VALIDATOR_CLASS);\n        $cell.data(TD_ERROR_MSG, errorMsg);\n    };\n\n    kendo.ui.Grid.fn.getCell = function (model, column) {\n        var that = this,\n            $tr,\n            $cell,\n            uid,\n            offset,\n            cellIndex;\n        if (!IPLAT.isKendoModel(model)) {\n            return;\n        }\n\n        if (!column) {\n            return;\n        }\n        uid = model.uid;\n\n        // 分为两种情形进行处理, locked 和非 locked\n        if (that.isCellLocked(column)) {\n            cellIndex = that.getColumnIndex(column);\n            $tr = that.element.find(\".k-grid-content-locked tr[data-uid=\" + uid + \"]\");\n            $cell = $tr.find(\"td[role='gridcell']\").eq(cellIndex);\n        } else {\n            offset = that.getLockedColumns().length || 0;\n            cellIndex = that.getColumnIndex(column);\n            $tr = that.element.find(\".k-grid-content tr[data-uid=\" + uid + \"]\");\n\n            // td[role='gridcell'] 能够直接指明是需要编辑的column, 防止 checkbox, 序列号, 主从表\n            $cell = $tr.find(\"td[role='gridcell']\").eq(cellIndex - offset);\n        }\n\n        return $cell;\n    };\n\n    /**\n     * 判断整个Grid的输入是否合法\n     * @param validateAll 是否对整个数据行校验\n     * @param rows 需要校检的行\n     * @return {boolean}\n     */\n    kendo.ui.Grid.fn.isValid = function (validateAll, rows) {\n        var that = this,\n            $rows,\n            model,\n            validatorList,\n            valid = true;\n\n        if (that.element.find(\".k-invalid\").length > 0) {\n            return false;\n        }\n\n        // TODO: popupInput,自定义校验\n        $rows = rows || that.tbody.find(\"tr\");\n\n        for (var i = 0; i < $rows.length; i++) {\n            model = that.dataItem($rows[i]);\n            if (model && (validateAll || model.isNew())) {\n                validatorList = that.validModel(model);\n                each(validatorList, function (index, validator) {\n                    if (!validator.valid) {\n                        that._setCellErrorMsg(model, validator.name, validator.errorMsg);\n                        valid = false;\n                    }\n                });\n            }\n        }\n\n        return valid;\n    };\n\n    /**\n     * 重写refresh接口，提供新增完成后的回调功能\n     */\n    kendo.ui.Grid.fn.refresh = (function (refresh) {\n        return function (e) {\n            var that = this;\n\n            refresh.call(that, e); // dataBinding-->dataBound\n\n            if (e && e.action === \"add\") {\n                that.trigger(AFTER_ADD + NS, {\n                    action: \"add\",\n                    index: e.index,\n                    items: e.items\n                });\n            }\n        }\n    })(kendo.ui.Grid.fn.refresh);\n\n    /**\n     * 重写新增接口，提供复制新增，新增事件回调功能\n     */\n    kendo.ui.Grid.fn.addRow = (function (addRow) {\n        return function () {\n            var that = this,\n                copyToAdd = that.options.copyToAdd,\n                rows = that.getCheckedRows();\n\n            // addRow的时候必须要触发editCell，否则新增的行无法勾选，没有选中的样式；\n            // kendoGrid原生的可编辑列的判断逻辑，在固定列存在时(checkbox列)有问题，\n            // 从而无法进入editCell逻辑， 如果不加判断editCell，有时候会触发两次编辑\n            // TODO editFirstRow需要重新考虑和设计，处理级联首列时候，会报错\n            var editFirstRow = function (force) {\n                var id = that.dataSource.data().at(0).uid,\n                    model = that.dataSource.data().at(0),\n                    table = that.lockedContent ? that.lockedTable : that.table,\n                    row = table.find('tr[' + kendo.attr('uid') + '=' + id + ']'),\n                    cell = row.children('td:not(.k-group-cell,.k-hierarchy-cell)').eq(that._firstEditableColumnIndex(row));\n\n                if (cell.length === 0 || force) { // 没有触发editCell\n\n                    var firstColumnIndex = _.findIndex(that.columns, function (column) {\n                        return !!column.field && !column.hidden;\n                    });\n\n                    var firstColumn = that.columns[firstColumnIndex],\n                        field = firstColumn['field'];\n\n                    that.editCell(that.getCell(model, field));\n                }\n            };\n\n            if (!that.trigger(BEFORE_ADD + NS, {}) && that.isValid()) { // 增加记录前的回调\n                // 拷贝增加并且存在选中时候进行 copy 增加\n                if (copyToAdd && rows.length > 0) {\n                    var addHTML = kendo.template($(\"#del-template\").html())({\n                        message: \"[\" + rows.length + \"]条记录被选中，将它们复制为新记录吗？\",\n                        ok: '确定',\n                        cancel: '取消'\n                    });\n\n                    WindowUtil({\n                        title: \"新增数据\",\n                        content: addHTML,\n                        ok: function () {\n                            var kendoWindow = this.data(\"kendoWindow\");\n                            that.addRows(rows);\n                            editFirstRow(true);\n                            kendoWindow.close();\n                        },\n                        cancel: function () {\n                            var kendoWindow = this.data(\"kendoWindow\");\n                            that._checkedRows = []; // TODO: 取消已选中的行?\n                            addRow.call(that);\n                            kendoWindow.close();\n                            editFirstRow();\n                        }\n                    });\n\n                } else {\n                    addRow.call(that);\n                    editFirstRow();\n                }\n            }\n        }\n    })(kendo.ui.Grid.fn.addRow);\n\n    /**\n     * 重写单元格的编辑方法，提供勾选后编辑，编辑事件回调\n     */\n    kendo.ui.Grid.fn.editCell = (function (editCell) {\n        return function ($cell) {\n            $cell = $($cell);\n\n            var that = this,\n                model = that._modelForContainer($cell),\n                fake = arguments[1], // 不需要触发事件，模拟调用editCell\n                beforeEditHandlers,\n                editHandlers,\n                $tr = $cell.closest(\"tr\"), // $contentRow\n                row = $tr.index(),\n                col = that.cellIndex($cell),\n                isNew = model.isNew(),\n                $lockedRow,\n                $contentRow;\n\n            // 清空 validator 样式和提示信息\n            if ($cell.hasClass(TD_VALIDATOR_CLASS)) {\n                $cell.removeClass(TD_VALIDATOR_CLASS);\n                $cell.removeData(TD_ERROR_MSG);\n            }\n\n            if (isNew && !fake) { // 校验时，不勾选新行\n                $contentRow = that.element.find(\".k-grid-content tr[data-uid=\" + $tr.data(\"uid\") + \"]\");\n                $lockedRow = that.element.find(\".k-grid-content-locked tr[data-uid=\" + $tr.data(\"uid\") + \"]\");\n\n                $lockedRow.addClass(\"i-state-selected k-state-selected\");\n                $contentRow.addClass(\"i-state-selected k-state-selected\");\n\n                var checkbox = $lockedRow.find(\"input.check-one\")[0] || $contentRow.find(\"input.check-one\")[0];\n                if (checkbox) { // 选中checkbox\n                    checkbox.checked = true;\n                    that._checkedRows = _.union(that._checkedRows, [model.uid]);\n                }\n            }\n\n            // 这里tr需要处理两种情况,一种是选中后编辑(i-state-selected),另外一种是使用JS进行自定义编辑处理(i-edit-row)\n            if ($tr.hasClass(\"i-state-selected\") || $tr.hasClass(\"i-edit-row\")) {\n\n                if (fake) { // 禁用事件\n                    $cell.addClass(\"fake-edit\"); // 防止editor的逻辑触发\n                    beforeEditHandlers = IPLAT.Util.unbindHandlers(that, BEFORE_EDIT + NS);\n                    editHandlers = IPLAT.Util.unbindHandlers(that, \"edit\");\n                }\n\n                // beforeEdit通过e.preventDefault(),可以控制不再进行编辑\n                if (that.trigger(BEFORE_EDIT + NS, {\n                        container: $cell,\n                        row: row,\n                        col: col, // 不是EiColumn中的pos\n                        field: that.columns[col].field,\n                        model: model\n                    })) {\n                    // 在beforeEdit设置return false，不影响trigger的返回值\n                    return;\n                }\n\n                editCell.call(that, $cell);\n\n                if (fake) { // 启用事件\n                    IPLAT.Util.bindHandlers(that, BEFORE_EDIT + NS, beforeEditHandlers);\n                    IPLAT.Util.bindHandlers(that, \"edit\", editHandlers);\n                }\n\n                // 编辑时选中单元格的内容，便于重新输入\n                $cell.find(\"input\").select();\n            }\n        };\n    })(kendo.ui.Grid.fn.editCell);\n\n    /**\n     * 重写单元格的编辑结束，关闭单元格的方法，自定义触发单元格编辑结束事件\n     */\n    kendo.ui.Grid.fn.closeCell = (function (closeCell) {\n        return function (isCancel) {\n            var that = this,\n                $cell = that._editContainer,\n                fake = arguments[1], // 模拟的closeCell调用\n                $tr,\n                uid,\n                model;\n\n            if (!$cell) {\n                return;\n            }\n\n            $tr = $cell.closest('tr');\n            uid = $tr.attr(kendo.attr('uid'));\n            model = that.dataSource.getByUid(uid);\n            $cell.removeClass(\"i-invalid-cell\");\n\n            if (!fake) {\n                // 结束编辑的回调事件处理\n                var row = $tr.index(),\n                    col = that.cellIndex($cell);\n\n                if (that.trigger(AFTER_EDIT + NS, { // 自定义校验，不关闭单元格\n                        container: $cell,\n                        row: row,\n                        col: col, // 注意，不是EiColumn中的pos\n                        field: that.columns[col].field,\n                        model: model\n                    })) {\n\n                    return;\n                }\n            }\n            that._relatedRow($tr).removeClass(\"k-grid-edit-row\");\n            closeCell.call(that, isCancel);\n\n\n        };\n\n    })(kendo.ui.Grid.fn.closeCell);\n\n    /**\n     * 重写取消方法，自定义触发取消事件\n     */\n    kendo.ui.Grid.fn.cancelChanges = (function (cancelChanges) {\n        return function () {\n            var that = this;\n\n            if (!that.trigger(ON_CANCEL + NS, {})) {\n                cancelChanges.call(that);\n            }\n        };\n    })(kendo.ui.Grid.fn.cancelChanges);\n\n    /**\n     * 通过field查找column\n     * @param field String 列名\n     * @return {} 此列配置列表\n     */\n    kendo.ui.Grid.fn.findColumnByField = function (field) {\n        return find(this.columns, function (column) {\n            return column['field'] === field;\n        })\n    };\n\n    /**\n     * 获取Grid中勾选中的列的方法\n     *\n     * @return {Array} 返回kendo.data.Model数组\n     */\n    kendo.ui.Grid.fn.getCheckedRows = function () {\n        var that = this;\n        var rows = [];\n\n        each(that.element.find(\".k-grid-content tr.i-state-selected\"),\n            function (i, tr) {\n                rows.push(that.dataItem(tr));\n            });\n        return rows;\n    };\n\n    /**\n     * 获取Grid选中的列的方法（点击选中 Selectable）\n     *\n     * @return {Array} 返回kendo.data.Model数组\n     */\n    kendo.ui.Grid.fn.getSelectedRows = function () {\n        var that = this;\n        var rows = [];\n\n        // tr.i-state-selected 表示行是通过checkbox勾选的，勾选同时会加上tr.k-state-selected\n        // 注意: 出现了tr.i-state-selected，必然会有tr.k-state-selected样式\n        // kendoGrid自身的selectable会添加tr.k-state-selected，在PopupGrid的场景下，\n        // 隐藏了checkbox，无法添加tr.i-state-selected，tr上只存在tr.k-state-selected\n        each(that.element.find(\".k-grid-content tr.k-state-selected\"),\n            function (i, tr) {\n                rows.push(that.dataItem(tr));\n            });\n        return rows;\n    };\n\n\n    /**\n     * kendoGrid中存在locked列的时候，原生的dataItems函数返回的model会翻倍，\n     * 所以平台提供getDataItems方法来获取当前页的model数组\n     * @return {*}\n     */\n    kendo.ui.Grid.fn.getDataItems = function () {\n        var that = this, dataItems = that.dataItems();\n        if (that.lockedTable) {\n            return _.first(dataItems, dataItems.length / 2);\n        }\n        return dataItems;\n    };\n\n    /**\n     * 设置Grid中勾选的行\n     * @param list list 可以为单个数字或者字符如：0 或者 \"0\"，也可以是包含数字的数组如[0,1,2] 或者 [0,1,\"2\"],\n     * 如果数组中出现数字与非数字，会对数字标识的行进行选中\n     */\n    kendo.ui.Grid.fn.setCheckedRows = function (list) {\n        var that = this,\n            models = that.getRows(list);\n\n        each(models, function (index, model) {\n            // fixed 扩大 checkbox 的获取范围， 防止没有固定列情况下，API失效\n            var $tr = that.element.find(\"tr[data-uid='\" + model.uid + \"']\"),\n                $checkbox = $tr.find(\"input.check-one\");\n\n            if ($checkbox[0] && !$checkbox[0].checked) {\n                $checkbox[0].checked = true;\n                $checkbox.trigger(\"check-one\", [true]);\n            }\n        });\n    };\n\n    /**\n     * 设置Grid中不勾选的行\n     * @param list list 可以为单个数字或者字符如：0 或者 \"0\"，也可以是包含数字的数组如[0,1,2] 或者 [0,1,\"2\"],\n     * 如果数组中出现数字与非数字，会对数字标识的行进行选中\n     */\n    kendo.ui.Grid.fn.setUnCheckedRows = function (list) {\n        var that = this,\n            models = that.getRows(list);\n\n        each(models, function (index, model) {\n            // fixed 扩大 checkbox 的获取范围， 防止没有固定列情况下，API失效\n            var $tr = that.element.find(\"tr[data-uid='\" + model.uid + \"']\"),\n                $checkbox = $tr.find(\"input.check-one\");\n\n            if ($checkbox[0] && $checkbox[0].checked) {\n                $checkbox[0].checked = false;\n                $checkbox.trigger(\"check-one\", [true]);\n            }\n        });\n    };\n\n    /**\n     * 勾选所有的数据行\n     */\n    kendo.ui.Grid.fn.checkAllRows = function () {\n        var that = this,\n            length = that.getDataItems().length,\n            list = [length];\n        for (var i = 0; i < length; i++) {\n            list[i] = i;\n        }\n        that.setCheckedRows(list);\n    };\n\n    /**\n     * 取消勾选所有的数据行\n     */\n    kendo.ui.Grid.fn.unCheckAllRows = function () {\n        var that = this,\n            length = that.getDataItems().length,\n            list = [length];\n        for (var i = 0; i < length; i++) {\n            list[i] = i;\n        }\n        that.setUnCheckedRows(list);\n\n    };\n\n    /**\n     * 反选数据行\n     */\n    kendo.ui.Grid.fn.toggleCheckRows = function () {\n        var that = this,\n            models = that.getDataItems();\n\n        each(models, function (index, model) {\n            var $lockedTR = that.element.find(\".k-grid-content-locked tr[data-uid='\" + model.uid + \"']\"),\n                $checkbox = $lockedTR.find(\"input.check-one\");\n\n            if ($checkbox[0]) {\n                $checkbox[0].checked = !$checkbox[0].checked;\n                $checkbox.trigger(\"check-one\", [true]);\n            }\n        });\n    };\n\n    /**\n     * 获取Grid已勾选的数据行的行号数组\n     *\n     * @return {Array}\n     */\n    kendo.ui.Grid.fn.getCheckedRowsIndex = function () {\n        var gridInstance = this, checkedIndexArray = [];\n        var view = gridInstance.dataSource.view();\n\n        each(view, function (index, model) {\n            if (_.indexOf(gridInstance._checkedRows, model.uid) >= 0) {\n                checkedIndexArray.push(index);\n            }\n        });\n\n        return checkedIndexArray;\n    };\n\n    /**\n     * 根据_checkedRow数组，勾选Grid的数据行\n     */\n    kendo.ui.Grid.fn.refreshCheckRows = function () {\n        // 恢复选中的状态\n        var gridInstance = this;\n        var indexArray = gridInstance.getCheckedRowsIndex();\n\n        gridInstance.setCheckedRows(indexArray);\n    };\n\n\n    /**\n     * 获取Grid中的单行或多行数据,返回的是kendo.data.Model的数组 [model,...]\n     * @param list 行号或者行号数组\n     * @return {Array}\n     */\n    kendo.ui.Grid.fn.getRows = function (list) {\n        var that = this,\n            rowNumbers,\n            rows = [],\n            dataItems = that.getDataItems();\n\n        if (isArray(list)) {\n            rowNumbers = list;\n        } else {\n            rowNumbers = [list];\n        }\n\n        each(rowNumbers, function (index, rowNumber) {\n            if (!isNaN(rowNumber)) {\n                var rowNum = parseInt(rowNumber, 10);\n                rows.push(dataItems[rowNum]);\n            }\n        });\n        return rows;\n    };\n\n    /**\n     * 根据列名判断该列是否为固定列\n     * @param field 列名\n     * @return {boolean}\n     */\n    kendo.ui.Grid.fn.isCellLocked = function (field) {\n        var that = this,\n            columns = that.columns;\n\n        return _.findIndex(columns, {field: field, locked: true}) >= 0;\n    };\n\n    /**\n     * 根据列名获取该列的配置信息的位置索引\n     * @param field 列名\n     * @return {Object}\n     */\n    kendo.ui.Grid.fn.getColumnIndex = function (field) {\n        var that = this,\n            index;\n\n        index = that.element.find(\"th[data-field='\" + field + \"']\").data(\"index\");\n\n        return index;\n    };\n    /**\n     * 根据列名获取该列的配置信息 columns[index]\n     * @param field 列名\n     * @return {Object}\n     */\n    kendo.ui.Grid.fn.getColumn = function (field) {\n        var that = this,\n            columns = that.columns;\n\n        return columns[that.getColumnIndex(field)];\n    };\n\n    /**\n     * 设置Grid中一行或多列记录的字段值（批量赋值）\n     * @param list 单行号或者多行号, 也可以是某行数据的Model对象\n     * @param field 列字段英文名\n     * @param cellValue 是列的值\n     */\n    kendo.ui.Grid.fn.setCellValue = function (list, field, cellValue) {\n        var that = this, rows = [];\n\n        if (IPLAT.isKendoModel(list)) {\n            rows.push(list);\n        } else {\n            rows = that.getRows(list);\n        }\n\n        each(rows, function (i, model) {\n            if (model.hasOwnProperty(field)) {\n                if (cellValue !== model[field]) {\n\n                    var locked = that.isCellLocked(field),\n                        $tr, // locked或locked的行\n                        $cell,\n                        index, // columns数组中的index\n                        uid;\n\n                    model[field] = cellValue;\n                    model.dirty = true; // 解决数据变化无法提交的问题\n\n                    $cell = that.getCell(model, field);\n                    $cell.addClass(\"k-dirty-Cell\");\n\n                    uid = model.uid;\n                    index = that.getColumnIndex(field);\n\n                    if (locked) {\n                        $tr = that.element.find(\".k-grid-content-locked tr[data-uid=\" + uid + \"]\");\n                    } else {\n                        $tr = that.element.find(\".k-grid-content tr[data-uid=\" + uid + \"]\");\n                    }\n\n                    that._displayCell($cell, that.columns[index], model);\n                    $('<span class=\"k-dirty\"/>').prependTo($cell);\n\n                    that.trigger(AFTER_EDIT + NS, {\n                        fake: true,\n                        container: $cell,\n                        row: $tr.index(),\n                        col: index,\n                        field: field,\n                        model: model\n                    });\n                }\n            }\n        });\n    };\n\n    /**\n     * 获取Grid中勾选的数据，组装成EiBlock\n     * @return {EiBlock}\n     */\n    kendo.ui.Grid.fn.getCheckedBlockData = function () {\n        var that = this;\n\n        return that.model2EiBlock(that.getCheckedRows());\n    };\n\n    /**\n     * 获取Grid当前页的数据，组装成EiBlock\n     *\n     * @return {EiBlock|*}\n     */\n    kendo.ui.Grid.fn.getBlockData = function () {\n        var that = this;\n\n        return that.model2EiBlock(that.getDataItems());\n    };\n\n    /**\n     * 便捷方法，把EiBlock组装成EiInfo，默认将当前Grid的全部数据都放在EiInfo中；\n     * 注意和getEiInfo方法的区分\n     *\n     * @param {EiBlock} resultBlock     结果集EiBlock\n     * @return {EiInfo} 包装后的EiInfo\n     */\n    kendo.ui.Grid.fn.wrapEiBlock = function (resultBlock) {\n        var that = this,\n            outInfo = that.getQueryInfo(); // 根据EFGrid上的查询条件构造新的EiInfo\n\n        var result = resultBlock || that.getBlockData(); // 默认使用当前Grid的全部数据\n\n        outInfo.addBlock(result);\n\n        return outInfo;\n    };\n\n    /**\n     * 将kendo.data.Model数组的数据，转成EiBlock的数据\n     *\n     * @param {Array} models kendo.data.Model数组\n     * @return {EiBlock}\n     */\n    kendo.ui.Grid.fn.model2EiBlock = function (models) {\n        var that = this,\n            columns = that.options.columns,\n            gridBlock = that.options.eiBlock, // EFGrid初始化时的EiBlock\n            dataBlock = new EiBlock(gridBlock.getBlockMeta());\n\n        // 设置dataBlock的Attr\n        var currentBlock = that.eiBlock || gridBlock;\n        var attr = extend({}, currentBlock.getAttr());\n        dataBlock.setAttr(attr);\n\n        if (!isArray(models) && IPLAT.isKendoModel(models)) {\n            models = [models];\n        }\n\n        return _mapModels(dataBlock, columns, models);\n    };\n\n    /**\n     * 处理Grid的Model数据和显示值间的显示差异问题。例如，日期列，Model中是Date对象，EiBlock中需要格式化后的字符串\n     * @param dataBlock 待提交的EiBlock\n     * @param columns   Grid的列信息数据\n     * @param models    待提交的Model数组\n     * @param mixin     勾选时提交的业务逻辑\n     * @return {*}\n     * @private\n     */\n    var _mapModels = function (dataBlock, columns, models, mixin) {\n\n        var dateColumns = _.filter(columns, function (column) {\n            return column.editType === \"date\" || column.editType === \"datetime\";\n        });\n\n        each(models, function (index, model) {\n            // model[field] 单元格默认值和数据库的字段类型\n            each(dateColumns, function (index, dateColumn) {\n                var field = dateColumn.field,\n                    dateFormat = dateColumn.parseFormats[0] || dateColumn.dateFormat;\n\n                model[field] = kendo.toString(model[field], dateFormat);\n            });\n\n            if ($.isPlainObject(mixin)) {\n                if (mixin.submitChecked) {\n                    // 判断model 是否在选中列表中\n                    if (mixin._exist(mixin.checkedRows, model)) {\n                        dataBlock.addRow(dataBlock.getMappedArray(model, true));\n                    }\n                } else { // 提交所有change的行\n                    dataBlock.addRow(dataBlock.getMappedArray(model, true));\n                }\n            } else {\n                dataBlock.addRow(dataBlock.getMappedArray(model, true));\n            }\n        });\n        return dataBlock;\n    };\n\n    /**\n     * 用于处理kendoGrid渲染的千奇百怪的问题\n     *\n     * @param gridInstance kendoGrid 对象\n     * @private\n     */\n    var _amazingHandler = function (gridInstance) {\n\n        // 使用iPlatUI定制的翻页条，添加showCount的开关\n        IPLAT.EFGrid._handlePagerCount(gridInstance);\n\n        // gridInstance.element.on(\"focus\", \"table\", function() {\n        //     // kendo.grid.js tableClick -->focusTable 触发了table的focus事件\n        //     // 不能在这里处理，focus已经导致滚动了，在kendo.all.min.js中修改对应的逻辑\n        //     var x = window.scrollX, y = window.scrollY;\n        //     // this.focus();\n        //     window.scrollTo(x, y);\n        //\n        // });\n\n        // grid 列resize的最小值\n        // http://docs.telerik.com/kendo-ui/controls/data-management/grid/how-to/Layout/apply-minimum-width-during-column-resize\n        var minTableWidth;\n        var minColumnWidth = gridInstance.options.minColumnWidth || 50;\n        var th;\n        var idx;\n        var grid;\n        var isLocked = false;\n\n\n        function resizeStart(e) {\n            th = $(e.currentTarget).data(\"th\");\n            grid = th.closest(\".k-grid\").data(\"kendoGrid\");\n            idx = th.index();\n            isLocked = th.closest(\"div\").hasClass(\"k-grid-header-locked\");\n\n            // checkbox和序号列不能resize\n            // http://docs.telerik.com/kendo-ui/controls/data-management/grid/how-to/Layout/disable-column-resize-for-specific-columns\n            if ($(e.currentTarget).data(\"th\").attr(\"resizable\") === \"false\") {\n                e.preventDefault();\n                setTimeout(function () {\n                    grid.wrapper.removeClass(\"k-grid-column-resizing\");\n                    $(document.body).add(\".k-grid th\").css(\"cursor\", \"\");\n                });\n            }\n        }\n\n        gridInstance.resizable.bind(\"start\", kendo.throttle(resizeStart, 200));\n\n        // function resizeColumn(e) {\n        //     if (th.width() >= minColumnWidth) {\n        //         if (isLocked) {\n        //             minTableWidth = grid.lockedTable.width();\n        //         } else {\n        //             minTableWidth = grid.tbody.closest(\"table\").width();\n        //         }\n        //     }\n        //\n        //     if (th.width() < minColumnWidth) {\n        //         e.preventDefault();\n        //         if (isLocked) {\n        //             th.closest(\"table\").width(minTableWidth).children(\"colgroup\").find(\"col\").eq(idx).width(minColumnWidth);\n        //             grid.lockedHeader.width(minTableWidth);\n        //\n        //             grid.lockedTable.width(minTableWidth).children(\"colgroup\").find(\"col\").eq(idx).width(minColumnWidth);\n        //             grid.lockedContent.width(minTableWidth);\n        //         } else {\n        //             grid.thead.closest(\"table\").width(minTableWidth).children(\"colgroup\").find(\"col\").eq(idx).width(minColumnWidth);\n        //\n        //             grid.tbody.closest(\"table\").width(minTableWidth).children(\"colgroup\").find(\"col\").eq(idx).width(minColumnWidth);\n        //         }\n        //\n        //     }\n        // }\n        //\n        // gridInstance.resizable.bind(\"resize\", kendo.throttle(resizeColumn, 200));\n        //\n        // gridInstance.resizable.bind(\"resizeend\", kendo.throttle(function () {\n        //     if (isLocked && th.width() < minColumnWidth) {\n        //         grid.lockedHeader.width(minTableWidth);\n        //         th.closest(\"table\").width(minTableWidth).children(\"colgroup\").find(\"col\").eq(idx).width(minColumnWidth);\n        //\n        //         grid.lockedTable.width(minTableWidth).children(\"colgroup\").find(\"col\").eq(idx).width(minColumnWidth);\n        //         grid.lockedContent.width(minTableWidth);\n        //     }\n        //\n        //     setTimeout(function () {\n        //         grid.lockedHeader.width(minTableWidth);\n        //\n        //         grid.lockedContent.width(minTableWidth);\n        //\n        //     }, 300);\n        //\n        // }, 200));\n\n        // gridInstance.content.css(\"max-height\", \"256px\");\n        // gridInstance.lockedContent.css(\"max-height\", \"256px\");\n    };\n\n    /**\n     * 用于处理EFGrid header border的问题\n     *\n     * @param gridInstance kendoGrid 对象\n     * @private\n     */\n    var _handleGridHeaderBorder = function (gridInstance) {\n        if (gridInstance.dataSource.data().length > 0) {\n            if (!_.isUndefined(gridInstance.lockedHeader)) {\n                gridInstance.lockedHeader.removeClass(\"bottom-border\");\n            }\n            if (!_.isUndefined(gridInstance.thead)) {\n                gridInstance.thead.closest(\".k-grid-header-wrap\").removeClass(\"bottom-border\");\n                gridInstance.thead.find(\"th\").removeClass(\"bottom-border\");\n            }\n        } else if (gridInstance.dataSource.data().length === 0) {\n            if (!_.isUndefined(gridInstance.lockedHeader)) {\n                gridInstance.lockedHeader.addClass(\"bottom-border\");\n            }\n            if (!_.isUndefined(gridInstance.thead)) {\n                gridInstance.thead.closest(\".k-grid-header-wrap\").addClass(\"bottom-border\");\n                gridInstance.thead.find(\"th\").addClass(\"bottom-border\");\n            }\n        }\n    };\n\n    /**\n     * 用于处理grid底部border hover状态的问题\n     * @param gridInstance kendoGrid 对象\n     * @private\n     */\n    var _handleGridBottomBorder = function (gridInstance) {\n        var trLast = gridInstance.element.find(\"tr:last-child\");\n        if (trLast.length === 4 && trLast.eq(2).children(\"td\").css(\"border-bottom-width\") !== \"1px\") {\n            trLast.eq(2).children(\"td\").css(\"border-bottom-width\", 1);\n            trLast.eq(3).children(\"td\").css(\"border-bottom-width\", 1);\n            trLast.eq(2).on(\"mouseover\", function () {\n                $(this).find(\"td\").css(\"border-bottom-color\", BOTTOM_BORDER_HOVER);\n                trLast.eq(3).find(\"td\").css(\"border-bottom-color\", BOTTOM_BORDER_HOVER);\n            });\n            trLast.eq(3).on(\"mouseover\", function () {\n                $(this).find(\"td\").css(\"border-bottom-color\", BOTTOM_BORDER_HOVER);\n                trLast.eq(2).find(\"td\").css(\"border-bottom-color\", BOTTOM_BORDER_HOVER);\n            });\n            trLast.eq(2).on(\"mouseout\", function () {\n                $(this).find(\"td\").css(\"border-bottom-color\", BOTTOM_BORDER);\n                trLast.eq(3).find(\"td\").css(\"border-bottom-color\", BOTTOM_BORDER);\n            });\n            trLast.eq(3).on(\"mouseout\", function () {\n                $(this).find(\"td\").css(\"border-bottom-color\", BOTTOM_BORDER);\n                trLast.eq(2).find(\"td\").css(\"border-bottom-color\", BOTTOM_BORDER);\n            });\n        } else if (trLast.eq(1).children(\"td\").length > 0 && trLast.eq(1).children(\"td\").css(\"border-bottom-width\") !== \"1px\") {\n            trLast.eq(1).children(\"td\").css(\"border-bottom-width\", 1);\n            trLast.eq(1).on(\"mouseover\", function () {\n                $(this).find(\"td\").css(\"border-bottom-color\", BOTTOM_BORDER_HOVER);\n            });\n            trLast.eq(1).on(\"mouseout\", function () {\n                $(this).find(\"td\").css(\"border-bottom-color\", BOTTOM_BORDER);\n            });\n        }\n    };\n})(window.jQuery);\n;(function ($) {\n    var IPLAT = window.IPLAT || {};\n    var extend = $.extend,\n        defaults_options = {\n            animation: {\n                close: {\n                    effects: \"fadeOut zoom:out\",\n                    duration: 300\n                },\n                open: {\n                    effects: \"fadeIn zoom:in\",\n                    duration: 300\n                }\n            },\n            autoWidth: true,\n            minLength: 1,\n            enforceMinLength: true,\n            filter: \"contains\",\n            height: 200,\n            highlightFirst: true,\n            suggest: true,\n            noDataTemplate: \"没有数据\"\n        },\n        transport_defaults = {\n            read: {\n                type: 'POST',\n                dataType: \"json\",\n                contentType: \"application/json\"\n            }\n        },\n        dataSource,\n        autoOption;\n\n    function _beforeInit(options) {\n        var dataBlock = options.dataBlock || \"result\";\n        var nodeId = options.autoId;\n        var eiInfo = options.eiInfo;\n        var eiBlock = eiInfo.getBlock(dataBlock);\n        var serviceName = options.serviceName || eiInfo.get(EiConstant.SERVICE_NAME);\n        var methodName = options.queryMethod || \"query\";\n        var efSecurityToken = $(\"#efSecurityToken\").val();\n        if(typeof(eiBlock) === \"undefined\"){\n            EiCommunicator.send(serviceName,methodName,new EiInfo(),{\n                onSuccess: function (e) {\n                    eiBlock = e.getBlock(dataBlock);\n                },\n                onFail: function (e) {\n                    NotificationUtil(\"获取[\" + dataBlock + \"]数据失败\", \"error\");\n                }\n            },{async:false})\n        }\n        //初始化dataSource\n        var _init_dataSource = function () {\n            return {\n                transport: extend(true, {}, transport_defaults, {\n                    parameterMap: function (options, operation) {\n                        var info = new EiInfo();\n                        var autocomplete = $(\"#\" + nodeId).data(\"kendoAutoComplete\");\n                        if (autocomplete.dataSource.options.serverFiltering) {\n                            info.setByNodeObject(document.getElementById(nodeId).parentNode);\n                        }\n                        var block = info.getBlock(dataBlock);\n                        if (!isAvailable(block)) {\n                            block = new EiBlock(eiBlock.getBlockMeta());\n                            info.addBlock(block);\n                        }\n\n                        block.setAttr(eiBlock.getAttr());\n                        if (autocomplete.dataSource.options.serverPaging) {\n                            if (options.pageSize >= 0 && options.skip >= 0) {\n                                block.set(EiConstant.LIMIT, options.pageSize);\n                            }\n                        }else {\n                            block.set(EiConstant.LIMIT, autocomplete.dataSource.options.pageSize);\n                        }\n                        return info.toJSONString();\n                    }\n                }),\n                schema: {\n                    data: function (response) {\n                        ajaxEi = EiInfo.parseJSONObject(response);\n                        return ajaxEi.getBlock(dataBlock).getMappedRows();\n                    }\n                },\n                pageSize: 50\n            }\n        };\n        var dataSource_defaults = _init_dataSource(options);\n        dataSource = extend(true, {}, dataSource_defaults, {\n            transport: {\n                read: {\n                    url: options.url + \"/service/\" + serviceName + \"/\" + methodName\n                }\n            }\n        });\n\n        //filter及noDataTemplate\n        if (options.filter) {\n            extend(defaults_options, {filter: options.filter})\n        }\n        if (options.noDataTemplate) {\n            extend(defaults_options, {noDataTemplate: options.noDataTemplate})\n        }\n\n        // 优先级最高的配置, 支持kendo的所有原生配置\n        var preOptions = extend({}, IPLATUI.EFAutoComplete[options.autoId]);\n\n        // 处理kendo的配置，优先级最高。\n        if (preOptions.dataSource) {\n            dataSource = extend(true, {}, dataSource, preOptions.dataSource);\n            delete preOptions.dataSource;\n        }\n        return extend({}, defaults_options, {dataTextField: options.dataTextField}, {dataSource: dataSource}, preOptions)\n    }\n\n\n    IPLAT.AutoComplete = function (options) {\n        autoOption = _beforeInit(options);\n        $(\"#\" + options.autoId).kendoAutoComplete(autoOption);\n    };\n})(jQuery);\n\n(function ($) {\n    var IPLAT = window.IPLAT || {},\n        dateDefaults,\n        datetimeDefaults,\n        DATETIME = \"datetime\",\n        extend = $.extend;\n\n    dateDefaults = extend({}, IPLATUI.Config.EFDate);\n    datetimeDefaults = extend({}, IPLATUI.Config.EFDateTime);\n\n    function _beforeInit(options, dateId) {\n        // options中的null属性 空的属性， KendoUI不会使用\n        var footer = kendo.template($(\"#date-footer-template\").html());\n        var defaults = {};\n\n        if (DATETIME === options.role) {\n            extend(defaults, datetimeDefaults);\n        } else {\n            extend(defaults, dateDefaults);\n        }\n\n        // 处理options中需要设置到 $(\"#\" + options.dateId) 元素中的属性\n        var $element =  $(\"#\" + dateId);\n        $element.attr(IPLAT.Util.pickDOMAttributes(options));\n\n        return extend(defaults, options, {\n            footer: footer({\n                today: dateId + \"_today\",\n                clear: dateId + \"_clear\",\n                close: dateId + \"_close\"\n            })\n        });\n    }\n\n    function _afterInit(dateInstance, dateId) {\n        var $date = $(\"#\" + dateId);\n        // 解除hover状态\n        // dateInstance._inputWrapper.off(\".kendoDatePicker\");\n        // dateInstance._inputWrapper.off(\".kendoDateTimePicker\");\n\n        // dateInstance._dateIcon.off(\".kendoDatePicker\");\n        // dateInstance._dateIcon.off(\".kendoDateTimePicker\");\n\n        dateInstance.one(\"open\", function () {\n            var dp = this;\n\n            // 清除kendo默认的今天的链接 k-link k-nav-today\n            // setTimeout没有设置等待的时间，JS的Execution queue结束会调用\n            setTimeout(function () {\n                var $wrapper = dp.dateView.popup.wrapper;\n\n                // 改变DOM结构 会导致已经绑定的事件失效，所以在unwrap后绑定事件\n                $wrapper.find(\".date-footer-wrapper\").unwrap();\n\n                $wrapper.on(\"click\", \"#\" + dateId + \"_today\", function () {\n                    var date = new Date();\n\n                    dateInstance.value(date);\n                    dateInstance.close();\n                    dateInstance.trigger(\"change\");\n                });\n\n                $wrapper.on(\"click\", \"#\" + dateId + \"_clear\", function () {\n                    dateInstance.value(null);\n                    dateInstance.close();\n                    dateInstance.trigger(\"change\");\n                });\n\n                $wrapper.on(\"click\", \"#\" + dateId + \"_close\", function () {\n                    dateInstance.close();\n                });\n\n            });\n        });\n\n        // 点击输入框弹出日期\n        $date.on(\"click\", function () {\n            dateInstance.close(\"time\");\n            dateInstance.open(\"date\");\n        });\n\n\n        // $date.siblings().find(\".k-i-calendar\").on(\"click\", function () {\n        //     dateInstance.open(\"date\");\n        //     if (DATETIME === dateInstance.options.role) {\n        //         dateInstance.close(\"time\");\n        //     }\n        // });\n        //\n        // $date.siblings().find(\".k-i-clock\").on(\"click\", function () {\n        //     dateInstance.open(\"time\");\n        //     dateInstance.close(\"date\");\n        // });\n    }\n\n    IPLAT.Date = function (options) {\n        options = _beforeInit(options, options.dateId);\n        var dateInstance, $date = $(\"#\" + options.dateId);\n\n        if (DATETIME === options.role) {\n            dateInstance = $date.kendoDateTimePicker(options).data(\"kendoDateTimePicker\");\n        } else {\n            dateInstance = $date.kendoDatePicker(options).data(\"kendoDatePicker\");\n        }\n        _afterInit(dateInstance, options.dateId);\n\n        return dateInstance;\n    };\n\n    IPLAT.DateSpan = function (options) {\n\n        function startChange() {\n            var startDate = startDateInstance.value(),\n                endDate = endDateInstance.value();\n\n            if (startDate) {\n                startDate = new Date(startDate);\n                startDate.setDate(startDate.getDate());\n                endDateInstance.min(startDate);\n            } else if (endDate) {\n                startDateInstance.max(new Date(endDate));\n                endDateInstance.min(new Date(1900, 0, 1));\n            } else {\n                startDateInstance.max(new Date(2099, 11, 31));\n                endDateInstance.min(new Date(1900, 0, 1));\n            }\n        }\n\n        function endChange() {\n            var endDate = endDateInstance.value(),\n                startDate = startDateInstance.value();\n\n            if (endDate) {\n                endDate = new Date(endDate);\n                endDate.setDate(endDate.getDate());\n                startDateInstance.max(endDate);\n            } else if (startDate) {\n                startDateInstance.max(new Date(2099, 11, 31));\n                endDateInstance.min(new Date(startDate));\n            } else {\n                startDateInstance.max(new Date(2099, 11, 31));\n                endDateInstance.min(new Date(1900, 0, 1));\n            }\n        }\n\n        /**\n         * 起止日期间添加了 “到，至于，-，~”之类的\n         */\n        function handleExtChar(extChar, bindWidth, bindRatio) {\n            if (extChar && bindWidth) { // 设置了bindWidth和extChar\n                var bindLabelWidth = 4;\n                var bindRatioArray  =  bindRatio.split(\":\");\n\n                var extLabel = '<label class=\"i-datespan-label\">' + extChar + '</label>';\n\n                if (bindRatioArray.length === 2) {\n                    bindLabelWidth = bindRatioArray[0] * 1;\n                }\n\n                var $validateWrapper = $startDate.parent();\n                var $bindWrapper = $validateWrapper.parent();\n\n                $validateWrapper.append(extLabel);\n\n                // endDate的内容插入到\n                $validateWrapper.append($endDate.parent().html());\n\n                // 删除掉endDate原来的DOM节点\n                $endDate.parent().parent().remove();\n\n                // 重置$endDate Input\n                $endDate = $validateWrapper.find(\"input:eq(1)\");\n\n                $startDate.attr(\"style\", \"width: 45% !important;\");\n                $endDate.attr(\"style\", \"width: 45% !important;\");\n\n\n                $bindWrapper.prev().attr(\"class\", \"col-xs-\" + bindLabelWidth + \" control-label\"); // bindLabel标签占据的栅格\n                $bindWrapper.attr(\"class\", \"col-xs-\" + (12 - bindLabelWidth)); // 两个日期占据的栅格\n\n                $bindWrapper.parent().parent().addClass(\"i-datespan-ext\");\n            }\n        }\n\n        var startOptions = _beforeInit(options, options.startId);\n        var endOptions = _beforeInit(options, options.endId);\n\n        var startDateInstance, endDateInstance;\n\n        var $startDate = $(\"#\" + options.startId),\n            $endDate = $(\"#\" + options.endId);\n\n        // 处理组件中间需要加字的场景\n        handleExtChar(options.extChar, options.bindWidth, options.bindRatio);\n\n        if (isAvailable(options.startDate)) {\n            startOptions.value = options.startDate;\n        }\n\n        if (isAvailable(options.endDate)) {\n            endOptions.value = options.endDate;\n        }\n\n\n        if (DATETIME === options.role) {\n            var now = new Date();\n\n            if (!isAvailable(options.startDate) && options.startTimeFormat) {\n                var startVal = new Date(kendo.toString(now, IPLAT.FORMAT.DATE_8_PR) + \" \" + options.startTimeFormat);\n\n                startDateInstance = $startDate.kendoDateTimePicker(extend(\n                    {change: startChange}, startOptions, {value: startVal})).data(\"kendoDateTimePicker\");\n\n                // 清空日期dom中设置的值，但保留初始的时分秒 (解决不能任意选择秒的问题)\n                startDateInstance.element.val('');\n            } else {\n                // 设置了默认值\n                startDateInstance = $startDate.kendoDateTimePicker(extend(\n                    {change: startChange}, startOptions)).data(\"kendoDateTimePicker\");\n            }\n\n            if (!isAvailable(options.endDate) && options.endTimeFormat) {\n                var endVal = new Date(kendo.toString(now, IPLAT.FORMAT.DATE_8_PR) + \" \" + options.endTimeFormat);\n                endDateInstance = $endDate.kendoDateTimePicker(extend(\n                    {change: endChange}, endOptions, {value: endVal})).data(\"kendoDateTimePicker\");\n\n                // 清空日期dom中设置的值，但保留初始的时分秒 (解决不能任意选择秒的问题)\n                endDateInstance.element.val('');\n            } else {\n                endDateInstance = $endDate.kendoDateTimePicker(extend(\n                    {change: endChange}, endOptions)).data(\"kendoDateTimePicker\");\n            }\n\n        } else {\n            startDateInstance = $startDate.kendoDatePicker(extend(\n                {change: startChange}, startOptions)).data(\"kendoDatePicker\");\n\n            endDateInstance = $endDate.kendoDatePicker(extend(\n                {change: endChange}, endOptions)).data(\"kendoDatePicker\");\n        }\n\n        // startDateInstance.max(endDateInstance.value());\n        endDateInstance.min(startDateInstance.value());\n\n        _afterInit(startDateInstance, startOptions.startId);\n        _afterInit(endDateInstance, startOptions.endId);\n\n        // 防止kendo DateTimePicker 造成的样式展示冲突\n        $(\"#\" + \"t_\" + options.startId + \"_\" + options.endId).css('visibility', 'visible');\n\n        return {\n            start: startDateInstance,\n            end: endDateInstance\n        };\n    };\n})(jQuery);\n;(function ($) {\r    var Class = kendo.Class,\r        Observable = kendo.Observable,\r        BACK_FILL = \"backFill\",\r        STATIC_WINDOW = 'iplat_static_window',\r        TOP_FIX = 2, // 2px 是Input框外的span的border 修正\r        LEFT_FIX = 7, // 7px 是Input框外的span的padding 修正\r        extend = $.extend,\r        isFunction = $.isFunction,\r        isString = _.isString,\r        each = _.each,\r        TransportFactory = IPLAT.Transport.TransportFactory,\r        RestfulTransport = IPLAT.Transport.RestfulTransport,\r        EiConstant = IPLAT.EiConstant,\r        EiCommunicator = IPLAT.EiCommunicator,\r        EiInfo = IPLAT.EiInfo,\r        windowManager;\r\r    var efSecurityToken = $(\"#efSecurityToken\").val();\r\r    /**\r     * WindowManager用来管理弹出窗口，由于是控制多重窗口的显示\r     * @constructor\r     */\r    var WindowManager = function () {\r        var that = this;\r        that.type = 0; // 0 为销毁，1为内部点击\r        $(document).on(\"click\", function () {\r            that.destroy();\r        });\r    };\r\r    WindowManager.prototype.destroy = function () {\r        this.type -= 1;\r        if (this.type < 0) {\r            this.type = 0;\r            if (this.window) {\r                this.window.close();\r                this.window = null;\r            }\r        }\r    };\r\r    /**\r     * 将kendoWindow对象交由ManagerWindow管理\r     * @param {kendo.ui.Window} window kendoWindow对象\r     */\r    WindowManager.prototype.inject = function (window) {\r        this.window && this.window.close();\r        this.window = window;\r        this.type = 1;\r    };\r\r    /**\r     * 在弹出窗口的内部点击，不关闭窗口（e.stopPropagation）\r     */\r    WindowManager.prototype.innerClick = function () {\r        this.type = 1;\r    };\r\r    windowManager = new WindowManager();\r\r    // 弹出框页面抖动判断是由于调用 _activate 引起的\r    // 防止抖动引起的问题， 这里对 _activate 进行优化\r    kendo.ui.Window.fn._activate = (function (_activate) {\r        return function () {\r            var that = this, options = that.options;\r            if (options[STATIC_WINDOW] && options[STATIC_WINDOW] === true) {\r                // 重绘子页面\r                kendo.resize(this.element.children());\r            } else {\r                _activate.call(this);\r            }\r        }\r    })(kendo.ui.Window.fn._activate);\r\r\r    /**\r     * 构造弹出Grid的columns数组\r     * @param columnEnames 列的英文名数组\r     * @param columnCnames 列的中文名数组\r     * @return {Array}\r     * @private\r     */\r    function _buildColumns(columnEnames, columnCnames) {\r        var columns = [];\r        var fields = columnEnames.split(','), titles = columnCnames.split(','),\r            length = Math.min(fields.length, titles.length);\r        for (var i = 0; i < length; i++) {\r            var column = {};\r            column['field'] = fields[i];\r            column['title'] = titles[i];\r            column['enable'] = false;\r            column['width'] = 120;\r            columns.push(column);\r        }\r        return columns;\r    }\r\r    /**\r     * 获取或者创建弹出窗口div容器\r     * @param id\r     * @return {*|HTMLElement}\r     */\r    function getContainer(id) {\r        var $container = $(\"#\" + id);\r        if ($container.length === 0) {\r            return $(\"<div id='\" + id + \"' data-new='true' />\").appendTo(document.body);\r        }\r        return $container;\r    }\r\r    /**\r     * 创建KendoWindow窗口对象\r     * @param options\r     */\r    function buildKendoWindow(options) {\r        var container = options.container, // 弹出窗口容器元素jQuery对象\r            inputElement = options.textElement, // 输入框元素jQuery对象\r            dynamic = options.dynamic || {},\r            resizable = options.resizable || false, // 调整形状大小\r            resize = options.resize, // 调整形状的回调函数\r            title = options.title, // 弹出窗口的标题\r            windowScrollTop = $(window).scrollTop(), // 页面纵向滚动条的滚动距离\r            windowHeight = $(window).height(),\r            halfWindowHeight = windowHeight / 2,\r            draggable = !(dynamic.draggable === false), // 默认可以拖拽移动弹窗\r\r            height = options.height || dynamic.height, // 弹出窗口初始高度\r            width = options.width || dynamic.width, // 弹出窗口的初始宽度\r\r            left = dynamic.left, // 弹出窗口到文档页面左侧的距离\r            top = dynamic.top, // 弹出窗口到文档页面顶部的距离\r\r            bottom;\r\r        var resizableOptions = {\r            'resizable': resizable,\r            isMaximized: false,\r            autoFocus: false,\r            draggable: draggable,\r            title: title,\r            height: height,\r            width: width\r        };\r\r        // 添加自定义属性，控制popup弹出框是否抖动\r        resizableOptions[STATIC_WINDOW] = true;\r\r        if (resizable && isFunction(resize)) {\r            extend(resizableOptions, {resize: resize});\r        }\r\r        if (!container.data(\"kendoWindow\")) {\r            container.kendoWindow(resizableOptions);\r        }\r\r        var windowInstance = container.data(\"kendoWindow\");\r\r        // 窗口父容器\r        var windowWrapper = windowInstance.element.parent();\r\r        // 重置bottom和top\r        windowWrapper.css({'bottom': '', 'top': ''});\r\r        var elementPosition = IPLAT.Util.getElementScreenPosition(inputElement);\r\r        // 定位弹出框\r        if ($.isNumeric(top)) {\r            // 使用配置top\r            windowWrapper.css(\"top\", top + \"px\");\r        } else {\r            // 当元素位于上半区，并且弹出框高度低于屏幕高度一半时候，弹出框往下\r            // if ((elementPosition.top - halfWindowHeight > 0) && +(height || 0) < halfWindowHeight) {\r            //     // 向上弹窗\r            //     bottom = windowHeight - elementPosition.top - windowScrollTop;\r            //     windowWrapper.css(\"bottom\", bottom + \"px\");\r            // } else {\r            //     // 向下弹窗\r            //     top = elementPosition.top + elementPosition.height + windowScrollTop;\r            //     windowWrapper.css(\"top\", top + \"px\");\r            // }\r\r            // 统一向下弹窗\r            top = elementPosition.top + elementPosition.height + windowScrollTop + TOP_FIX;\r            windowWrapper.css(\"top\", top + \"px\");\r        }\r\r        if (!$.isNumeric(left)) {\r            // 使用配置left\r            left = inputElement.offset().left - LEFT_FIX;\r            if (left + windowWrapper.width() > document.body.clientWidth) {\r                left = document.body.clientWidth - windowWrapper.width() - 30;\r            }\r        }\r\r        windowWrapper.css(\"left\", left + \"px\"); // left + width\r\r        // 处理kendoWindow外点击关闭情形\r        windowManager.inject(windowInstance);\r\r        windowWrapper.unbind(\"click.iplat\");\r        windowWrapper.on(\"click.iplat\", function () {\r            windowManager.innerClick();\r        });\r\r        // filter弹出框\r        $(document).on(\"click\", \".k-animation-container\", function (e) {\r            windowManager.innerClick();\r        });\r\r        // 处理Grid里面存在滚动时，防止Grid滚动\r        var $grid = inputElement.closest('.k-grid');\r        var kendoGrid = $grid.data('kendoGrid');\r        if (kendoGrid && kendoGrid instanceof kendo.ui.Grid) {\r            // 禁止此Grid进行滚动\r            IPLAT.Util.forbidKendoGridScroll(kendoGrid);\r            // 防止弹出框造成的屏幕窗口抖动\r            IPLAT.Util.preventWindowShake();\r\r\r            windowInstance.bind('close', function (e) {\r                // 关闭弹出框后，让Grid重新进行滚动\r                IPLAT.Util.restartKendoGridScroll(kendoGrid);\r                // 还原屏幕窗口\r                IPLAT.Util.restoreWindow();\r            });\r        }\r\r        return windowInstance;\r    }\r\r\r    /**\r     * 弹出式的Grid都采用REST的方式提交数据\r     */\r    var AbstractPopupGridTransport = RestfulTransport.extend({\r        _buildModels: function (params, operation) {\r            var that = this,\r                blockId = that.options.resultId;\r\r            var eiBlock = new EiBlock(blockId);\r\r            if (params.pageSize >= 0 && params.skip >= 0) {\r                eiBlock.set(EiConstant.LIMIT, params.pageSize);\r                eiBlock.set(EiConstant.OFFSET, params.skip);\r            }\r            eiBlock.set(EiConstant.SHOW_COUNT, \"true\");\r\r            that.postEiInfo.addBlock(eiBlock);\r        }\r    });\r\r    /**\r     * 根据小代码中的SQL，生成动态的表（DynamicGrid）\r     */\r    var DynamicGridTransport = AbstractPopupGridTransport.extend({\r        _buildURL: function () {\r            var that = this,\r                url = that.options.url,\r                serviceId = that.serviceName;\r\r            return {\r                read: {\r                    type: 'POST',\r                    dataType: \"json\",\r                    contentType: IPLAT.AJAX.ContentType.JSON,\r                    url: url + \"/\" + serviceId\r                }\r            };\r        },\r\r        _buildFilter: function (params) { // TODO: 打开时，带初始查询条件\r            var that = this, // http://knexjs.org  dynamic query\r                blockId = that.options.resultId; // codeName\r\r            IPLAT.Util.filterAdapter(params.filter, that.postEiInfo);\r\r            // S_ED_CM_00文档\r            // http://platform.baosight.com:8090/pages/viewpage.action?pageId=12551998\r\r            that.postEiInfo.set(\"codesetCode\", blockId); // blockId小代码类别名\r\r            // 小代码上的查询条件sql\r            if (isAvailable(that.postEiInfo.get(\"inqu_status-0-sql\"))) {\r                that.postEiInfo.set(\"condition\", that.postEiInfo.get(\"inqu_status-0-sql\"));\r            }\r        }\r    });\r\r    /**\r     * 根据服务名，方法名(目前仅支持本地服务调用)，获取表格信息\r     */\r    var ServiceGridTransport = AbstractPopupGridTransport.extend({\r        _buildURL: function () {\r            var that = this,\r                url = that.options.url,\r                serviceName = that.serviceName,\r                methodName = that.methodName;\r\r            return {\r                read: {\r                    type: 'POST',\r                    dataType: \"json\",\r                    contentType: IPLAT.AJAX.ContentType.JSON,\r                    url: url + \"/\" + serviceName + \"/\" + methodName\r                }\r            };\r        },\r        _buildFilter: function (params) {\r            var that = this, // http://knexjs.org  dynamic query\r                options = that.options,\r                postEiInfo,\r                queryInfo = options.queryInfo;\r\r            // 重新调用配置的查询（方法或者EiInfo）\r            if (isFunction(queryInfo)) {\r                postEiInfo = queryInfo();\r            } else {\r                postEiInfo = queryInfo;\r            }\r\r            //  非EiInfo都默认重置\r            if (IPLAT.isEiInfo(postEiInfo)) {\r                that.postEiInfo = postEiInfo;\r            } else {\r                that.postEiInfo = new EiInfo();\r            }\r\r            IPLAT.Util.filterAdapter(params.filter, that.postEiInfo);\r        }\r    });\r\r    TransportFactory.registerTransport(\"DYNAMIC_GRID_TRANSPORT\", DynamicGridTransport);\r    TransportFactory.registerTransport(\"SERVICE_GRID_TRANSPORT\", ServiceGridTransport);\r\r\r    /**\r     * 使用IPLAT封装的js，构造弹出式Grid\r     */\r    var AbstractPopupGrid = Class.extend({\r        init: function (options) {\r            var that = this;\r            that.options = options;\r\r            that.resultId = options.resultId; // resultId\r            that.textField = options.textField;\r            that.valueField = options.valueField;\r            that.textElement = options.textElement;\r            that.valueElement = options.valueElement;\r            that.title = options.title;\r            that.columnEnames = options.columnEnames.replace(\" \", \"\");\r            that.backFillColumnIds = options.backFillColumnIds.replace(\" \", \"\");\r            that.backFillFieldIds = options.backFillFieldIds.replace(\" \", \"\");\r        },\r\r        _prepareEiInfo: function (options) { // 第一次打开PopupGrid，查询，准备好元数据信息\r            var that = this,\r                transport = that._buildTransport(options);\r\r            var jsonString = transport.parameterMap({\r                pageSize: 10,\r                skip: 0,\r                filters: {filters: [], logic: \"and\"}\r            }, \"read\");\r\r            return EiCommunicator.send(\"\", \"\", new EiInfo(\"\"), null, {\r                url: transport.read.url,\r                data: jsonString\r            });\r        },\r\r        _buildGridOptions: function () {\r            var that = this,\r                options = that.options,\r                field = options.field, // 字段的英文名 ename\r                blockId = options.resultId,\r                tagId = field + \"-\" + blockId, //  保证唯一性 ename,field-blockId\r                url = options.url,\r                columnEnames = options.columnEnames.replace(\" \", \"\"),\r                columnCnames = options.columnCnames.replace(\" \", \"\");\r\r            // 模拟成autoDraw为no，扩展场景 mixed yes\r            IPLAT.EFGrid[tagId] = {\r                columns: _buildColumns(columnEnames, columnCnames),\r                readonlyColumns: []\r            };\r\r            // 判断弹出的Grid的列是否显示过滤条件\r            var filterPopupGrid = IPLAT.Util.boolConfigHelper((options.dynamic && options.dynamic.filterPopupGrid),\r                IPLATUI.Config.EFPopup.filterPopupGrid);\r\r            // 判断弹出的Grid是否查询总数\r            var showCount = IPLAT.Util.boolConfigHelper((options.dynamic && options.dynamic.showCount),\r                IPLATUI.Config.EFPopup.showCount);\r\r            var gridOptions = {\r                blockId: blockId,\r                tagId: tagId,\r                checkMode: \"single, row\", // 单击勾选行\r                configId: tagId, // IPLATUI.EFGrid 防止弹出的Grid 页面上的Grid的block相同\r                autoDraw: \"no\",\r                gridId: options.gridId, // 小代码grid div id\r                url: url,  // \"/service/S_ED_CM_00\"\r                eiInfo: options.eiInfo,\r                enable: false,\r                showCount: showCount,\r                pagerPosition: \"top\",\r                toolbarConfig: {hidden: \"all\"}\r            };\r\r            if (filterPopupGrid) {\r                gridOptions = extend(gridOptions, {\r                    filterable: {\r                        extra: false // 只显示一个查询条件\r                    }\r                });\r            }\r\r            return gridOptions;\r        },\r\r        buildPopupGrid: function () {\r            var that = this,\r                options = that.options,\r                transport,\r                gridOptions;\r\r            transport = that._buildTransport(options);\r            gridOptions = that._buildGridOptions(options);\r\r            gridOptions = extend(true, gridOptions, {\r                dataSource: {\r                    transport: transport\r                }\r            });\r\r            if (IPLAT.isEiInfo(options.eiInfo)) {\r                return IPLAT.Grid(gridOptions);\r\r            } else {\r                return {\r                    gridOptions: gridOptions, // 缺少EiInfo\r                    eiPromise: that._prepareEiInfo(options)\r                }\r            }\r        }\r    });\r\r    /**\r     * 根据小代码动态生成的Grid\r     */\r    var DynamicGrid = AbstractPopupGrid.extend({\r        _buildTransport: function (options) {\r            return TransportFactory.getTransport(\"DYNAMIC_GRID_TRANSPORT\", options);\r        }\r    });\r\r    /**\r     * 根据服务名，方法名生成的Grid\r     */\r    var ServiceGrid = AbstractPopupGrid.extend({\r        _buildTransport: function (options) {\r            return TransportFactory.getTransport(\"SERVICE_GRID_TRANSPORT\", options);\r        }\r    });\r\r    var PopupGridFactory = (function () {\r        var popupType = {\r            DYNAMICGRID: DynamicGrid,\r            SERVICEGRID: ServiceGrid\r        };\r\r        return {\r            getPopupGrid: function (type, options) {\r                var popupGrid = popupType[type],\r                    builder = new popupGrid(options);\r\r                return builder.buildPopupGrid();\r            },\r\r            registerPopupGrid: function (type, builder) {\r                if (builder instanceof AbstractPopupGrid) {\r                    popupType[type] = builder;\r                }\r                return PopupGridFactory;\r            }\r        }\r    })();\r\r    /**\r     * 弹出窗口 包含Grid的内容\r     */\r    var AbstractPopupWindow = Observable.extend({\r        init: function (options) {\r            var that = this;\r\r            that.options = options;\r            that._events = {};\r\r            that.resultId = options.resultId; // resultId\r            that.textField = options.textField;\r            that.valueField = options.valueField;\r            that.textElement = options.textElement;\r            that.valueElement = options.valueElement;\r            that.title = options.title;\r            that.columnEnames = options.columnEnames.replace(\" \", \"\");\r            that.backFillColumnIds = options.backFillColumnIds.replace(\" \", \"\");\r            that.backFillFieldIds = options.backFillFieldIds.replace(\" \", \"\");\r\r            that._prepare();\r        },\r        _prepare: function () {\r            // 分析弹窗控件的使用场景\r            var that = this,\r                gridType,\r                targetType,\r                popupType = that.options.popupType || \"\";\r\r            var typeInfo = popupType.split(\"_\");\r            gridType = typeInfo[0];\r            targetType = typeInfo[1];\r\r            that.options.gridType = gridType;\r            that.options.targetType = targetType;\r        },\r\r        /**\r         * 构造弹窗容器DOM节点div, 还没有使用KendoWindow进行实例化\r         * @private\r         */\r        _buildContainer: function () {\r            var that = this,\r                resultId = that.resultId, // popupInput  dynamic grid\r                valueElement = that.valueElement,\r                elementId = kendo.guid();\r\r            // 要确保不同弹出字段的容器的唯一性\r            if (!!valueElement) {\r                elementId = valueElement.attr(\"id\");\r            }\r            var containerId = \"ef_popup_\" + elementId + \"_\" +\r                resultId.replace(/\\./g, '_');\r\r            that.options.gridId = containerId.replace('ef_popup', 'ef_' + that.options.gridType);\r\r            that.options.container = getContainer(containerId);\r            return that.options.container;\r        },\r\r        /**\r         * 构建弹出式的Grid组件\r         * @param options\r         * @return {*}\r         * @private\r         */\r        _buildGrid: function (options) {\r            // 和弹出Grid的种类进行桥接 (Bridge Pattern)\r            return PopupGridFactory.getPopupGrid(options.gridType, options);\r        },\r\r        /**\r         * 构建保存按钮\r         * @param container\r         * @private\r         */\r        _buildSaveButton: function (container) {\r            var that = this,\r                popGrid = that.popupGrid,\r                $container = $(container),\r                $saveBtnDiv;\r\r            $saveBtnDiv = $(\"<div class='k-window-save k-popup-save'><button class='i-btn-lg i-btn-wide'>\" +\r                IPLAT.CONSTANTS.BACKFILL_BUTTON_NAME + \"</button></div>\").on(\"click\", \"button\", function () {\r                that._backFillFields(popGrid);\r            });\r            return $container.append($saveBtnDiv);\r        },\r\r        /**\r         * 数据回填逻辑封装\r         * @param codeGrid\r         * @private\r         */\r        _backFillFields: function (codeGrid) { // 数据回填\r            var that = this,\r                backFillFieldIds = that.backFillFieldIds,\r                backFillColumnIds = that.backFillColumnIds,\r                textElement = that.textElement,\r                valueElement = that.valueElement,\r                backFillGrid = that.options.backFillGrid,\r                textField = that.textField,\r                valueField = that.valueField,\r\r                copy = that.options.copy,\r                // 处理select()接口再cell情况下获取不到model信息\r                model = codeGrid.getSelectedRows()[0];\r            // model = codeGrid.dataItem(codeGrid.select());\r\r            // 通过copy属性来判断是否批量复制中弹出Grid还是通常column中弹出Grid\r            // 批量复制中弹出Popup\r            if (!!copy) {\r                // 触发回填方法backFill\r                if (isFunction(that.options.backFill)) {\r                    that.options.backFill.call(backFillGrid, {\r                        grid: codeGrid,\r                        model: model,\r                        copy: true\r                    });\r                    windowManager.destroy();\r                    return;\r                }\r\r                if (!!model) {\r                    // var backFillGrid = that.options.gridBlockId\r                    // 其他Input回填框数据注入\r                    var fields = backFillFieldIds.split(',');\r                    var columns = backFillColumnIds.split(',');\r                    // 把数据回填到backFillGrid中\r                    var checkRows = backFillGrid.getCheckedRows();\r\r                    for (var i = 0, length = columns.length; i < length; i++) {\r                        // 给父Grid回填数据\r                        // 通过gridBlockId来定位回填的Grid\r                        // backFillGrid.select();\r                        // $(\"#\" + fields[i]).val(model[columns[i]]);\r                        each(checkRows, function (row) {\r                            backFillGrid.setCellValue(row, fields[i], model[columns[i]])\r                        });\r                    }\r                }\r            } else {\r                // 普通的column中弹出Popup回填\r                if (that.trigger(BACK_FILL, {\r                        grid: codeGrid,\r                        model: model\r                    })) {\r                    // 自定义回填, 不使用默认的回填逻辑\r                    windowManager.destroy();\r                    return;\r                }\r                if (!!model) {\r                    // 其他Input回填框数据注入\r                    var fields = backFillFieldIds.split(',');\r                    var columns = backFillColumnIds.split(',');\r                    for (var i = 0, length = columns.length; i < length; i++) {\r                        $(\"#\" + fields[i]).val(model[columns[i]]).blur();\r                    }\r                    // Input 自身数据注入\r                    textElement.val(model[textField]).blur();\r                    valueElement.val(model[valueField]).blur();\r                }\r            }\r            windowManager.destroy();\r        },\r\r        /**\r         * 自定义回填时，关闭窗口\r         */\r        closeWindow: function () {\r            windowManager.destroy();\r        },\r\r        /**\r         * 使用KendoWindow组件，定位弹出窗口的位置，和点击关闭事件等\r         * @private\r         */\r        _buildKendoWindow: function () {\r            var that = this;\r            return buildKendoWindow(that.options);\r        },\r\r        /**\r         * 弹出前的逻辑组装，达到在input和column中复用的目的\r         * @private\r         */\r        _preCreate: function () {\r            var that = this,\r                options = that.options,\r                columnEnames = options.columnEnames,\r                gridId,\r                $container;\r\r            that._buildContainer();\r\r            options.queryInfo = arguments[0];\r            gridId = that.options.gridId;\r            $container = that.options.container;\r\r            if ($container.data(\"new\") || options.queryInfo || options.refresh) {\r                $container.empty(); // 清空弹出的Grid\r                // var width = Math.min(options.width, columnEnames.length * 150) + 20;\r                var $grid = $(\"<div id='\" + gridId + \"' />\").appendTo($container);\r                var popupGrid = that._buildGrid(options); // promise\r\r                // 处理弹出框宽度\r                options.width = options.width ? options.width : columnEnames.length * 150;\r\r                if ($.isPlainObject(popupGrid)) {\r                    var gridOptions = popupGrid.gridOptions;\r\r                    popupGrid.eiPromise.then(function (eiJSON) {\r                        var ajaxEi = EiInfo.parseJSONObject(eiJSON);\r                        gridOptions.eiInfo = ajaxEi;\r                        gridOptions.autoBind = false;\r\r                        options.eiInfo = ajaxEi; // options赋值，应该只执行一次\r\r                        var grid = IPLAT.Grid(gridOptions);\r                        that._afterGridBuild(grid, $grid, $container);\r\r                    }, function () {\r                        NotificationUtil(\"获取表格[\" + options.resultId + \"]数据失败\", \"error\");\r                    });\r                } else {\r                    that._afterGridBuild(popupGrid, $grid, $container);\r                }\r                $container.data(\"new\", false);\r            }\r        },\r\r        _afterGridBuild: function (popupGrid, $grid, $container) {\r            var that = this,\r                options = that.options;\r\r            that.popupGrid = popupGrid;\r\r            $grid.on(\"dblclick\", \"tr\", function () { // 双击回填数据\r                var $tr = $(this);\r                $grid.find(\"tr\").removeClass(\"i-state-selected k-state-selected\");\r                $tr.addClass(\"i-state-selected k-state-selected\");\r\r                that._backFillFields(popupGrid);\r            });\r\r            var closeList = function () {\r                return false\r            };\r\r            //处理页面展示数后外面点击不能关闭此window的bug\r\r            $(\".k-list-container\").off(\"click\", closeList).on(\"click\", closeList);\r\r            if (options.save) {\r                that._buildSaveButton($container)\r            }\r\r        },\r\r        buildPopupWindow: function () {\r            var that = this,\r                kendoWindow;\r\r            that._preCreate();\r            kendoWindow = that._buildKendoWindow();\r\r            kendoWindow.open();\r        }\r    });\r\r    var PopupInputWindow = AbstractPopupWindow.extend({\r        buildPopupWindow: function () {\r            var that = this,\r                options = that.options || {},\r                field = options.field,\r                backFillFunction,\r                queryInfo,\r                initFunction,  // 用作于页面初始化加载时候\r                kendoWindow;\r\r            if ($.isPlainObject(IPLATUI.EFPopupInput[field])) {\r                // 获取JS配置中的query\r                queryInfo = IPLATUI.EFPopupInput[field][\"query\"]; // 初始查询函数\r                backFillFunction = IPLATUI.EFPopupInput[field][\"backFill\"]; // 回填回调函数\r                initFunction = IPLATUI.EFPopupInput[field][\"init\"]; // 页面初始化函数\r            } else {\r                if (options['copy'] === true) {\r                    queryInfo = options['query']; // 初始查询函数\r                    backFillFunction = options[\"backFill\"]; // 回填回调函数\r                    initFunction = options[\"init\"]; // 页面初始化函数\r                }\r            }\r\r            that.unbind(BACK_FILL);\r            that.bind(BACK_FILL, backFillFunction);\r\r            that._preCreate(queryInfo);\r\r            that._buildKendoWindow();\r\r\r            kendoWindow = options['container'].data('kendoWindow');\r\r            // 获取弹出Grid\r            // if (options['gridId']) {\r            //     popupGrid = $(\"#\" + options['gridId']).data(\"kendoGrid\");\r            // }\r\r            if (isFunction(initFunction)) {\r                initFunction.call(kendoWindow, options)\r            }\r\r            kendoWindow.open();\r        }\r\r    });\r\r    var PopupColumnWindow = AbstractPopupWindow.extend({\r        _buildContainer: function () {\r            var that = this,\r                resultId = that.resultId, // popupInput  dynamic grid\r                ename = that.options.field;\r\r            // 要确保不同弹出字段的容器的唯一性\r            var containerId = \"ef_popup_\" + ename + \"_\" +\r                resultId.replace(/\\./g, '_');\r\r            that.options.gridId = containerId.replace('ef_popup', 'ef_service_grid');\r\r            that.options.container = getContainer(containerId);\r            return that.options.container;\r        },\r\r        _backFillFields: function (codeGrid) {\r            var that = this,\r                backFillFieldIds = that.backFillFieldIds,\r                backFillColumnIds = that.backFillColumnIds,\r                textElement = that.options.textElement,\r                valueElement = that.valueElement,\r                textField = that.textField,\r                valueField = that.valueField,\r                // 处理select()接口再cell情况下获取不到model信息\r                model = codeGrid.getCheckedRows()[0];\r            // model = codeGrid.dataItem(codeGrid.select());  // TODO: select的隐患\r\r            if (that.trigger(BACK_FILL, {\r                    grid: codeGrid,\r                    model: model\r                })) {\r                // 自定义回填, 不使用默认的回填逻辑\r                return;\r            }\r\r            if (!!model) {\r                // 其他Input回填框数据注入\r                var fields = backFillFieldIds.split(',');\r                var columns = backFillColumnIds.split(',');\r\r                // 弹出Pop的Grid\r                var efGrid = textElement.closest(\"div.k-grid\").data(\"kendoGrid\"); //.dataItem(textElement.parent())\r\r                var rowIndex = textElement.parent().index();\r\r                var efModel = efGrid.dataItem(textElement.parent());\r\r                for (var i = 0, length = columns.length; i < length; i++) {\r                    efGrid.setCellValue(rowIndex, fields[i], model[columns[i]]);\r                }\r\r                textElement.data(\"text\", model[textField]);\r                textElement.html(model[textField]); // Td.html\r\r                // efGrid.setCellValue(rowIndex, that.options.ename, model[valueField]); 不能触发新的edit\r                if (efModel[that.options.ename] !== model[valueField]) {\r                    textElement.addClass(\"k-dirty-cell\").prepend(\"<span class='k-dirty'>\");\r                    efModel.dirty = true;\r                }\r                efModel[that.options.ename] = model[valueField];\r            }\r\r            windowManager.destroy();\r        },\r\r\r        buildPopupWindow: function () {\r            var that = this,\r                gridBlockId = that.options.gridBlockId,\r                ename = that.options.ename,\r                cname = that.options.cname,\r                copy = that.options.copy,\r                $container,\r                kendoWindow,\r                initFunction,\r                backFillFunction;\r\r            IPLAT.EFGrid[gridBlockId].columns.push({// TODO: 丢失了EFColumn中的属性\r                field: ename,\r                title: cname,\r                enable: true,\r                readonly: that.options.readonly, // TODO: 丢失了EFColumn中的属性，Popup的列属性通过JS配置\r                hidden: false,\r                locked: false,\r                copy: copy,\r                iplatSort: that.options.iplatSort || false,\r                editType: \"popup\",\r                // format: \"\",\r                // column中存储弹出框options信息\r                popupOptions: that.options,\r                // column中动态属性配置\r                attributes: that.options.dynamic,\r                editor: function (container, params) {\r                    var options = that.options,\r                        popupGrid;\r\r                    var grid = container.closest(\".k-grid\").data(\"kendoGrid\"),\r                        column = grid.columns[grid.cellIndex(container)],\r                        queryInfo,\r                        attributes = column.attributes || {};\r                    // 添加验证功能，TODO验证后的提示信息样式需调整\r                    var input = $('<span class=\"k-widget k-dropdown i-popup-input k-header\">' +\r                        '<span class=\"k-dropdown-wrap\">' +\r                        '<input type=\"text\" name=\"' + params.field + '\" id=\"' + params.field + '\" class=\"popupColumn\" ' +\r                        'value=\"\" ' + (attributes.required === true ? \"required\" : \"\") + ' >' +\r                        '<span class=\"k-select\">' +\r                        '<span id=\"icon_' + params.field + '\" class=\"i-icon i-popup-grid\"></span></span></span></span>');\r\r                    if (attributes.required === true) {\r                        container.addClass(\"i-invalid-cell\");\r                    }\r\r                    input.appendTo(container);\r\r                    queryInfo = column[\"query\"];\r\r                    if (isFunction(queryInfo)) {\r                        queryInfo = $.proxy(queryInfo, grid, container, params);\r                    }\r\r                    backFillFunction = column[BACK_FILL];\r\r                    that.unbind(BACK_FILL);\r                    that.bind(BACK_FILL, backFillFunction);\r\r                    var rowIndex = container[0]['parentElement']['rowIndex'];\r\r\r                    that.options.textElement = container; // td\r                    $container = that.options.container;\r\r                    $(\"#icon_\" + params.field).mousedown(function () {\r                        that._preCreate(queryInfo);\r                        that._buildKendoWindow();\r\r                        kendoWindow = options['container'].data('kendoWindow');\r\r                        // 调用init初始化\r                        initFunction = column['init'];\r\r                        if (isFunction(initFunction)) {\r                            initFunction.call(kendoWindow, that.options, column);\r                        }\r\r                        kendoWindow.open();\r                    });\r                }\r            });\r        }\r\r    });\r\r    /**\r     * 弹出窗口，统一管理的工厂\r     * @type {{getPopupWindow, registerPopupWindow}}\r     */\r    var PopupWindowFactory = (function () {\r        var popupType = {\r            POPUP_INPUT: PopupInputWindow,\r            POPUP_COLUMN: PopupColumnWindow\r        };\r\r        return {\r            getPopupWindow: function (type, options) {\r                var popupWindow = popupType[type],\r                    builder = new popupWindow(options);\r\r                return builder.buildPopupWindow();\r            },\r\r            registerPopupWindow: function (type, builder) {\r                if (builder instanceof AbstractPopupWindow) {\r                    popupType[type] = builder;\r                }\r                return PopupWindowFactory;\r            }\r        }\r    })();\r\r    // 判断当前输入框是否为disabled的\r    var isDisabled = function (textElement) {\r        var $textElement = $(textElement),\r            disabled = $textElement.prop(\"disabled\");\r\r        return disabled === true;\r    };\r\r    var Popup = (function () {\r        return {\r            // 弹出div内容\r            popupContainer: function (options) {\r                if (!isDisabled(options.textElement)) {\r                    var $container = getContainer(options.containerId);\r                    buildKendoWindow(extend({container: $container}, options)).open();\r                }\r            },\r\r            // Grid中弹窗TextArea编辑\r            popupTextArea: function (options) {\r                var title = options['title'] || '',\r                    content = options['content'] || '',\r                    pele = options['pele'],\r                    textareaId = \"textarea_\" + new Date().getTime(),\r                    callback = options['callback'],\r                    $textarea,\r                    textarea = '<div class=\"textarea\" >' +\r                        '<textarea class=\"k-textarea\" cols=\"36\" rows=\"6\" style=\"resize: none; width: 245px;\">' +\r                        (content || '') + '</textarea>' +\r                        '<div class=\"footer\"><span class=\"i-btn-lg i-btn-wide backFill btn-align-right\">' +\r                        IPLAT.CONSTANTS.BACKFILL_BUTTON_NAME + '</span></div></div>';\r\r                if (!pele) {\r                    return;\r                }\r\r                this.popupContainer({\r                    containerId: textareaId,\r                    textElement: pele,\r                    title: title,\r                    height: 147,\r                    width: 300,\r                    resizable: true,\r                    resize: function (e) {\r                        // textareaResize(e);\r                        textareaResizeThrottle(e);\r                    }\r\r                });\r\r                var textareaResize = function (args) {\r                    var textarea = args.sender.element.find(\"textarea\");\r                    var _height = args.height;\r                    var _width = args.width;\r                    textarea.css(\"height\", _height - 50);\r                    textarea.css(\"width\", _width - 55);\r                };\r\r                var textareaResizeThrottle = kendo.throttle(textareaResize, 200);\r\r\r                $textarea = $(\"#\" + textareaId);\r\r                $textarea.html(textarea);\r\r                $textarea.on('click', '.backFill', function (e) {\r                    var val = $(this).closest('.textarea').find('textarea').val() || '';\r                    if ($.isFunction(callback)) {\r                        callback.call($textarea, val);\r                    }\r                });\r            },\r\r            // EFPopupInput Grid中弹出表格\r            popupGrid: function (options) {\r                if (!isDisabled(options.textElement)) {\r                    var popupType = options.popupType.toUpperCase();\r                    popupType = \"POPUP_\" + popupType.split(\"_\")[1];\r                    PopupWindowFactory.getPopupWindow(popupType, options);\r                }\r            },\r\r            // 动态TreeList\r            popupTree: function (options) {\r                var containerId = \"popup_\" + options['popupId'],\r                    $container = getContainer(containerId);\r\r                if ($container.data(\"new\")) {\r                    $container.data(\"new\", false);\r\r                    var $tree = $(\"<div id='\" + containerId + \"_tree' />\").appendTo($container);\r\r                    $tree.width(300);\r                    $tree.height(300);\r\r                    options['treeId'] = $tree.attr(\"id\");\r                    options['select'] = function (e) {\r                        var data = this.dataItem(e.node);\r                        $(options[\"cellId\"]).val(data.id);\r                        if (options[\"onlyLeaf\"]) {\r                            if (!data[\"leaf\"]) {\r                                $(\"#\" + options[\"popupId\"]).val(data['text']);\r                            }\r                        } else if (!options[\"onlyLeaf\"]) {\r                            $(\"#\" + options[\"popupId\"]).val(data['text']);\r                        }\r                        var window = $(\"#\" + containerId).data(\"kendoWindow\");\r                        window.close();\r\r                    };\r                    IPLAT.TreeView(options);\r\r                    var treeview = $(\"#treeview\").data(\"kendoTreeView\");\r\r\r                    //处理页面展示数后外面点击不能关闭此window的bug\r                    $(\".k-list-container\").on(\"click\", function (e) {\r                        return false\r                    });\r                }\r\r                buildKendoWindow(extend({\r                    container: $container,\r                    textElement: $(\"#\" + options['popupId'])\r                }, options)).open();\r            }\r        }\r    })();\r\r    var ColumnCopy = (function () {\r        return {\r            _init: function (options) {\r                // 获取点击父节点\r                var pele = options['pele'];\r                //  展示的html页面\r                var html = options['html'] || '';\r                // 页面加载完成后的回调方法\r                var loaded = options['loaded'];\r                // 生成弹窗ID\r                var copyId = \"copy_\" + new Date().getTime();\r                var $copy = getContainer(copyId);\r\r                $copy.html(html);\r\r                buildKendoWindow({\r                    container: $copy,\r                    textElement: pele,\r                    title: \"批量复制\"\r                });\r\r                if ($.isFunction(loaded)) {\r                    loaded.call($copy);\r                }\r            },\r            input: function (grid, th, pele, options) {\r                // 构建好\r                var html = \"<div><input type='text' class='k-textbox' />\" +\r                    \"<span class='i-btn-lg-no-ripple copy'>复制</span></div>\",\r                    $th = $(th);\r\r                this._init({\r                    pele: pele,\r                    html: html,\r                    loaded: function () {\r                        var $this = this, window = $this.data(\"kendoWindow\");\r                        $this.on(\"click\", \".copy\", function (e) {\r                            var val = $this.find(\"input\").val() || '';\r\r                            if (isFunction(options.backFill)) {\r                                options.backFill.call(grid, {\r                                    value: val,\r                                    window: window,\r                                    copy: true\r                                });\r                                return;\r                            }\r\r                            var field = $th.data(\"field\");\r                            var rows = grid.getCheckedRows(); // EFGrid列的批量赋值功能\r                            $.each(rows, function (index, item) {\r                                grid.setCellValue(item, field, val);\r                            });\r\r                            window.close();\r                        });\r                    }\r                });\r            },\r            date: function (grid, th, pele, options) {\r                var dateId = \"date_\" + new Date().getTime();\r                var html = \"<div ><input type='text' id='\" + dateId + \"' />\" +\r                    \"<span class='i-btn-lg-no-ripple copy'>复制</span></div>\",\r                    $th = $(th);\r\r                this._init({\r                    pele: pele,\r                    html: html,\r                    loaded: function () {\r                        var $this = this, window = $this.data(\"kendoWindow\");\r                        options = $.extend({\r                            dateId: dateId,\r                            change: function (e) {\r                                windowManager.innerClick();\r                            }\r                        }, options);\r                        IPLAT.Date(options);\r                        $this.on(\"click\", \".copy\", function (e) {\r                            var val = $(\"#\" + dateId).val() || '';\r\r                            if (isFunction(options.backFill)) {\r                                options.backFill.call(grid, {\r                                    value: val,\r                                    window: window,\r                                    copy: true\r                                });\r                                return;\r                            }\r\r                            var field = $th.data(\"field\");\r                            var rows = grid.getCheckedRows(); // EFGrid列的批量赋值功能\r                            $.each(rows, function (index, item) {\r                                grid.setCellValue(item, field, val);\r                            });\r                            window.close();\r                        });\r                    }\r                });\r            },\r            select: function (grid, th, pele, options) {\r                var html = \"<div ><input type='text' /><span class='i-btn-lg-no-ripple copy'>复制</span></div>\",\r                    $th = $(th);\r\r                this._init({\r                    pele: pele,\r                    html: html,\r                    loaded: function () {\r                        var $this = this, window = $this.data(\"kendoWindow\"), $input = $this.find(\"input\");\r\r                        // 防止弹出框被选中后直接消失\r                        options = $.extend({\r                            change: function (e) {\r                                windowManager.innerClick();\r                            }\r                        }, options);\r\r                        $input.kendoDropDownList(\r                            options\r                        );\r\r                        //处理 copy 事件\r                        $this.on(\"click\", \".copy\", function (e) {\r                            var val = $this.find(\"input\").val() || '';\r\r                            if (isFunction(options.backFill)) {\r                                options.backFill.call(grid, {\r                                    value: val,\r                                    window: window,\r                                    copy: true\r                                });\r                                return;\r                            }\r\r                            var field = $th.data(\"field\");\r                            var rows = grid.getCheckedRows(); // EFGrid列的批量赋值功能\r                            $.each(rows, function (index, item) {\r                                grid.setCellValue(item, field, val);\r                            });\r\r                            window.close();\r                        });\r                    }\r                });\r            },\r            multiSelect: function (grid, th, pele, options) {\r                var html = \"<div ><select></select><span class='i-btn-lg-no-ripple copy' style='vertical-align: top;'>复制</span></div>\",\r                    $th = $(th);\r\r                this._init({\r                    pele: pele,\r                    html: html,\r                    loaded: function (e) {\r                        var $this = this, window = $this.data(\"kendoWindow\"), $select = $this.find(\"select\");\r                        options = $.extend({\r                            change: function (e) {\r                                windowManager.innerClick();\r                            }\r                        }, options);\r\r                        $select.kendoMultiSelect(\r                            options\r                        );\r\r                        $this.on(\"click\", \".copy\", function (e) {\r                            var val = ($this.find(\"select\").val() || []).join(',');\r\r                            if (isFunction(options.backFill)) {\r                                options.backFill.call(grid, {\r                                    value: val,\r                                    window: window,\r                                    copy: true\r                                });\r                                return;\r                            }\r\r                            var field = $th.data(\"field\");\r                            var rows = grid.getCheckedRows(); // EFGrid列的批量赋值功能\r                            $.each(rows, function (index, item) {\r                                grid.setCellValue(item, field, val);\r                            });\r\r                            window.close();\r                        });\r\r                    }\r                });\r            }\r        }\r    })();\r\r    $.extend(IPLAT, {\r        ColumnCopy: ColumnCopy\r    });\r\r    $.extend(window, {\r        ColumnCopy: ColumnCopy\r    });\r\r    $.extend(IPLAT, {\r        Popup: Popup\r    });\r\r    $.extend(window, {\r        Popup: Popup\r    });\r\r    // 清除指定输入框数据\r    $.fn.clearInput = function () {\r        var $this = $(this),\r            action = $this.data(\"action\"),\r            forIds = $this.data(\"for\");\r        if (action === \"clear\") {\r            if (isString(forIds)) {\r                var forIdList = forIds.split(\",\");\r                each(forIdList, function (id) {\r                    $(\"#\" + $.trim(id)).val(\"\");\r                });\r            }\r        }\r    };\r\r    // 绑定清除按钮\r    $(window.document.body).on(\"click\", \".k-i-close\", function (e) {\r        var $this = $(this),\r            target = $this.data('target') || '',\r            forIds = $this.data(\"for\"),\r            targetPopupInput = IPLATUI.EFPopupInput[target] || {};\r        if ($.isFunction(targetPopupInput['clearInput'])) {\r            targetPopupInput['clearInput'].call($this, forIds)\r        } else {\r            $this.clearInput();\r        }\r\r    });\r\r})(window.jQuery);\n(function ($) {\n    var EiInfo = IPLAT.EiInfo,\n        ajaxEi = IPLAT.ajaxEi,\n        selectDefaults,\n\n        DataSource = kendo.data.DataSource,\n        each = $.each,\n        extend = $.extend;\n\n    selectDefaults = {\n        animation: {\n            close: {\n                effects: \"fadeOut zoom:out\",\n                duration: 300\n            },\n            open: {\n                effects: \"fadeIn zoom:in\",\n                duration: 300\n            }\n        }\n    };\n\n    kendo.ui.DropDownList.fn.options.noDataTemplate = \"没有数据\";\n\n    function _beforeInit(options) {\n        var dataSource = new DataSource({\n            serverFiltering: true,\n            transport: {\n                read: {\n                    url: options.url + \"/service/\" + options.serviceName + \"/\" + options.methodName,\n                    dataType: \"json\",\n                    contentType: \"application/json\",\n                    type: 'POST'\n                },\n                parameterMap: function (params, operations) {\n                    var info = new EiInfo();\n                    if (options.cascadeFrom) {\n                        info = EiInfo.build($(\"#\" + options.cascadeFrom).parent());\n                    }\n                    return info.toJSONString();\n                }\n            },\n            schema: {\n                data: function (response) {\n                    ajaxEi = EiInfo.parseJSONObject(response);\n                    return options.EFOptions.concat(ajaxEi.getBlock(options.resultId).getMappedRows());\n                }\n            }\n\n        });\n        return dataSource;\n\n    }\n\n    /**\n     * EFSelect.Tag 对应的JS组件逻辑\n     * @param options\n     * @constructor\n     */\n    IPLAT.Select = function (options) {\n        if (options.serviceName && options.methodName && options.resultId) { // 动态的下拉选项\n            EiCommunicator.send(options.serviceName, options.methodName, new EiInfo(), {\n                onSuccess: function (eiInfo) {\n                    var rows = eiInfo.getBlock(options.resultId).getMappedRows();\n                    _buildSelect(options, IPLAT.EFOptions.concat(rows));\n                }, onFail: function (data) {\n                    _buildSelect(options, IPLAT.EFOptions);\n                }\n            });\n        } else { // 静态的下拉选项\n            _buildSelect(options, IPLAT.EFOptions);\n        }\n\n        function _buildSelect(options, dataSource) {\n            var defaults = {\n                    dataTextField: \"textField\",\n                    dataValueField: \"valueField\",\n                    value: options.defaultValue\n                },\n                // 页面JS中的原生配置\n                selectConfig = extend({}, IPLATUI.EFSelect[options.selectId]);\n\n            // 复制一份数据源，清空IPLAT.EFOptions\n            dataSource = dataSource.concat(options.dataSource || []);\n            delete options.dataSource;\n\n            IPLAT.EFOptions = [];\n\n            if (options.textField && options.valueField) {\n                // EFSelect经常和EFCodeOption EFOptions 组合使用，把options.textField的列名映射成为固定的textField\n                dataSource = $.map(dataSource, function (item) {\n                    return {\n                        textField: item[options.textField] || item[\"textField\"],\n                        valueField: item[options.valueField] || item[\"valueField\"]\n                    };\n                });\n            }\n\n            // 处理options中需要设置到 $(\"#\" + options.selectId) 元素中的属性\n            var $element =  $(\"#\" + options.selectId);\n            $element.attr(IPLAT.Util.pickDOMAttributes(options));\n\n            var selectInstance = $element.kendoDropDownList(\n                extend({dataSource: dataSource}, selectDefaults, options, defaults, selectConfig)).data(\"kendoDropDownList\");\n\n            // 处理下拉框readonly情形\n            if (options.readonly === true) {\n                selectInstance.readonly();\n                $element.removeAttr(\"readonly\"); // 保证只读下拉还可参与校验\n                $element.prev(\"span.k-dropdown-wrap\").removeClass(\"k-state-default\").addClass(\"i-state-readonly\");\n            }\n\n            return selectInstance;\n        }\n    };\n\n\n    IPLAT.MultiSelect = function (options) {\n        var dataSource = IPLAT.EFOptions.concat([]);\n        IPLAT.EFOptions = [];\n\n        // 处理options中需要设置到 $(\"#\" + options.selectId) 元素中的属性\n        var $element =  $(\"#\" + options.selectId);\n        $element.attr(IPLAT.Util.pickDOMAttributes(options));\n\n        return $element.kendoMultiSelect(\n            extend({}, selectDefaults, options, {\n                dataSource: dataSource,\n                dataTextField: \"textField\",\n                dataValueField: \"valueField\",\n                value: options.defaultValue.split(\",\"), // 多选项以\",\"分隔\n                autoClose: options.autoClose\n            })).data(\"kendoMultiSelect\");\n    };\n\n\n    IPLAT.CascadeSelect = function (options) {\n        var textField = options.textField,\n            valueField = options.valueField,\n            dataSource = IPLAT.EFOptions.concat([]);\n        IPLAT.EFOptions = [];\n\n        each(dataSource, function (index, option) {\n            option[textField] = option[\"textField\"];\n            option[valueField] = option[\"valueField\"];\n            delete option.textField;\n            delete option.valueField;\n        });\n\n        options.EFOptions = dataSource;   // 将自定义EFOption放入options\n\n        var defaults = {\n            // optionLabel: \"请选择\",\n            dataTextField: textField, // todo 和EFSelect不统一\n            dataValueField: valueField,\n            dataSource: _beforeInit(options)\n        };\n\n        // 处理options中需要设置到 $(\"#\" + options.selectId) 元素中的属性\n        var $element =  $(\"#\" + options.selectId);\n        $element.attr(IPLAT.Util.pickDOMAttributes(options));\n\n        return $element.kendoDropDownList(\n            extend({}, selectDefaults, options, defaults)).data(\"kendoDropDownList\");\n    };\n\n    IPLAT.Codeset = function (options) {\n        var defaults = {\n            dataSource: options.dataSource,\n            dataTextField: \"textField\",\n            dataValueField: \"valueField\",\n            value: options.defaultValue,\n            footerTemplate: options.footerTemplate\n        };\n        if (options.format) {\n            defaults.template = options.format;\n            defaults.valueTemplate = options.format;\n        }\n\n        // 处理options中需要设置到 $(\"#\" + options.selectId) 元素中的属性\n        var $element =  $(\"#\" + options.selectId);\n        $element.attr(IPLAT.Util.pickDOMAttributes(options));\n\n        return $element.kendoDropDownList(\n            extend(selectDefaults, defaults)).data(\"kendoDropDownList\");\n    };\n\n})(jQuery);\n\n;(function ($) {\n    var IPLAT = window.IPLAT || {};\n\n    // 兼容原生的kendoTreeView options即kendoTreeView 配置的options参数,options即是kendo原生的配置参数\n    var EFTree = function ($ele, dataSource) {\n        $ele.kendoTreeView({\n            dataSource: dataSource\n        });\n        return $ele.data(\"kendoTreeView\");\n    };\n\n    var trees = [];\n    // 挂载到IPLAT上 树已经被封装\n    IPLAT.TreeViews = function (options) {\n        // 可以设置一些初始化属性进行处理\n        var $ele1 = $(\"#\" + options.leftId);\n        var $ele2 = $(\"#\" + options.rightId);\n        var tree1 = new EFTree($ele1, options.leftDataSource);\n        var tree2 = new EFTree($ele2, options.rightDataSource);\n        var nodePath;\n        var accessAll = options.accessAll;\n\n        trees.push(tree1, tree2);\n\n        $(document).on(\"dblclick\", \"#\" + options.leftId + \" span.k-in\", function () {\n            if (accessAll === false) { // 仅移动当前节点及其子节点\n                nodePath = _getPath(tree1, this);\n                nodeSwap(tree2, nodePath);\n            } else { // 移动当前节点&&与各子节点id相同的节点\n                _.each(map2FlatX([tree1.dataItem(this)]), function (node) {\n                    nodeMove(tree1, tree2, node.id);\n                });\n            }\n        });\n\n        $(document).on(\"dblclick\", \"#\" + options.rightId + \" span.k-in\", function () {\n            if (accessAll === false) {\n                nodePath = _getPath(tree2, this);\n                nodeSwap(tree1, nodePath);\n            } else {\n                _.each(map2FlatX([tree2.dataItem(this)]), function (node) {\n                    nodeMove(tree2, tree1, node.id);\n                });\n            }\n        });\n\n        // 左右按键\n        $(\"#btnR\").on(\"click\", function () {\n            if (tree1.select().length > 0) {\n                if (accessAll === false) {\n                    nodePath = _getPath(tree1, tree1.select());\n                    nodeSwap(tree2, nodePath);\n                } else {\n                    _.each(map2FlatX([tree1.dataItem(tree1.select())]), function(node){\n                        nodeMove(tree1, tree2, node.id);\n                    });\n                }\n            } else {\n                WindowUtil({title: '提示', content: '<h4>请选择一个节点</h4>', width: 300, height: 100});\n            }\n        });\n        $(\"#btnL\").on(\"click\", function () {\n            if (tree2.select().length > 0) {\n                if (accessAll === false) {\n                    nodePath = _getPath(tree2, tree2.select());\n                    nodeSwap(tree1, nodePath);\n                } else {\n                    _.each(map2FlatX([tree2.dataItem(tree2.select())]), function(node){\n                        nodeMove(tree2, tree1, node.id);\n                    });\n                }\n            } else {\n                WindowUtil({title: '提示', content: '<h4>请选择一个节点</h4>', width: 300, height: 100});\n            }\n        });\n    };\n\n    // 挂载到IPLAT上,开发人员可以拿到这个树list\n    IPLAT.Trees = trees;\n\n})(jQuery);\n\nfunction nodeSwap(treeview, path) {\n    $.each(path, function (i, item) {\n        var itemById = treeview.dataSource.get(item.id);\n        if (itemById && treeview.parent(treeview.findByUid(itemById.uid)).length === 0) {\n            var traversal = function (nodes) {\n                for (var i = 0; i < nodes.items.length; i++) {\n                    var childs = nodes.items[i];\n                    if (!treeview.dataSource.get(childs.id)) {\n                        $.each(treeview.findByUid(treeview.dataSource.get(nodes.id).uid), function (j, node) {\n                            treeview.append({id: childs.id, text: childs.text}, $(node));\n                        });\n                    }\n                    if (childs.items) {\n                        traversal(childs);\n                    }\n                }\n            };\n            traversal(item);\n        } else {\n            treeview.append([item]);\n        }\n    });\n    treeview.select($());\n}\n\n// 获取节点路径\nfunction _getPath(treeview, node) {\n    var removeNode = treeview.dataItem(node);\n    var appendNodes = [];\n    $.each(treeview.findByUid(treeview.dataSource.get(removeNode.id).uid), function (i, item) {\n        var parentNode = treeview.parent($(item));\n        appendNodes[i] = {id: treeview.dataItem($(item)).id, text: treeview.dataItem($(item)).text, items: treeview.dataItem($(item)).items || []};\n        while (parentNode.length != 0) {\n            appendNodes[i] = {id: treeview.dataItem(parentNode).id, text: treeview.dataItem(parentNode).text, items: [appendNodes[i]]};\n            if (treeview.parent(parentNode).length === 0) {\n                break;\n            }\n            parentNode = treeview.parent(parentNode);\n        }\n        treeview.remove($(item));\n        if (parentNode.length > 0 && treeview.dataItem(parentNode).items.length === 0) {\n            treeview.remove(parentNode);\n        }\n    });\n\n    return appendNodes;\n}\n\n// 通过uid获取节点路径\nfunction _getPathByUid(treeview, uid) {\n    var appendNodes = [];\n        var item = treeview.findByUid(uid);\n        var parentNode = treeview.parent($(item));\n        appendNodes.push({id: treeview.dataItem($(item)).id, text: treeview.dataItem($(item)).text, items: treeview.dataItem($(item)).items || []});\n        while (parentNode.length != 0) {\n            appendNodes.push({id: treeview.dataItem(parentNode).id, text: treeview.dataItem(parentNode).text, items: [appendNodes.pop()]});\n            if (treeview.parent(parentNode).length === 0) {\n                break;\n            }\n            parentNode = treeview.parent(parentNode);\n        }\n        treeview.remove($(item));\n        if (parentNode.length > 0 && (treeview.dataItem(parentNode).children._data.length === 0)) {\n            treeview.remove(parentNode);\n        }\n\n    return appendNodes;\n}\n\nfunction map2FlatX(data, itemsName) {\n    // var map = data.toJSON(),\n    var map = data,\n        ITEMS_NAME = itemsName || 'items';\n    var list = [];\n    var _map2Array = function (arrayList) {\n        $.each(arrayList, function (i, array) {\n            if (array[ITEMS_NAME] && array[ITEMS_NAME].length > 0) {\n                _map2Array(array[ITEMS_NAME]);\n            }\n            list.push(array);\n            // delete array[ITEMS_NAME];\n        })\n    };\n    _map2Array(map);\n    return list;\n}\n\n// 移动节点\nfunction nodeMove(tree1, tree2, nodeId){\n    // var nodeId = tree1.dataItem(this).id,   // \"treeEname_nodeEname\"\n    var nodeEname = nodeId.split(\"_\")[1];   // nodeEname值\n    var dsFlat = map2FlatX(tree1.dataSource.data());\n    _.each(dsFlat, function (item) {\n        if (item.id.split(\"_\")[1] == nodeEname) {   // nodeEname值相同\n            var nodePath = _getPathByUid(tree1, item.uid);\n            nodeSwap(tree2, nodePath);\n        }\n    });\n}\n\n\n\n\n;(function ($) {\n    var IPLAT = window.IPLAT || {};\n    var extend = $.extend;\n    var DEFAULT_INTERVAL_HEIGHT = 160;\n\n    // 初始化tab\n    function initTab(option) {\n        var tab = $(\"#\" + option.tabId);\n        var tabContent = tab.children();\n        var data = [];\n        var options = extend({}, {tabPosition: option.tabPosition,scrollable: {distance: 200}}, IPLATUI.EFTab[option.tabId]);\n        for (var i = 0; i < tabContent.length; i++) {\n            data[i] = {\n                title: tabContent.eq(i).attr(\"title\"),\n                contentUrl: tabContent.eq(i).attr(\"data-src\")\n            }\n        }\n        if (\"src\" != option.content) {\n            var holder = \"<li></li>\";\n            var title = \"<ul>\";\n            for (var j = 0; j < tabContent.length; j++) {\n                title += \"<li>\" + data[j].title + \"</li>\";\n            }\n            title = title + holder + \"</ul>\";\n            tab.prepend(title);\n            tab.kendoTabStrip(options).data(\"kendoTabStrip\");\n        } else {\n            tab.html(\"\");\n            data[data.length] = {title: \"\", contentUrl: \"\"};\n            options = extend({\n                dataTextField: \"title\",\n                dataContentUrlField: \"contentUrl\"\n            }, options, {dataSource: data});\n            tab.kendoTabStrip(options).data(\"kendoTabStrip\");\n        }\n    }\n\n    // 动态加载\n    function sload(tabId) {\n        var tabDiv = $(\"#\" + tabId),\n            tabReload = tabDiv.find(\"ul>li>span:nth-child(1)\"),\n            tabstrip = tabDiv.data(\"kendoTabStrip\");\n        tabReload.on(\"click\", function () {\n            var onShow = $.inArray(tabDiv.find(\"ul>li.k-state-active>span.k-link\")[0], tabReload);\n            var index = $.inArray(this, tabReload);\n            if (onShow != index) {\n                tabstrip.reload(tabstrip.tabGroup.children().eq(index));\n            }\n        })\n    }\n\n    // 添加按钮remove tabstrip items\n    function deleteTab(tabId) {\n        var tabsElements = $('#' + tabId + '>ul>li[role=\"tab\"]'),\n            tabAddDeleteButton = $(\"#\" + tabId).data(\"kendoTabStrip\");\n        tabsElements.append('<span data-type=\"remove\" class=\"k-link\"><span class=\"k-icon k-i-close\"></span></span>');\n        tabAddDeleteButton.tabGroup.on(\"click\", \"[data-type='remove']\", function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var item = $(e.target).closest(\".k-item\");\n            tabAddDeleteButton.remove(item.index());\n            if (tabAddDeleteButton.items().length > 0 && item.hasClass('k-state-active')) {\n                tabAddDeleteButton.select(0);\n            }\n        });\n    }\n\n    //去除占位\n    function removeHolder(ID) {\n        var tabStrip = $('#' + ID).data(\"kendoTabStrip\");\n        var tabLi = $('#' + ID + '>ul>li[role=\"tab\"]');\n        tabStrip.remove(tabLi.length - 1);\n    }\n\n    IPLAT.Tab = function (options) {\n        initTab(options);\n        var active = options.active || 0;\n        if (\"true\" == options.state) {\n            sload(options.tabId)\n        }\n        if (\"true\" == options.showClose) {\n            deleteTab(options.tabId);\n            removeHolder(options.tabId);\n        } else {\n            removeHolder(options.tabId);\n        }\n        $(\"#\" + options.tabId).data(\"kendoTabStrip\").select(active);\n    };\n\n    // 延迟加载Tab，主要是针对iframe\n    IPLAT.lazyTab = function(options) {\n        var tabSelector = options.tabId,\n            active = options.active || 0;\n        if (!tabSelector) {\n            return ;\n        }\n        var tabStrip = $(tabSelector).kendoTabStrip({\n            select: function (e) {\n                var contentElement = e.contentElement;\n                var src = $(contentElement).data('src');\n                if (!!src) {\n                    var $iframe = $('<iframe>');\n                    $(contentElement).removeData('src');\n                    $(contentElement).removeAttr('data-src');\n                    $iframe.appendTo($(contentElement));\n                    $iframe.attr('width', '100%');\n                    $iframe.attr('height', $(window).height() - DEFAULT_INTERVAL_HEIGHT);\n                    $iframe.attr('frameborder', '0');\n                    $iframe.attr('src', src);\n                }\n            }\n        }).data(\"kendoTabStrip\");\n        setTimeout(function() {\n            tabStrip.select(active);\n        }, 0)\n\n    }\n})(jQuery);\n\n;(function ($) {\n    var HierarchicalDataSource = kendo.data.HierarchicalDataSource,\n        isFunction = $.isFunction,\n        isArray = $.isArray,\n        each = $.each,\n        extend = $.extend,\n        isString = _.isString,\n\n        WindowUtil = IPLAT.WindowUtil,\n        NotificationUtil = IPLAT.NotificationUtil,\n        Notification = IPLAT.Notification,\n\n        showVirtualRoot = true,\n        ON_SUCCESS = \"onSuccess\",\n        ON_FAIL = \"onFail\",\n        NS = \".IPLAT\",\n        PID = \"inqu_status-0-node\",\n        __ROOT__ = \"$\", // $$root$$ 默认表示根结点\n        VIRTUAL_ROOT = \"ROOT\", // 虚拟的根节点配置项\n        LOAD_COMPLETE = \"loadComplete\"; //定义加载完成后事件\n\n    /**\n     * flatData --> hierarchical map\n     * 把flatData数组转换为map结构的对象 [id:,pid] ==> {id:,children:[{id:, children:[]}]}\n     * @param {Array} data id,pid格式的数组数据\n     * @param idField 结点的字段名\n     * @param parentId 父结点的字段名\n     * @param rootLevel 指定结点Id，用户获取该结点下的items\n     * @return {*}\n     */\n    function flat2Map(data, idField, parentId, rootLevel) {\n        var map = {};\n\n        for (var i = 0; i < data.length; i++) {\n            var item = data[i];\n            var id = item[idField];\n            var pid = item[parentId];\n\n            map[id] = map[id] || [];\n            map[pid] = map[pid] || [];\n\n            item.items = map[id]; // schema model中的children: \"items\"\n            map[pid].push(item);\n        }\n\n        return map[rootLevel];\n    }\n\n\n    /**\n     * 把EiBlock中的原始数据，转换成kendoTree需要的数据格式\n     * @param options 树的配置项\n     * @param data EiBlock中的mappedRows JSON数据\n     */\n    var transformTreeData = function (options, data) {\n        var idField = options['valueField'],\n            textField = options['dataTextField'] || idField,\n            hasChildren = options['hasChildren'];\n\n        return _.map(data, function (item) {\n            item['id'] = item[idField];\n            item['text'] = item[textField] || \"\";\n\n            if (!_.isBoolean(item[hasChildren])) {\n                item[hasChildren] = !(parseInt(item[hasChildren]) === 1);\n            }\n\n            return item;\n        });\n    };\n\n\n    /**\n     * 一次性加载全部的树节点，数据请求的函数\n     * @param widget 封装的EFTree组件对象\n     * @param rootId 初始查询的根节点\n     * @param callback 回调处理\n     * @return {*}\n     * @constructor\n     */\n    var TreeCommunicator = function (widget, rootId, callback) {\n        var postEiInfo = new EiInfo(),\n            options = widget.options,\n            serviceName = options.serviceName,\n            methodName = options.methodName;\n\n        postEiInfo.set(PID, rootId);\n\n        return EiCommunicator.send(serviceName, methodName, postEiInfo, {\n            onSuccess: function (ajaxEi) {\n                try {\n                    var allNodes = ajaxEi.getBlock(rootId).getMappedRows();\n\n                    if (isFunction(callback)) {\n                        callback.call(null, transformTreeData(options, allNodes));\n                    }\n                }\n                catch (e) {\n                    widget.trigger(ON_FAIL + NS, {errorMsg: \"缺少数据块[\" + rootId + \"]\", xhr: null});\n                }\n\n\n            }, onFail: function (error) {\n                widget.trigger(ON_FAIL + NS, {errorMsg: error, xhr: null});\n            }\n        });\n    };\n\n    /**\n     * 使用kendo.ui.Widget,\n     * 探索抽象  应对应用的功能扩展定制需求\n     */\n    var Widget = kendo.ui.Widget,\n        TreeView = kendo.ui.TreeView,\n        EFTree;\n\n    EFTree = Widget.extend({\n        init: function (element, options) {\n            var that = this,\n                virtualRoot,\n                proxyVirtualRoot = {},\n                treeOptions = IPLATUI.EFTree[options.treeId]; // JS中配置的options\n\n            that.element = element;\n\n\n            var initOptions = that.options = extend({}, options, treeOptions);\n\n            // 手动设置根结点\n            virtualRoot = that.options[VIRTUAL_ROOT];\n\n            showVirtualRoot = true; // 显示手动设置的虚拟根结点\n\n            if (_.isEmpty(virtualRoot)) {\n                proxyVirtualRoot[initOptions['valueField']] = __ROOT__;\n                virtualRoot = proxyVirtualRoot;\n                showVirtualRoot = false;\n            }\n            if (isString(virtualRoot)) { // 指定初始查询的根结点的Id，区别于__ROOT__, 但仍不显示虚拟的根结点\n                proxyVirtualRoot[initOptions['valueField']] = virtualRoot;\n                virtualRoot = proxyVirtualRoot;\n                showVirtualRoot = false;\n            }\n            if (!_.isObject(virtualRoot)) {\n                proxyVirtualRoot[initOptions['valueField']] = __ROOT__;\n                virtualRoot = proxyVirtualRoot;\n                showVirtualRoot = false;\n            }\n\n            that.showVirtualRoot = showVirtualRoot;\n            that.virtualRoot = virtualRoot;\n\n            that._init();\n        },\n\n        _init: function () {\n            var that = this,\n                loadOnDemand,\n                options = that.options;\n\n            var originalDataSource = options.dataSource;\n\n            if (!originalDataSource) {\n                loadOnDemand = !(options.once || false);\n\n                if (loadOnDemand) { // 分层按需加载树结点\n                    that._loadOnDemand();\n                } else { // 一次加载所有的结点\n                    that._loadStatic();\n                }\n            }\n        },\n\n        _loadStatic: function () {\n            var that = this,\n                id,\n                parentId,\n                rootId,\n                kendoTreeInstance,\n                virtualRoot = that.virtualRoot,\n                options = that.options;\n\n            id = options['valueField'];\n            parentId = options['pid'];\n            rootId = virtualRoot[options['valueField']];\n\n            if (!options['dataTextField']) {\n                options['dataTextField'] = options['textField'];\n            }\n\n            TreeCommunicator(that, rootId, function (data) {\n                var allNodes = flat2Map(data, id, parentId, rootId);\n                var dataSource = [];\n                if (!!virtualRoot[options['textField']]) { // showVirtualRoot显示手动设置的虚拟结点\n                    virtualRoot['items'] = allNodes;\n                    dataSource = [virtualRoot];\n                } else {\n                    dataSource = allNodes;\n                }\n                options.dataSource = {data: dataSource};\n                options.loadOnDemand = false;\n\n                kendoTreeInstance = that.element.kendoTreeView(options).data(\"kendoTreeView\");\n\n                if (isFunction(options[LOAD_COMPLETE])) {\n                    options[LOAD_COMPLETE].call(kendoTreeInstance, options);\n                }\n            });\n        },\n\n        _loadOnDemand: function () {\n            var that = this,\n                kendoTreeInstance,\n                parentId,\n                dataSource,\n                ajaxEi,\n                resultBlock,\n                options = that.options,\n                showVirtualRoot = that.showVirtualRoot,\n                virtualRoot = that.virtualRoot;\n\n            dataSource = new HierarchicalDataSource({\n                transport: {\n                    read: {\n                        url: options.url + \"/service/\" + options.serviceName + \"/\" + options.methodName,\n                        dataType: \"json\",\n                        contentType: \"application/json\",\n                        type: 'POST'\n                    },\n                    parameterMap: function (params, operation) {\n                        var postEiInfo = new EiInfo();\n                        // virtualRoot[\"id\"]\n                        parentId = params[options['valueField']] || virtualRoot[options['valueField']];\n\n                        if (operation === \"read\") {\n                            that.parentId = parentId;\n                            postEiInfo.set(PID, parentId);\n\n                            if (isFunction(options[\"query\"])) {\n                                var model = that.options.dataSource.get(parentId);\n                                options[\"query\"].call(that, postEiInfo, model);\n                            }\n                        }\n\n                        return postEiInfo.toJSONString();\n                    }\n                },\n                schema: {\n                    model: {\n                        id: options.valueField,\n                        // text: options.textField,\n                        hasChildren: options.hasChildren\n                    },\n\n                    data: function (response) {\n                        var showVirtualRoot = that.showVirtualRoot,\n                            hasChildren = options[\"hasChildren\"],\n                            virtualRoot = that.virtualRoot;\n                        // virtualRoot['label'] = virtualRoot['id'];\n\n                        if (showVirtualRoot) { // 显示手动查询\n                            that.showVirtualRoot = false;\n                            return [virtualRoot];\n                        } else {\n                            parentId = that.parentId;\n                            try {\n                                ajaxEi = EiInfo.parseJSONObject(response);\n                                var treeNodes = ajaxEi.getBlock(parentId).getMappedRows();\n\n                                each(treeNodes, function (index, treeNode) {\n                                    if (!_.isBoolean(treeNode[hasChildren])) {\n                                        treeNode[hasChildren] = !(parseInt(treeNode[hasChildren]) === 1);\n                                    }\n                                });\n                            } catch (e) {\n                                that.trigger(ON_FAIL + NS, {errorMsg: \"缺少数据块[\" + parentId + \"]\", xhr: null});\n                            }\n\n                            return treeNodes;\n                        }\n                    }\n                },\n                error: function (e) {\n                    // 两种错误: 1.数据请求异常（ajax e.xhr）\n                    //          2.业务异常(e.errors)\n                    var blockId = that.parentId,\n                        errors = e.errors || (e.xhr && \"表格[\" + blockId + \"]操作失败，\" +\n                            \"原因[\" + e.xhr.responseText.split(\"$$$\")[0] + \"]\");\n\n                    if (!that.trigger(ON_FAIL + NS, {errorMsg: e.errors, xhr: e.xhr})) {\n                        // NotificationUtil(errors, Notification.ERROR);\n                    }\n                },\n\n                requestEnd: function (e) {\n                    // e => sender(DataSource) response(JSON) type(\"read\", \"create\" ...)\n\n                    var blockId = that.parentId,\n                        response = e.response; // EiInfoJSON\n\n                    ajaxEi = null;\n\n                    if (isArray(response) && that.showVirtualRoot) {\n                        return;\n                    }\n\n                    try {\n                        ajaxEi = EiInfo.parseJSONObject(response);\n                        resultBlock = ajaxEi.getBlock(blockId);\n\n\n                        if (status === 0) {\n                            if (!that.trigger(ON_SUCCESS + NS, {eiInfo: ajaxEi})) {\n                                // NotificationUtil(msgHtml, Notification.SUCCESS);\n                            }\n                        } else if (status > 0) {\n                            // 修改，删除的场景返回的status > 0\n                            if (!that.trigger(ON_SUCCESS + NS, {eiInfo: ajaxEi})) {\n                                // NotificationUtil(msgHtml, Notification.WARNING);\n                            }\n                        } else {\n                            // 注意：trigger error 将导致Grid的操作复原\n                            that.trigger(\"error\", e);\n                        }\n                    } catch (error) {\n                        // 数据提交失败，会自动触发error事件\n                    }\n                }\n            });\n\n\n            extend(options, {autoBind: !showVirtualRoot, dataSource: dataSource});\n\n            if (!options['dataTextField']) {\n                options['dataTextField'] = options['textField'];\n            }\n\n            kendoTreeInstance = that.element.kendoTreeView(options).data(\"kendoTreeView\");\n\n            if (showVirtualRoot) {\n                kendoTreeInstance.dataSource.success(virtualRoot);\n            }\n\n            if (isFunction(options[LOAD_COMPLETE])) {\n                options[LOAD_COMPLETE].call(kendoTreeInstance, options);\n            }\n\n        }\n    });\n\n    // IPLAT.EFTree = EFTree;\n\n    // 挂载到IPLAT上 树已经被封装\n    IPLAT.TreeView = function (options) {\n        new EFTree($(\"#\" + options.treeId), options);\n    };\n\n    kendo.ui.TreeView.fn.reload = function (nodeName) {\n        //  找到父亲结点\n        var node = this.dataSource.get(nodeName);\n\n        if (node) {\n            // 重新设置flag , 这样才能重新使其到服务器获取数据\n            node.loaded(false);\n            // 重新加载\n            node.load();\n        }\n    };\n\n})(jQuery);\n\n(function ($) {\n    var IPLAT = window.IPLAT || {},\n        tree_defaults,\n        transport_defaults,\n        TreeListDataSource = kendo.data.TreeListDataSource,\n        isArray = $.isArray,\n        isPlainObject = $.isPlainObject,\n        each = $.each,\n        extend = $.extend;\n\n\n    transport_defaults = {\n        read: {\n            type: 'POST',\n            dataType: \"json\",\n            contentType: \"application/json\"\n        },\n        create: {\n            type: 'POST',\n            dataType: \"json\",\n            contentType: \"application/json\"\n        },\n        update: {\n            type: 'POST',\n            dataType: \"json\",\n            contentType: \"application/json\"\n        },\n        destroy: {\n            type: 'POST',\n            dataType: \"json\",\n            contentType: \"application/json\"\n        }\n    };\n\n    // TreeList的中文culture和message存在问题\n    tree_defaults = {\n        culture: \"zh-CN\",\n        toolbar: [\"create\"],\n        editable: true,\n        resizable: true,\n        selectable: \"multiple, row\"\n    };\n\n    // 覆盖column的配置信息\n    function _extendColumns(preColumns, baseColumns) {\n        // preColumns是优先级高的数组，会覆盖baseColumns中的同名（field）元素\n        // preColumns中其他的（不存在于baseColumns中的）元素，追加到baseColumns末尾\n\n        if (isArray(preColumns) && preColumns.length > 0) {\n            each(baseColumns, function (i, baseColumn) {\n                each(preColumns, function (j, preColumn) {\n                    if (baseColumn.field == preColumn.field) {\n                        extend(baseColumns[i], preColumn); // 列名相同时，原生配置覆盖后台配置\n                        preColumns[j] = {}; // 标记清除原生配置\n                    }\n                });\n            });\n\n            // 处理原生配置中不存在于EiBlock中的列，默认在列的最后。例如，自定义的按钮列。\n            each(preColumns, function (i, column) {\n                if (column.field) {\n                    baseColumns.push(column);\n                }\n            });\n        }\n    }\n\n\n    function _beforeInit(options) {\n\n        var blockId = options.blockId;\n        var eiInfo = options.eiInfo;\n        var eiBlock = eiInfo.getBlock(blockId);\n\n        // 构造默认的datasource\n        var _init_datasource = function (options) {\n\n            return {\n                batch: true, // 一次请求提交多条数据\n                serverFiltering: true, // 服务端过滤\n                serverPaging: true, // 服务端分页\n                serverSorting: true, // 服务端排序\n\n                transport: transport_defaults,\n                schema: {\n                    data: function (response) {\n                        ajaxEi = EiInfo.parseJSONObject(response);\n                        var data = ajaxEi.getBlock(blockId).getMappedRows();\n                        $.map(data, function (e, i) {\n                            if (e[options.parentId] == \"$$root$$\") {\n                                e[options.parentId] = null;\n                            }\n\n                            e.hasChildren = e[options.hasChildren] == \"0\";\n                            return e;\n                        });\n                        return data;\n                        // return ajaxEi.getBlock(blockId).getMappedRows();\n                    },\n                    total: function (response) {\n                        ajaxEi = EiInfo.parseJSONObject(response);\n                        return ajaxEi.getBlock(blockId).get(EiConstant.COUNT) || 1000;\n                    }\n                }\n                // requestEnd: function (e) {\n                //     var response = e.response;\n                //     var ajaxEi = EiInfo.parseJSONObject(response);\n                //     if (ajaxEi && ajaxEi.extAttr) {\n                //         var msgHtml = kendo.template($(\"#msg-template\").html())({\n                //             formEname: ajaxEi.extAttr[EiConstant.EF_CUR_FORM_ENAME] || \"\",\n                //             msg: ajaxEi.msg.replace(/\\n/g,\"<br/>\"),\n                //             detailMsg:\"1\"\n                //         });\n                //\n                //         if (ajaxEi.status >= 0) {\n                //             NotificationUtil(msgHtml);\n                //         } else {\n                //             NotificationUtil(msgHtml, \"error\");\n                //         }\n                //     }\n                // }\n            };\n        };\n\n        var datasource_defaults = _init_datasource(options);\n\n\n        var kendoColumns;\n        var modelFields = {};\n        var tagColumns = IPLAT.EFTreeList[blockId].columns;\n\n        if (options.autoDraw == \"no\" || options.autoDraw == \"false\") {\n            kendoColumns = tagColumns; // 已经是kendo接受的格式，转换在EFTreeColumn Tag中进行\n        } else {\n            var blockMeta = eiBlock.getBlockMeta().getMetas(); // EiColumn\n            kendoColumns = _.chain(blockMeta).map(function (eiColumn) {\n                // 将EiColumn中的属性映射成kendoColumns的配置\n                var columnJSON = eiColumn.toJSON();\n                // 数字类型的处理 \"N\", \"C\"\n                var align = columnJSON.type == \"N\" ? \"right\" : \"left\";\n\n                delete columnJSON.editor;\n\n                return extend(columnJSON, {\n                    field: columnJSON.name,\n                    title: columnJSON.descName,\n\n                    hidden: !columnJSON.visible, // 隐藏列\n                    locked: columnJSON.fix, // 固定列\n                    width: columnJSON.width || 150,\n\n                    attributes: {\n                        align: align\n                    }\n                });\n            }).sortBy(\"pos\").value();\n\n            if (options.autoDraw == \"mixed\") {\n                _extendColumns(tagColumns, kendoColumns);\n            }\n        }\n\n        // 优先级最高的配置, 支持kendo的所有原生配置\n        var preOptions = extend({}, IPLATUI.EFTreeList[blockId]);\n\n        // 处理kendo的配置，优先级最高。高级用法，用于自定义列\n        if (isArray(preOptions.columns)) {\n            _extendColumns(preOptions.columns, kendoColumns);\n            delete preOptions.columns;\n        }\n\n        // handle modelFields\n        each(kendoColumns, function (i, column) {\n            column.width = column.width || 150; // JS中的列\n            modelFields[column.field] = {\n                editable: column.enable,\n                defaultValue: column.defaultValue || \"\"\n                // validation: { // TODO: parse validate rules\n                //     // required: !column.nullable,\n                //     // minLength: 4,\n                //     // 'data-rules': \"email\",\n                //     // 'data-regex': \"/^([5-9]|100|[1-9]\\\\d)$/\",\n                //     // 'data-errorPrompt': \"请输入5-qunilaom\"\n                // }\n                // type: \"number\"\n            };\n\n            if (column.field == options.parentId) {\n                modelFields[column.field][\"field\"] = options.parentId;\n                modelFields[column.field][\"nullable\"] = true;\n            }\n\n            if (column.field == options.id) {\n                column.expandable = true;\n            }\n        });\n\n        // if (options.enable) {\n        //     // checkbox列 批量选中操作\n        //     var checkColumn = [{\n        //         headerTemplate: \"<input type='checkbox' class='check-all ' data-click='checkAll' style='text-align: center' />\",\n        //         template: '<input type=\"checkbox\" value=#=uid# class=\"kendo-check-box check-one\" style=\"text-align:center\" />',\n        //         width: '30px',\n        //         locked: true\n        //     }];\n        //\n        //     kendoColumns = checkColumn.concat(kendoColumns);\n        // } else {\n        //     // 所有的列都无法编辑， 工具栏的按钮应该失效\n        // }\n\n        kendoColumns.push({command: [{name: \"edit\", text: \"编辑\"}, {name: \"destroy\", text: \"删除\"}], width: 150});\n\n        extend(options, {\n            columns: kendoColumns\n        });\n\n\n        var dataSource;\n        var serviceName = options[EiConstant.SERVICE_NAME] || eiInfo.get(EiConstant.SERVICE_NAME);\n        var CREATE = \"insert\",\n            READ = \"query\",\n            UPDATE = \"update\",\n            DESTROY = \"delete\";\n\n        var methodName = READ;\n\n        READ = options[\"queryMethod\"] || READ;\n        CREATE = options[\"insertMethod\"] || CREATE;\n        UPDATE = options[\"updateMethod\"] || UPDATE;\n        DESTROY = options[\"deleteMethod\"] || DESTROY;\n\n        var efSecurityToken = $(\"#efSecurityToken\").val();\n\n        // dataSource的处理\n        if (options.strict) {\n            // 严格模式，完全遵循kendo的格式配置dataSource\n            dataSource = options.dataSource;\n\n        } else {\n            if (options.url) {\n                dataSource = extend(true, {}, datasource_defaults, {\n                    transport: {\n                        read: {url: options.url+\"/service/\" + serviceName + \"/\" + READ},\n                        create: {url: options.url+\"/service/\" + serviceName + \"/\" + CREATE},\n                        update: {url: options.url+\"/service/\" + serviceName + \"/\" + UPDATE},\n                        destroy: {url: options.url+\"/service/\" + serviceName + \"/\" + DESTROY},\n                        parameterMap: function (options, operation) {\n                            var info = new EiInfo();\n                            info.setByNodeObject(document.body);\n\n                            var block = info.getBlock(options.blockId);\n                            if (!isAvailable(block)) {\n                                block = new EiBlock(eiBlock.getBlockMeta());\n                                info.addBlock(block);\n                            }\n\n                            block.setAttr(eiBlock.getAttr());\n\n                            if (operation == \"read\") {\n                                methodName = READ;\n                                if (options.pageSize >= 0 && options.skip >= 0) {\n                                    block.set(EiConstant.LIMIT, options.pageSize);\n                                    block.set(EiConstant.OFFSET, options.skip);\n                                    block.set(EiConstant.SHOW_COUNT, true);\n                                }\n\n                            } else {\n                                if (operation == \"create\") {\n                                    methodName = CREATE;\n\n                                } else if (operation == \"update\") {\n                                    methodName = UPDATE;\n\n                                } else if (operation == \"destroy\") {\n                                    methodName = DESTROY;\n\n                                }\n\n                                // 将选中的行放到block的rows数组内\n                                $.each(options.models, function (i, row) {\n                                    // 单元格默认值的处理和数据库的字段类型关系\n                                    block.addRow(block.getMappedArray(row, true));\n                                });\n                            }\n\n                            return info.toJSONString();// 完整的EFColumn元数据信息\n                        }\n                    },\n\n                    schema: {\n                        model: {\n                            id: options.id,\n                            parentId: options.parentId,\n                            fields: modelFields\n                        }\n                    }\n                }, options.dataSource);\n\n            } else {\n                dataSource = extend(true, {}, datasource_defaults, options.dataSource);\n            }\n        }\n\n        // 处理grid的列 校验和数据类型type\n\n        each(options.columns, function (i, column) {\n            // 处理column的type和 校验\n            switch (column.type) {\n                // case 'boolean':\n                //     ;\n                //     break;\n\n                case 'date':\n                case 'datetime':\n                    // 注意column的format是个json的字符串,value 最终的格式以DATE_FORMAT为准\n                    column.format = \"{0:\" + column.dateFormat + \"}\";\n\n                    column.editor = function (container, options) {\n                        var input = $('<input />');\n                        input.attr(\"name\", options.field);\n                        input.attr(\"id\", \"__colDate_\" + options.field);\n                        input.appendTo(container);\n\n                        var dateOptions = extend({\n                            dateId: \"__colDate_\" + options.field,\n                            format: column.dateFormat,\n                            parseFormats: column.parseFormats,\n                            role: column.type\n\n                        }, column.dynamic);\n\n                        IPLAT.Date(dateOptions);\n                    };\n                    break;\n\n                case 'combo':\n                case 'dropdown':\n                    column.editor = function (container, options) {\n                        var input = $('<input />');\n                        input.attr(\"name\", options.field);\n                        input.appendTo(container);\n\n                        input.kendoDropDownList({\n                            valuePrimitive: true,\n                            dataTextField: column.textField,\n                            dataValueField: column.valueField,\n                            dataSource: column.values\n                        });\n                    };\n                    break;\n\n                default:\n                    break;\n            }\n        });\n\n\n        delete options.dataSource;\n\n        return extend({}, {dataSource: dataSource}, tree_defaults,\n            //     {\n            //     toolbar: kendo.template(\"<div id='ef_treelist_toolbar_\" + blockId + \"' class='grid_toolbar '></div>\")\n            // },\n            options, preOptions);\n\n    }\n\n    IPLAT.TreeList = function (options) {\n        options = _beforeInit(options);\n        var treeInstance, $tree = $(\"#ef_treelist_\" + options.blockId);\n        treeInstance = $tree.kendoTreeList(options).data(\"kendoTreeList\");\n\n        return treeInstance;\n    };\n\n})(jQuery);\n;(function ($) {\n    var each = $.each,\n        extend = $.extend,\n        Upload = kendo.ui.Upload,\n        EFUpload,\n        Widget = kendo.ui.Widget,\n        contextPath = IPLATUI.CONTEXT_PATH,\n\n        initUrl = contextPath + \"/EU/DM/EUDM07.jsp\",    // 查询单个附件，或者附件组的信息 JSON格式\n        saveUrl = contextPath + \"/EU/DM/EUDM04.jsp\",    // 附件上传的Servlet\n        downloadUrl = contextPath + \"EU/DM/EUDM06.jsp\", // 附件下载的Servlet\n        removeUrl = contextPath + \"/EU/DM/EUDM08.jsp\",  // 附件删除的Servlet\n        onUpload,\n        NS = \".IPLAT\",\n        LOAD_COMPLETE = \"loadComplete\",\n\n        MAX_SIZE = 10;\n\n\n    EFUpload = Widget.extend({\n        init: function (element, options) {\n            var that = this,\n                preOptions = {},\n                path = options.path,\n                docTag = options.docTag,\n                asyncDefaults = {\n                    async: {\n                        saveUrl: saveUrl,\n                        batch: false // 上传一个附件一个请求\n                    }\n                };\n            that._events = {};\n\n            that.element = element;\n            that.uploader = null;\n\n            preOptions = IPLATUI.EFUpload[options.ename];\n\n            // if (!options.readonly) {\n            asyncDefaults.async.removeUrl = removeUrl;\n            // }\n\n            that.options = extend(true, {}, options, asyncDefaults, preOptions);\n\n            if (options.__keep__) { // changSetting  防止preOptions的覆盖\n                that.options.path = path || that.options.path;\n                that.options.docTag = docTag || that.options.docTag;\n                options.__keep__ = false;\n            }\n\n            that.bind(LOAD_COMPLETE + NS, that.options[LOAD_COMPLETE]);\n\n            that.initFileList();\n            // options.showFileList = false; // 临时文件上传时 不显示文件信息\n\n        },\n\n        initFileList: function () {\n            var that = this,\n                docTag = that.options.docTag;\n\n            if (docTag !== \"__temp__\") {\n                that.uploaderPromise = $.ajax({\n                    type: \"GET\",\n                    url: initUrl + \"?docTag=\" + docTag,\n                    dataType: \"json\"\n                });\n            } else {\n                that.uploaderPromise = $.Deferred().resolve([]);\n            }\n        },\n\n        _bindEvents: function () {\n            var that = this,\n                path = that.options.path,\n                docTag = that.options.docTag,\n                ename = that.options.ename;\n\n            onUpload = function (e) {\n                e.sender.options.async.saveUrl = saveUrl + \"?\" +\n                    $.param({path: path, docTag: docTag, ename: ename});\n            };\n\n            that.uploader.bind(\"upload\", onUpload);\n\n            that.uploader.bind(\"remove\", function (e) {\n                var params = $.param({docId: e.files[0].docId});\n\n                if (e.files[0].docTag === \"__temp__\") {\n                    params = $.param({docId: e.files[0].docId, docTag: \"__temp__\"});\n                }\n\n                e.sender.options.async.removeUrl = removeUrl + \"?\" + params;\n            });\n\n            that.uploader.bind(\"success\", function (e) {\n                e.files[0].docId = e.response.docId;\n                e.files[0].docTag = e.response.docTag;\n            });\n        },\n\n        changeSettings: function (docTag, path) {\n            var that = this,\n                settings = {\n                    docTag: docTag,\n                    path: path\n                };\n\n            that.resetOptions(settings);\n        },\n\n        resetOptions: function (settings) {\n            var that = this,\n                initDocTag = that.options.docTag,\n                ename = that.options.ename;\n\n            extend(that.options, settings);\n\n            that.options.ename = ename; // ename不允许改变\n\n\n            var options = that.options;\n\n            var path = that.options.path,\n                docTag = that.options.docTag;\n\n            if (that.uploader && docTag !== initDocTag) {\n                that.uploader.destroy();\n                that.destroy();\n\n                options.__keep__ = true;\n                // 重新查询\n                IPLAT.Uploader(options);\n\n            }\n\n            that.uploader.unbind(\"upload\", onUpload);\n\n            that.uploader.bind(\"upload\", function (e) {\n                e.sender.options.async.saveUrl = saveUrl + \"?\" +\n                    $.param({path: path, docTag: docTag, ename: ename});\n            });\n        },\n\n        destroy: function () {\n            var ename = this.options.ename,\n                $input;\n\n            Widget.fn.destroy.call(this);\n\n            $input = $(\"#\" + ename).detach();\n            $(\".upload-\" + ename).empty().append($input);\n\n        }\n\n    });\n\n    IPLAT.Uploader = function (options) {\n        var efUpload = new EFUpload($(\"#\" + options.ename), options);\n\n        efUpload.uploaderPromise.then(function (docs) {\n            var that = efUpload;\n            // 已上传的附件\n            that.options.files = _.map(docs, function (doc) {\n                var extension = doc.docName.match(/\\.[^.]+$/g);\n                if (extension) {\n                    extension = extension[0];\n                } else {\n                    extension = \"\";\n                }\n\n                doc.name = doc.docName;\n                doc.size = doc.docSize;\n                doc.extension = extension;\n                return doc;\n            });\n\n\n            that.uploader =\n                that.element.kendoUpload(that.options).data(\"kendoUpload\");\n\n            if (that.options.readonly) { // 上传控件只读\n                that.uploader.disable();\n            }\n\n            // exports\n            window[that.options.ename + \"Upload\"] = that;\n\n            that._bindEvents();\n\n            that.trigger(LOAD_COMPLETE + NS);\n\n\n        }, function (xmlR, status, e) {\n            // 初始化附件失败\n        });\n\n        return efUpload;\n    };\n\n})(jQuery);\n\n\n\n;(function ($) {\n    var extend = $.extend,\n        // 复用 kendo.ui.Validator 中 _checkValidity 和 _extractMessage\n        // _checkValidity 判断校检是否通过\n        // _extractMessage 获取错误信息\n        _extractMessage = kendo.ui.Validator.fn._extractMessage,\n        _checkValidity = kendo.ui.Validator.fn._checkValidity;\n\n    function validateFunctionWrapper(validateFunction) {\n        return function () {\n            var input = arguments[0],\n                groupName = arguments[1];\n\n            // Grid中的单元格校验不受分组影响\n            var gridCell = input.closest(\"td.k-edit-cell\").length > 0;\n\n            if (input.attr(\"validate\") === \"false\") // 不参与校验\n                return true;\n\n            if (gridCell || _validateGroup(input, groupName)) { // 判断校验分组\n                return validateFunction.apply(null, arguments);\n            }\n            return true;\n        }\n    }\n\n    /**\n     * 替换掉必填项上，label的红色*字符\n     * @param message\n     * @private\n     */\n    function _trimMessage(message) {\n        return message.trim().replace(/^\\*\\s?/, \"\");\n    }\n\n    function _validateGroup(input, groupName) {\n        if (groupName === \"__all__\") { // 校验所有的分组\n            return true;\n        }\n\n        if (groupName === undefined) { // 没有分组\n            groupName = \"__none__\";\n        }\n\n        var value = input.attr(\"validategroupname\") || \"__none__\";\n        var inputGroups = value.split(\",\"); // input元素上的多个分组用\",\"分隔\n        var groups = groupName.split(\",\"); // 想要进行校验的多个分组用\",\"分隔\n        return _.intersection(inputGroups, groups).length > 0;\n    }\n\n    function _initValidator(groupName) {\n        // 内置的规则，正则表达式的维护\n        // 校验时，会顺序检测定义的所有rules。所有要根据input元素上的属性，判断是否需要验证其他的rule\n\n        /* TODO: 分组校验特殊场景\n         * 1. 校验区域内存在分组，和非分组的情况，默认只校验指明的group（没有分组, groupName就是undefined)\n         * 缺点是没法对整个区域进行校验，规定如果要全区域校验，就不要在区域内设置校验分组\n         *\n         * 2. 多个校验分组，同时校验的提示信息 （分组1校验失败，分组2校验成功）\n         *\n         * 3. validate的API，可指明校验多个分组\n         */\n\n\n        return {\n            rules: {\n                required: function (input) { // 更换成平台的rules使用正则表达式\n\n                    if (!input.prop(\"required\") || input.attr(\"validate\") === \"false\") // 不参与校验\n                        return true;\n\n                    // Grid中的单元格校验不受分组影响\n                    var gridCell = input.closest(\"td.k-edit-cell\").length > 0;\n\n                    if (gridCell || _validateGroup(input, groupName)) { // 判断校验分组\n                        return input.val() && !!input.val().length\n                    }\n                    return true;\n                },\n                minLength: function (input) {\n                    if (!input.attr(\"minlength\") || input.attr(\"validate\") === \"false\") // 不参与校验\n                        return true;\n                    // Grid中的单元格校验不受分组影响\n                    var gridCell = input.closest(\"td.k-edit-cell\").length > 0;\n\n                    if (gridCell || _validateGroup(input, groupName)) { // 判断校验分组\n                        var inputValue = input.val(); // 考虑下拉框和其他输入场景\n\n                        // minLength, maxLength, nullable等价于required属性\n                        // HTML5 min max range step是针对type=number处理的\n\n                        var minLength = input.attr(\"minlength\"); // HTML中的属性名都是小写的\n\n                        if (minLength && !isNaN(parseInt(minLength))) {\n                            return inputValue.length >= minLength;\n                        }\n                        return true;\n                    }\n                    return true;\n\n                },\n                maxLength: function (input) {\n                    if (!input.attr(\"maxlength\") || input.attr(\"validate\") === \"false\") // 不参与校验\n                        return true;\n\n                    // Grid中的单元格校验不受分组影响\n                    var gridCell = input.closest(\"td.k-edit-cell\").length > 0;\n\n                    if (gridCell || _validateGroup(input, groupName)) { // 判断校验分组\n                        var inputValue = input.val();\n                        var maxLength = input.attr(\"maxlength\");\n\n                        if (maxLength && !isNaN(parseInt(maxLength))) {\n                            return inputValue.length <= maxLength;\n                        }\n                        return true;\n                    }\n                    return true;\n                },\n\n                email: function (input) {\n                    return validateFunctionWrapper(validatePlatRules)(input, groupName, \"email\", /^([_a-z0-9]|[.]|[\\-])+@(([_a-z0-9]|[\\-])+\\.)+[a-z0-9]+$/i);\n                },\n                mobile_phone: function (input) {\n                    return validatePlatRules(input, groupName, \"mobile_phone\", /^1[34578](\\d{9})$/);\n                },\n                postcode: function (input) {\n                    return validatePlatRules(input, groupName, \"postcode\", /^(\\d{6})$/);\n                },\n                phone_with_area_code: function (input) {\n                    return validatePlatRules(input, groupName, \"phone_with_area_code\", /^\\d{3,4}-\\d{3,11}(-\\d*)?$/);\n                },\n                phone_without_area_code: function (input) {\n                    return validatePlatRules(input, groupName, \"phone_without_area_code\", /^[1-9]\\d{2,10}$/);\n                },\n\n                integer: function (input) {\n                    return validatePlatRules(input, groupName, \"phone_without_area_code\", /^-?[1-9]+\\d*$|^0$/);\n                },\n                positive_integer: function (input) {\n                    return validatePlatRules(input, groupName, \"positive_integer\", /^[1-9]+\\d*$/);\n                },\n                non_negative_integer: function (input) {\n                    return validatePlatRules(input, groupName, \"non_negative_integer\", /^[1-9]+\\d*$|^0$/);\n                },\n                negative_integer: function (input) {\n                    return validatePlatRules(input, groupName, \"negative_integer\", /^-[1-9]+\\d*$/);\n                },\n                http_url: function (input) {\n                    return validatePlatRules(input, groupName, \"http_url\", /^https?:\\/\\/(([a-zA-Z0-9_-])+(\\.)?)*(:\\d+)?(\\/((\\.)?(\\?)?=?&?[a-zA-Z0-9_-](\\?)?)*)*$/i);\n                },\n                number: function (input) {\n                    return validatePlatRules(input, groupName, \"number\", /^-?[1-9]\\d*$|^-?[1-9]\\d*\\.\\d+$|^-?0?\\.\\d+$|0$/);\n                },\n                non_negative_number: function (input) {\n                    return validatePlatRules(input, groupName, \"non_negative_number\", /^[1-9]\\d*$|^[1-9]\\d*\\.\\d+$|^0?\\.\\d+$|0$/);\n                },\n                positive_number: function (input) {\n                    return validatePlatRules(input, groupName, \"positive_number\", /^[1-9]\\d*$|^[1-9]\\d*}\\.\\d+$|^0?\\.\\d+$/);\n                },\n                decimal: function (input) {\n                    return validatePlatRules(input, groupName, \"decimal\", /^-?0?\\.\\d+$/);\n                },\n                label: function (input) {\n                    return validatePlatRules(input, groupName, \"label\", /^[a-z][a-z0-9_]+$/i);\n                },\n                string: function (input) {\n                    return validatePlatRules(input, groupName, \"string\", /^[a-z0-9_]+$/i);\n                },\n                chinese_string: function (input) {\n                    return validatePlatRules(input, groupName, \"chinese_string\", /^([a-z0-9_]|[\\u4E00-\\u9FA5])+$/i);\n                },\n                not_chinese_string: function (input) {\n                    return validatePlatRules(input, groupName, \"not_chinese_string\", /^[^\\u4E00-\\u9FA5]*$/i);\n                },\n                ip_address: function (input) {\n                    return validatePlatRules(input, groupName, \"ip_address\", /^([0-9]|[1-9][0-9]|[1][0-9]{2}|[2][0-4][0-9]|25[0-5])(\\.([0-9]|[1-9][0-9]|[1][0-9]{2}|[2][0-4][0-9]|25[0-5])){3}$/);\n                },\n                text: function (input) {\n                    return validatePlatRules(input, groupName, \"text\", /^([\\w]|[\\W])*$/i);\n                },\n                mac: function (input) {\n                    return validatePlatRules(input, groupName, \"mac\", /^[0-9a-f]{2}([:][0-9a-f]{2}){5}$|^[0-9a-f]{2}([\\-][0-9a-f]{2}){5}$/i);\n                },\n\n                regex: function (input) {\n                    return validateRegExp(input, groupName);\n                }\n            },\n            messages: {\n                required: function (input) {\n                    var id = input.attr('id');\n                    // 变更label中for属性为data-for，防止kendo的bug => label中for属性名称与input的id相同，点击label会触发input的click事件\n                    return _trimMessage(\n                        kendo.format(\"{0}为必填项\", $(\"label[data-for=\" + id + \"]\").text()));\n                },\n\n                minLength: function (input) {\n                    var id = input.attr('id');\n                    return _trimMessage(\n                        kendo.format(\"{0}长度不应该小于{1}\", $(\"label[data-for=\" + id + \"]\").text(), input.attr(\"minlength\")));\n                },\n\n                maxLength: function (input) {\n                    var id = input.attr('id');\n                    return _trimMessage(\n                        kendo.format(\"{0}长度不应该大于{1}\", $(\"label[data-for=\" + id + \"]\").text(), input.attr(\"maxlength\")));\n                },\n                email: \"不是有效的电子邮件地址\",\n                mobile_phone: \"不是有效的手机号码\",\n                postcode: \"不是有效的邮政编码\",\n                phone_with_area_code: \"带区号和分机号的电话号码，格式应如：021-50801155-1004\",\n                phone_without_area_code: \"电话号码应为3-11位的数字，需以非零开头\",\n                integer: \"必须输入整数\",\n                positive_integer: \"必须输入正整数\",\n                non_negative_integer: \"必须输入非负整数\",\n                negative_integer: \"必须输入负整数\",\n                http_url: \"需要以http://或https://开头\",\n                number: \"必须输入数字\",\n                non_negative_number: \"必须输入非负数字\",\n                positive_number: \"必须输入正数字\",\n                decimal: \"必须输入小数\",\n                label: \"仅包含字母数字和下划线，需要以字母开头\",\n                string: \"英文字符串必须仅由字母、数字和下划线组成\",\n                chinese_string: \"中文字符串仅包含中文，英文字母数字和下划线\",\n                not_chinese_string: \"包含非法的中文字符串\",\n                ip_address: \"非法的IP地址\",\n                text: \"非法的字符串\",\n                mac: \"非法的MAC地址\",\n\n                regex: function (input) {\n                    return input.attr(\"__error_msg__\");\n                }\n            }\n        };\n    }\n\n\n    function validateHTML5Rules(input, groupName, platRule, pattern) {\n\n    }\n\n    // 内置校验规则处理 data-rules\n    function validatePlatRules(input, groupName, platRule, pattern) {\n        if (input.attr(\"validate\") === \"false\") // 不参与校验\n            return true;\n\n        var gridCell = input.closest(\"td.k-edit-cell\").length > 0;\n\n        if (gridCell || _validateGroup(input, groupName)) { // 判断校验分组\n            var rules = input.data(\"rules\") || \"\";\n            rules = rules.split(\",\");\n\n            var index = _.findIndex(rules, function (rule) {\n                return rule.trim() === platRule;\n            }); // 查找input配置的校验规则\n\n            if (index < 0) {\n                return true;\n            }\n            return (pattern.test(input.val()));\n        }\n\n        return true;\n    }\n\n    // 多重正则校验 data-rules\n    function validateRegExp(input, groupName) {\n        if (input.attr(\"validate\") === \"false\") // 不参与校验\n            return true;\n\n        var gridCell = input.closest(\"td.k-edit-cell\").length > 0;\n\n        if (gridCell || _validateGroup(input, groupName)) { // 判断校验分组\n            var dataAttributes = input.data() || {}; // errorPrompt\n\n            var regExps = [];\n\n            // 所有的正则校验规则\n            for (var regex in dataAttributes) {\n                if (dataAttributes.hasOwnProperty(regex) && regex.match(/regex\\d*/)) {\n                    regExps.push(regex);\n                }\n            }\n\n            regExps = _.sortBy(regExps, function (value) {\n                var index = -1;\n                if (value.length > 5) // \"regex\".length == 5\n                    index = value.substring(5) * 1;\n                return index;\n            });\n\n            var success = true;\n\n            for (var i = 0; i < regExps.length; i++) {\n                var pattern = eval(dataAttributes[regExps[i]]);\n                success = pattern.test(input.val());\n                if (!success) {\n                    // setErrorPrompt\n                    input.attr(\"__error_msg__\", input.data(\"errorprompt\" + regExps[i].substring(5)));\n                    break;\n                }\n            }\n            return success;\n        }\n        return true;\n    }\n\n    // kendo.ui.validator 默认没有校验规则，但是grid的单元格的校验，检测kendo.ui.validator中的校验规则\n    extend(true, kendo.ui.validator, _initValidator());\n\n    IPLAT.Validator = function (options) {\n        var defaults = _initValidator(options.groupName); // 每个validator定制化的校验规则\n\n        options = $.extend(defaults, options, {iplat_validator: true});\n\n        return $(\"#\" + options.id).kendoValidator(options).data(\"kendoValidator\");\n    };\n\n    // 对象进行校检\n    $.fn.kendoInputValidate = function () {\n        var options = kendo.ui.validator || {},\n            messageText;\n        var result = _checkValidity.call({options: options}, $(this)) || {};\n        if (!result.valid) {\n            messageText = _extractMessage.call({options: options}, $(this), result.key);\n            return extend(result, {errorMsg: messageText});\n        }\n        return result;\n    };\n\n    // 可以进行分组校验\n    kendo.ui.Validator.fn.validate = (function (validate) {\n\n        return function (groupName) {\n            // if (this.options.groupName !== groupName) {\n            this.setOptions(_initValidator(groupName)); // 改变了validator的行为\n            // }\n\n            var result = validate.call(this);\n\n            // 恢复原validator配置\n\n            return result;\n        };\n\n    })(kendo.ui.Validator.fn.validate);\n\n    kendo.ui.Validator.fn.validateInput = (function (validateInput) {\n        return function (input) {\n            var that = this, options = that.options, $input = $(input);\n\n            // grid中的校验\n            var inGrid = $input.closest(\"td\").length > 0;\n\n            if ((options && options['iplat_validator'] === true) || inGrid) {\n                that._isValidated = true;\n\n                var INVALIDINPUT = 'k-invalid',\n                    VALIDINPUT = 'k-valid',\n                    VALIDATE_INPUT = 'validateInput',\n                    result = that._checkValidity(input),\n                    valid = result.valid,\n                    wasValid = !$input.attr('aria-invalid');\n\n                $input.removeAttr('aria-invalid');\n\n                showValidateMsg($input, that);\n\n                if (wasValid !== valid) {\n                    this.trigger(VALIDATE_INPUT, {\n                        valid: valid,\n                        input: $input\n                    });\n                }\n\n                $input.toggleClass(INVALIDINPUT, !valid);\n                $input.toggleClass(VALIDINPUT, valid);\n\n                return valid;\n            } else {\n                return validateInput.call(this, input);\n            }\n        }\n    })(kendo.ui.Validator.fn.validateInput);\n\n    // 展示校验的错误信息 使用绝对定位的tooltip，防止grid的行被撑开\n    function showValidateMsg(input, that) {\n        var _input = getBorderInput(input),\n            result = that._checkValidity(input),\n            valid = result.valid,\n            fieldName = input.attr('name') || '',\n            inValidColor = IPLAT.ColorBox.INVALID_COLOR;\n\n        // grid中的校验\n        var $td = _input.closest(\"td\");\n        var inGrid = $td.length > 0;\n\n        if (!valid) {\n            var messageText = that._extractMessage(input, result.key);\n            that._errors[fieldName] = messageText;\n            var errorMessageText = \"<span class='k-icon k-i-warning'></span>&nbsp;&nbsp;\" + decode(messageText);\n\n            var toolTipOptions = {\n                showAfter: 0,\n                width: IPLAT.getCurrentStrWidth(errorMessageText, $(input).css('font-size')),\n                animation: false,\n                content: errorMessageText,\n                hide: function () {\n                    input.removeAttr('data-role');\n                    this.destroy();\n                }\n            };\n\n            // 边框颜色调整\n            _input.css(\"border-color\", inValidColor);\n            _input.css(\"color\", inValidColor);\n\n            var hoverInHandler = kendo.throttle(function () {\n                // 处理页面上可能存在的tooltip, 让其消失\n                var $otherTooltips = $(\"[data-role='tooltip']\");\n\n                if ($otherTooltips.length > 0 && !inGrid) {\n                    $.each($otherTooltips, function (i, tooltip) {\n                        $(tooltip).data('kendoTooltip').hide();\n                    });\n                }\n\n                if (inGrid) {\n                    var inputId = $td.data(\"inputId\");\n                    if (!isAvailable(inputId)) {\n                        // grid单元格进入编辑没有id 只有name\n                        var timestamp = +new Date();\n\n                        input.attr(\"id\", \"tdInput\" + timestamp);\n\n                        $td.data(\"inputId\", \"tdInput\" + timestamp); // 在td暂时存放id\n                    } else {\n                        input.attr(\"id\", inputId);\n                    }\n                }\n\n\n                if (!input.data(\"kendoTooltip\")) {\n                    input.kendoTooltip(toolTipOptions); // 初始化tooltip\n                }\n\n                var toolTip = input.data(\"kendoTooltip\");\n                toolTip.show();\n\n                // ToolTip背景色调整\n                var $toolTip = $(\"#\" + input[0]['id'] + \"_tt_active\");\n\n                $toolTip.css(\"background\", inValidColor);\n                $toolTip.find(\"div.k-callout\").css(\"border-bottom-color\", inValidColor);\n\n                // Tooltip绝对定位\n                var toolTipContainer = $toolTip.closest(\"div.k-animation-container\"),\n                    _inputOffset = _input.offset();\n\n                toolTipContainer.css(\"top\", _inputOffset.top + _input.parent().height() + 6 + \"px\");\n                toolTipContainer.css(\"left\", _inputOffset.left - (toolTip.options.width - _input.width())/2 + \"px\");\n            }, 200);\n\n            var hoverOutHandler = kendo.throttle(function () {\n                var toolTip = input.data(\"kendoTooltip\");\n                if (toolTip) {\n                    toolTip.hide();\n                }\n            }, 200);\n\n\n            // _input.hover(hoverInHandler, hoverOutHandler);\n            _input.off(\"mouseenter\");\n            _input.off(\"mouseleave\");\n\n            _input.on(\"mouseenter\", hoverInHandler);\n            _input.on(\"mouseleave\", hoverOutHandler);\n\n            input.attr('aria-invalid', true);\n        } else {\n            delete that._errors[fieldName];\n            _input.css(\"border-color\", \"\");\n            _input.css(\"color\", \"\");\n            _input.unbind(\"mouseenter\").unbind(\"mouseleave\");\n        }\n    }\n\n    // 获取边框可渲染的input\n    function getBorderInput($input) {\n\n        // nodeName属性会导致jQuery的bug https://github.com/jquery/jquery/issues/1721\n        // TAG选择器的失效 \n\n        if ($input.attr(\"name\") === \"nodeName\" && !$input.parent().hasClass(\"i-validate-helper\")) {\n            $input.attr(\"name\", \"__nodeName__\").css(\"width\", \"100%\");\n            $input.wrap(\"<div class='i-validate-helper' />\");\n            return $input.parent();\n        }\n\n        if ($input.prev(\"span\") && $input.prev(\"span\").hasClass(\"k-dropdown-wrap\")) {\n            return $input.prev(\"span\");\n        }\n\n        if (($input.closest(\"span\") && $input.closest(\"span\").hasClass(\"k-picker-wrap\")) || $input.hasClass(\"popupColumn\")) {\n            return $input.closest(\"span\");\n        }\n\n        if ($input.closest(\"div\") && $input.closest(\"div\").hasClass(\"k-multiselect\")) {\n            return $input.closest(\"div\");\n        }\n\n        if ($input.hasClass(\"popupInput\")) {\n            return $input.closest(\"span\");\n        }\n\n        return $input;\n    }\n\n    function decode(value) {\n        return value.replace(/&amp/g, '&amp;').replace(/&quot;/g, '\"').replace(/&#39;/g, '\\'').replace(/&lt;/g, '<').replace(/&gt;/g, '>');\n    }\n\n})(jQuery);\n/**\n * IPLATUI提供的工具类，依赖ui组件，需要在最后打包压缩\n */\n(function ($) {\n    // 优化 i-input-readonly 逻辑\n    $(document).on('keydown mousedown', '.i-input-readonly', function (event) {\n\n        var fixedReadOnly = function ($element) {\n            $element.unbind('keyup input');\n            $element.attr('style', \"ime-mode:disabled\");\n            var _val = $element.val();\n\n            $element.on('keyup', function () {\n                $element.val(_val);\n            });\n            $element.on('input', function () {\n                $element.val(_val);\n            });\n        };\n\n        // 处理input 和 textarea 不可编辑\n        var $input = this.nodeName === 'INPUT' ? $(this) : $(this).find('input');\n        if ($input.length) {\n            fixedReadOnly($input);\n        }\n\n        var $textarea = this.nodeName === 'TEXTAREA' ? $(this) : $(this).find('textarea');\n        if ($textarea.length) {\n            fixedReadOnly($textarea);\n        }\n\n        IPLAT.Util.stopPropagation(event);\n\n    });\n\n\n    IPLAT.Util.exportGrid = function (postData) {\n        // $.ajax({\n        //     type: 'POST',\n        //     dataType: \"json\",\n        //     url: IPLATUI.CONTEXT_PATH + \"/export\",\n        //     contentType: IPLAT.AJAX.ContentType.FORM,\n        //     data: postData\n        // });\n\n        var exportForm = document.forms[\"_eiExportForm\"];\n\n        // 页面中放置一个隐藏的iframe 处理Form提交结果\n        // https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Forms/Sending_forms_through_JavaScript\n        var exportIframe = document.getElementById(\"_eiExportIframe\");\n\n        if (isAvailable(exportForm)) {\n            document.body.removeChild(exportForm); // 清除已有的form表单\n        }\n\n        if (isAvailable(exportIframe)) {\n            document.body.removeChild(exportIframe); // 移除iframe\n        }\n\n        exportIframe = document.createElement(\"iframe\");\n        exportIframe.setAttribute(\"id\", \"_eiExportIframe\");\n        exportIframe.setAttribute(\"name\", \"_eiExportIframe\");\n        exportIframe.style.display = 'none';\n        document.body.appendChild(exportIframe);\n\n        var parentWindow = window;\n        exportIframe.addEventListener(\"load\", function () {\n            // Error contentType text/html\n            var errorMsg = $(\"#_eiExportIframe\").contents().find(\"#__eiExportError__\").html();\n            if (isAvailable(errorMsg)) {\n                parentWindow.NotificationUtil(\"\" + errorMsg, \"error\");\n            } else {\n                parentWindow.NotificationUtil(\"导出数据失败\", \"error\");\n            }\n        });\n\n\n        exportForm = document.createElement(\"form\");\n        exportForm.setAttribute(\"id\", \"_eiExportForm\");\n        exportForm.setAttribute(\"method\", \"POST\");\n        // exportForm.setAttribute(\"target\", \"_blank\");\n        exportForm.setAttribute(\"target\", \"_eiExportIframe\");\n        exportForm.setAttribute(\"action\", IPLATUI.CONTEXT_PATH + \"/export\");\n\n        var inputField = document.createElement(\"input\");\n        inputField.setAttribute(\"type\", \"hidden\");\n        inputField.setAttribute(\"name\", IPLAT.CONSTANTS.EXPORT_FLAG);\n        inputField.setAttribute(\"value\", \"true\");\n        exportForm.appendChild(inputField);\n\n        inputField = document.createElement(\"input\");\n        inputField.setAttribute(\"type\", \"hidden\");\n        inputField.setAttribute(\"name\", IPLAT.CONSTANTS.EXPORT_FILE_NAME);\n        inputField.setAttribute(\"value\", postData.exportFileName);\n        exportForm.appendChild(inputField);\n\n        inputField = document.createElement(\"input\");\n        inputField.setAttribute(\"type\", \"hidden\");\n        inputField.setAttribute(\"name\", IPLAT.CONSTANTS.EXPORT_FILE_TYPE);\n        inputField.setAttribute(\"value\", postData.exportFileType);\n        exportForm.appendChild(inputField);\n\n        inputField = document.createElement(\"input\");\n        inputField.setAttribute(\"type\", \"hidden\");\n        inputField.setAttribute(\"name\", IPLAT.CONSTANTS.EXPORT_BLOCK_ID);\n        inputField.setAttribute(\"value\", postData.exportBlockId); // TODO: 多个BlockId，导出成多个sheet\n        exportForm.appendChild(inputField);\n\n        if (isAvailable(postData.exportServiceName) && isAvailable(postData.exportMethodName)) { // 后端导出\n\n            inputField = document.createElement(\"input\");\n            inputField.setAttribute(\"type\", \"hidden\");\n            inputField.setAttribute(\"name\", IPLAT.CONSTANTS.EXPORT_SERVICE_NAME);\n            inputField.setAttribute(\"value\", postData.exportServiceName);\n            exportForm.appendChild(inputField);\n\n            inputField = document.createElement(\"input\");\n            inputField.setAttribute(\"type\", \"hidden\");\n            inputField.setAttribute(\"name\", IPLAT.CONSTANTS.EXPORT_METHOD_NAME);\n            inputField.setAttribute(\"value\", postData.exportMethodName);\n            exportForm.appendChild(inputField);\n\n            inputField = document.createElement(\"input\"); // 前台的查询条件\n            inputField.setAttribute(\"type\", \"hidden\");\n            inputField.setAttribute(\"name\", IPLAT.CONSTANTS.EXPORT_QUERY_EIINFO);\n            inputField.setAttribute(\"value\", postData.queryInfo);\n            exportForm.appendChild(inputField);\n\n        } else if (isAvailable(postData.exportEiInfo)) { // 前端导出\n            inputField = document.createElement(\"input\");\n            inputField.setAttribute(\"type\", \"hidden\");\n            inputField.setAttribute(\"name\", IPLAT.CONSTANTS.EXPORT_EIINFO);\n            inputField.setAttribute(\"value\", postData.exportEiInfo);\n            exportForm.appendChild(inputField);\n        }\n\n        document.body.appendChild(exportForm);\n        // exportIframe.appendChild(exportForm);\n\n        exportForm.submit();\n    };\n\n    /**\n     * 使EiInfo可视化\n     * @param eiInfo EiInfo对象\n     * @param element dom元素\n     */\n    IPLAT.Util.visualizeEiInfo = function (eiInfo, element) {\n        var nameToDescription = {\n            EiInfo: 'EiInfo',\n            blocks: 'EiBlock数据区',\n            extAttr: '扩展属性区',\n            meta: '元数据区',\n            status: '状态',\n            traceId: \"调用链路唯一Id\",\n            __version__: '版本'\n        };\n        var eiInfoData = [];\n        var auto_increment = 0;\n        var DEFAULT_ID = 1;\n\n        if (!eiInfo) {\n            return;\n        }\n\n\n        var createModel = function (id, name, value, parentId) {\n            var description = nameToDescription[name] ? nameToDescription[name] : '';\n            // var value = formatJsonStr(value)\n            // return {id: id, name: name, value: formatJsonStr(JSON.stringify(value)), parentId: parentId, description: description};\n            return {id: id, name: name, value: JSON.stringify(value), parentId: parentId, description: description};\n        };\n\n        var eiObjectToRow = function (object, data, parentId, isEiInfo) {\n            var name, value;\n            // 初始化EiInfo, 开始递归\n            if (isEiInfo === true) {\n                data.push(createModel(DEFAULT_ID, 'EiInfo', object, parentId));\n                auto_increment = parentId = DEFAULT_ID;\n            }\n\n            if (auto_increment) {\n                for (name in object) {\n                    if (object.hasOwnProperty(name)) {\n                        value = object[name];\n                        auto_increment++;\n                        data.push(createModel(auto_increment, name, value, parentId));\n                        if (_.isObject(value)) {\n                            eiObjectToRow(value, data, auto_increment);\n                        }\n                    }\n                }\n            }\n        };\n\n        // {} == EiInfo\n        eiObjectToRow(eiInfo, eiInfoData, null, true);\n\n        var dataSource = new kendo.data.TreeListDataSource({\n            data: eiInfoData,\n            schema: {\n                model: {\n                    id: \"id\",\n                    expanded: false\n                }\n            }\n        });\n\n        $(element).kendoTreeList({\n            dataSource: dataSource,\n            columns: [\n                {field: \"name\", title: \"属性名\", width: '250px'},\n                {field: \"description\", title: \"说明\", width: '200px'},\n                {\n                    field: \"value\", title: \"属性值\",\n                    template: \"<span class='i-click'>#=value#</span>\"\n                }\n            ]\n        });\n    };\n\n\n    /*************************************************\n     * uiLayout 高度自适应的布局 resize splitter\n     *************************************************/\n\n    /**\n     * 获取页面滚动条到顶部的距离\n     *\n     * 参考 https://segmentfault.com/a/1190000005063489\n     * @return {*}\n     */\n    IPLAT.Util.getBodyScrollTop = function () {\n        var scrollTop;\n        if (typeof window.pageYOffset !== 'undefined') { // pageYOffset指的是滚动条顶部到网页顶部的距离\n            scrollTop = window.pageYOffset;\n        } else if (typeof document.compatMode !== 'undefined' && document.compatMode !== 'BackCompat') {\n            scrollTop = document.documentElement.scrollTop;\n        } else if (typeof document.body !== 'undefined') {\n            scrollTop = document.body.scrollTop;\n        }\n        return scrollTop;\n    };\n\n    /**\n     * FIXME Grid高度自适应\n     * 获取Grid铺满屏幕高度\n     * @param options\n     * @return Number\n     */\n    IPLAT.Util.getGridFullScreenHeight = function (options) {\n        var _default = {\n            selector: null,\n            isScrollX: false,\n            isPagerPositionTop: true,\n            toolbar: true,\n            adjustHeight: 66 //通过实际情况获取\n        };\n\n        // 获取屏幕高度\n        var screenHeight = $(window).height(),\n            scrollTop = $(document).scrollTop(),\n            _options = $.extend({}, _default, options),\n            minHeight,\n            toolbarHeight,\n            gridHeight,\n            pagerHeight;\n\n        // 获取最小的高度10行 + 1行title + 下面滚动条 + toolbar + pager\n\n        // 存在滚动条时后Grid的高度\n        gridHeight = _options.isScrollX === true ? 284 : 275;\n        pagerHeight = 32;\n        toolbarHeight = _options.toolbar === true ? 32 : 0;\n\n        // 获取最小高度\n        minHeight = gridHeight + pagerHeight + toolbarHeight;\n\n        var $region = $(_options.selector);\n        if (!$region.length) {\n            return gridHeight;\n        }\n\n        // 获取region高度\n        var offset = $region.offset(),\n            top = Math.max(offset.top - scrollTop, 0),\n            regionHeight = screenHeight - top,\n            adjustHeight = _options.adjustHeight;\n\n        // 返回较大值\n        return Math.max(regionHeight - adjustHeight, minHeight);\n\n    };\n\n    /**\n     * 阻止事件冒泡\n     * @param e DOM事件\n     */\n    IPLAT.Util.stopPropagation = function (e) {\n        var event = e || window.event;\n        if (event && event.stopPropagation) {\n            event.stopPropagation();\n        } else {\n            event.cancelBubble = true;\n        }\n    };\n\n    /**\n     * 阻止浏览器默认行为\n     * @param e DOM事件\n     */\n    IPLAT.Util.preventDefault = function (e) {\n        var event = e || window.event;\n        if (event.preventDefault)\n            event.preventDefault();\n        event.returnValue = false;\n    };\n\n\n    /**\n     * 获取元素相对于屏幕的位置\n     * @param element dom 元素\n     */\n    IPLAT.Util.getElementScreenPosition = function (element) {\n        var $element = $(element),\n            scrollLeft = $(document).scrollLeft(),\n            scrollTop = $(document).scrollTop();\n\n        return {\n            top: $element.offset().top - scrollTop,\n            left: $element.offset().left - scrollLeft,\n            height: $element.outerHeight(),\n            width: $element.outerWidth()\n        }\n    };\n\n\n    /**\n     * 防止弹出框的造成的屏幕窗口抖动\n     */\n    IPLAT.Util.preventWindowShake = function () {\n        var maxHeight = 0;\n        var _resetContainer = _.debounce(function () {\n            $(document.body).css('height', maxHeight + 'px');\n        }, 100);\n        $(\"#page-container\").css('height', '');\n        $(document).on('scroll.iplat.popup', function (e) {\n            var height = document.body.scrollHeight;\n            if (height > maxHeight) {\n                maxHeight = height;\n                _resetContainer();\n            }\n        });\n    };\n\n    /**\n     * 弹出框消失后，还原屏幕窗口\n     */\n    IPLAT.Util.restoreWindow = function () {\n        var $document = $(document);\n        $document.off('scroll.iplat.popup');\n        if ($document.scrollTop() > 0) {\n            setInterval(function () {\n                var pageHeight = $('#page-container').height();\n                var bodyHeight = $(document.body).height();\n\n                if (bodyHeight > pageHeight) {\n                    $(document.body).css('height', (bodyHeight - 5) + 'px');\n                } else {\n                    $(document.body).css('height', '');\n                }\n            }, 20)\n        }\n\n    };\n\n    /**\n     * 禁止Grid滚动\n     * @param kendoGrid kendo中Grid的实例\n     */\n    IPLAT.Util.forbidKendoGridScroll = function (kendoGrid) {\n        var $content, $lockedContent;\n        // 只处理kendoGrid的实例\n        if (kendoGrid instanceof kendo.ui.Grid) {\n            $content = $(kendoGrid.content);\n            $lockedContent = $(kendoGrid.lockedContent);\n\n            if ($content.length) {\n                $content.on('mousewheel', function (e) {\n                    IPLAT.Util.preventDefault(e);\n                }, false);\n            }\n\n            if ($lockedContent.length) {\n                $lockedContent.on('mousewheel', function (e) {\n                    IPLAT.Util.preventDefault(e);\n                }, false);\n            }\n        }\n    };\n\n    /**\n     * 重启Grid滚动\n     * @param kendoGrid kendo中Grid的实例\n     */\n    IPLAT.Util.restartKendoGridScroll = function (kendoGrid) {\n        var $content, $lockedContent;\n        if (kendoGrid instanceof kendo.ui.Grid) {\n            $content = $(kendoGrid.content);\n            $lockedContent = $(kendoGrid.lockedContent);\n\n            // 分为固定列和非固定列处理\n            if ($content.length) {\n                $content.off('mousewheel');\n            }\n            if ($lockedContent.length) {\n                $lockedContent.off('mousewheel');\n            }\n        }\n    };\n\n    /**\n     * UI Layout\n     */\n\n    $(window).load(function () {\n        // block-content 需要自适应高度\n        var fitHeightSelector = \".\" + IPLATUI.Config.EFPage.fitHeightClass;\n        var $regionContent = $(fitHeightSelector);\n\n        if ($regionContent.length > 0) {\n            _platFitHeight();\n            $(window).on(\"resize\", kendo.throttle(_platFitHeight, 200));\n        }\n    });\n\n    function _platFitHeight() {\n        var fitHeightSelector = \".\" + IPLATUI.Config.EFPage.fitHeightClass;\n        var $regionContent = $(fitHeightSelector);\n\n        if ($regionContent.length > 0) {\n            var $window = $(window),\n                $page = $(\"#page-container\"),\n                $main = $(\"#main-container\"),\n                $form = $(\"form.i-form\");\n\n            var windowH = $window.height(),\n                pageHeaderH = $(\"#ef_form_head\").outerHeight(),\n                regionHeaderH = $(\".i-region>.i-region-header\").outerHeight(),\n                formPaddingBottom = IPLATUI.Config.EFPage.paddingBottom ||\n                    $form.css(\"padding-bottom\").replace(\"px\", \"\") * 1; // 8px\n\n            // var $lastRegion = $form.children(\"div.i-region\").last();\n            // $lastRegion.css({\n            //     \"margin-bottom\": 0\n            // });\n            //\n            // // EFRegion的border 2px\n            // var borderH = $lastRegion.outerHeight() - $lastRegion.innerHeight();\n\n            var offsetH = 0;\n\n            // 计算每个元素的offset\n            $regionContent.each(function () {\n                var $content = $(this),\n                    borderH = $content.data(\"borderH\") || 0;\n\n                offsetH = borderH + formPaddingBottom;\n\n                var fitContentH = autoFitHeight($content, offsetH);\n                $content.outerHeight(fitContentH);\n            });\n        }\n    }\n\n\n    // 页面纵向滚动条\n\n    // 元素需要resize\n\n    // 元素的初始高度要适应\n\n\n    /**\n     *  根据元素的当前定位，获取充满window的高度，当前页面不能存在滚动条\n     *\n     * @param element DOM元素节点，第二个参数为可选参数，考虑父元素border margin后的偏移量\n     * @return {number} 元素的outerHeight\n     */\n    function autoFitHeight(element) {\n        var $window = $(window),\n            windowH = $window.height(),\n            offsetH = arguments[1] || 0; // 考虑父元素border margin后的偏移量\n\n        var $element = $(element),\n            contentOffset = $element.offset();\n\n        return windowH - contentOffset.top - offsetH;\n    }\n\n\n})(window.jQuery);"]}